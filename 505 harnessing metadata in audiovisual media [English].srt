1
00:00:12,023 --> 00:00:13,852
hello good afternoon

2
00:00:14,059 --> 00:00:16,450
welcome to session 5:

3
00:00:16,045 --> 00:00:19,058
5 harnessing meta data in audiovisual
media

4
00:00:19,058 --> 00:00:22,132
I've heard we're competing with the
injured swift talk so

5
00:00:23,032 --> 00:00:28,058
get intimate with your neighbors here I
my name is Adam Sonnanstine

6
00:00:28,058 --> 00:00:32,059
I move engineer on the V Foundation team
and today we are going to talk about of

7
00:00:32,059 --> 00:00:32,105
course

8
00:00:33,005 --> 00:00:36,048
meta-data so what do I mean by meta data
well

9
00:00:36,048 --> 00:00:39,134
for the purpose of this talk we're going
to find meditated to mean any data that

10
00:00:40,034 --> 00:00:41,117
is stored in movie files

11
00:00:42,017 --> 00:00:46,017
streaming presentations any other sort
of audio-visual presentation

12
00:00:46,017 --> 00:00:51,026
that def describes the primary data like
the audio and video that we think about

13
00:00:51,026 --> 00:00:53,028
when we think of this or two
presentations

14
00:00:53,028 --> 00:00:57,120
some examples are always helpful when
you should be familiar with is iTunes

15
00:00:58,002 --> 00:00:58,091
meta-data

16
00:00:59,009 --> 00:01:03,078
when you have the third the song names
and the the artists in the album artwork

17
00:01:03,078 --> 00:01:07,120
in your iTunes library all these things
are stored as the third have meditated

18
00:01:08,002 --> 00:01:09,561
I'm talking about today

19
00:01:09,759 --> 00:01:15,170
in the files in your iTunes library
besides iTunes meditated we also have

20
00:01:15,017 --> 00:01:19,076
things like location information if you
have a movie that you took with your

21
00:01:19,229 --> 00:01:22,321
your iPhone or some other location
enabled device and you played in

22
00:01:23,149 --> 00:01:24,170
QuickTime Player

23
00:01:24,017 --> 00:01:27,049
that will show up in the info window to
tell you where you were when you took

24
00:01:27,049 --> 00:01:27,708
that

25
00:01:28,149 --> 00:01:31,221
the movie that's also stored as the kind
of meta-data that we're talking about

26
00:01:31,869 --> 00:01:32,500
today

27
00:01:32,005 --> 00:01:36,071
and for new features we know that you
not always standing still when you're

28
00:01:37,016 --> 00:01:37,111
taking your videos

29
00:01:38,011 --> 00:01:41,047
so new NIOS Aiden OS 10 yosemite

30
00:01:41,047 --> 00:01:45,066
we have features that support things
like dynamic location

31
00:01:45,066 --> 00:01:48,070
at a location that changes over time so
these are some new features were gonna

32
00:01:49,006 --> 00:01:50,345
be talking about later on

33
00:01:50,399 --> 00:01:54,427
that we're pretty excited about and in
addition to

34
00:01:54,679 --> 00:01:58,696
location this really applies to any
third meta data that you might want to

35
00:01:58,849 --> 00:01:59,340
add

36
00:01:59,034 --> 00:02:03,091
that changes over time in your movie
this is a screenshot of a demo app will

37
00:02:03,091 --> 00:02:03,167
show you later

38
00:02:04,067 --> 00:02:08,686
but the circle in the the annotation
text that off toward as the same sort of

39
00:02:09,289 --> 00:02:12,317
time meditative for the as the time
location

40
00:02:12,569 --> 00:02:15,750
hopefully that would wrap it a little
bit I

41
00:02:15,075 --> 00:02:17,174
talk about what we're gonna cover today
we're gonna start I'm gonna give you an

42
00:02:18,074 --> 00:02:20,075
intro to meditate in a V Foundation

43
00:02:20,084 --> 00:02:23,091
some other classes that have been around
for a while for

44
00:02:23,091 --> 00:02:27,090
describing all sorts meta-data how to
inspect that and how to author

45
00:02:27,909 --> 00:02:30,926
going to talk more about these new times
meta data features

46
00:02:31,079 --> 00:02:34,104
and then we give you some best practices
including some

47
00:02:34,329 --> 00:02:37,900
privacy things to keep in mind and some
other best practices

48
00:02:37,009 --> 00:02:40,568
surfers topic meditate in a V Foundation

49
00:02:41,459 --> 00:02:44,515
well kinda classes are we going to be
using to describe a meta-data

50
00:02:45,019 --> 00:02:49,250
well our primary model object that we
used to describe

51
00:02:49,025 --> 00:02:52,124
both movie files or re-arm

52
00:02:52,349 --> 00:02:56,760
you know it's a live streams is a BF
that in a bf it can contain

53
00:02:56,076 --> 00:02:59,335
any number love if the meta data item
object

54
00:03:00,019 --> 00:03:03,250
and each AB meditative item instance

55
00:03:03,025 --> 00:03:06,039
represent a single peace dove meta-data

56
00:03:06,039 --> 00:03:09,106
either your track name or your album art
even your

57
00:03:10,006 --> 00:03:14,045
location stuff that's going to be
separate pieces have meta-data

58
00:03:14,099 --> 00:03:18,174
in our Runtime Environment a closer look
at TV meta data item

59
00:03:18,849 --> 00:03:23,840
at its core it has two properties the
first as identify which is actually a

60
00:03:23,084 --> 00:03:23,165
new property

61
00:03:24,065 --> 00:03:27,066
and that is going to describe the kinda
meta-data the you have

62
00:03:27,075 --> 00:03:30,103
in this example we have the song name I
ended

63
00:03:31,003 --> 00:03:35,048
represented by this long symbol name AB
meta-data identifiers iTunes metadata

64
00:03:35,048 --> 00:03:36,050
song name

65
00:03:36,005 --> 00:03:40,024
and then you have the value which is the
actual payload of the metadata item

66
00:03:40,519 --> 00:03:47,519
for for song name it the name a song as
a string as an example for cover art

67
00:03:47,549 --> 00:03:51,230
a you can see the value doesn't have to
be a string it can be

68
00:03:51,023 --> 00:03:54,039
image or any other object that

69
00:03:54,039 --> 00:03:57,043
supports both the NFL object in Ennis
copying protocol of

70
00:03:57,079 --> 00:04:01,164
now if you've used a beam edited item in
the past you might be familiar with

71
00:04:02,064 --> 00:04:05,673
the key in key space properties well the
identifiers

72
00:04:06,249 --> 00:04:09,430
mention that was new its new because
that the combination

73
00:04:09,043 --> 00:04:12,332
love the old properties key and key
space I'm not gonna be talking much

74
00:04:12,719 --> 00:04:13,782
about kinky space today

75
00:04:14,349 --> 00:04:18,410
mostly gonna be talking about identify
re going forward as the way to describe

76
00:04:18,041 --> 00:04:22,108
your meta data to take a look at some of
the built-in identifiers we have

77
00:04:23,008 --> 00:04:26,070
this is just a tiny sampling there's a
lot of them you can find them in a beam

78
00:04:26,007 --> 00:04:27,075
edited identifiers

79
00:04:28,038 --> 00:04:32,104
I've arrange them here according roughly
two the old notion of Keith Spaeth

80
00:04:33,004 --> 00:04:37,039
am so that's to serve a sampling of the
kinda meta data that we already know

81
00:04:37,039 --> 00:04:40,047
that you might want to represent

82
00:04:40,047 --> 00:04:43,092
going back to the mid 80 I am itself

83
00:04:43,092 --> 00:04:47,174
we have a property that's also new
called datatype which describes the

84
00:04:48,074 --> 00:04:49,103
native data type

85
00:04:50,003 --> 00:04:53,090
that your meta data is representing for
the case have our song name

86
00:04:53,009 --> 00:04:57,011
it stored as the strength that we see
the datatype is a utf8 string

87
00:04:57,092 --> 00:05:00,097
in these string constants that represent
the different datatypes

88
00:05:01,042 --> 00:05:04,095
are all defined in CM meta-data dot H

89
00:05:04,095 --> 00:05:08,118
and besides the datatype a property we
also have

90
00:05:09,018 --> 00:05:12,117
several type coercion properties that
you can use if you know you wanna get

91
00:05:13,017 --> 00:05:14,035
your payload

92
00:05:14,035 --> 00:05:17,088
in the form above a certain type
objective the object

93
00:05:17,088 --> 00:05:20,161
to have string value number value date
value in data value

94
00:05:21,061 --> 00:05:24,104
and those are going to give you exactly
what you'd expect

95
00:05:25,004 --> 00:05:28,100
for the case love where native paler the
string

96
00:05:29,000 --> 00:05:32,014
only string values gonna give you an
interesting answer the rest will give

97
00:05:32,014 --> 00:05:33,036
you know

98
00:05:33,036 --> 00:05:36,098
for artwork example will appeal to the
Jay pag image

99
00:05:36,098 --> 00:05:40,132
the the top three are gonna give you
know and the data value is gonna give

100
00:05:41,032 --> 00:05:42,126
you the end a stated that you're looking
for

101
00:05:43,026 --> 00:05:46,054
to grabbed a bite up the Jaipur image

102
00:05:46,054 --> 00:05:50,087
there are examples where you can have
more than one non mil

103
00:05:50,087 --> 00:05:54,160
type coercion method and one its
creation date: if you have

104
00:05:55,006 --> 00:05:59,011
the date represented as a standard
string format for dade

105
00:05:59,065 --> 00:06:02,106
you can either get the actual string
that was

106
00:06:03,006 --> 00:06:08,010
a stored that way or you can ask the
meta data item to give you an instant

107
00:06:08,001 --> 00:06:10,022
Savannah State that describes the same
thing

108
00:06:10,031 --> 00:06:14,099
in a more convenient representation so
that's your brief intro to EV meta data

109
00:06:14,099 --> 00:06:14,175
item

110
00:06:15,075 --> 00:06:18,103
we'll be talking a lot about it
throughout the talk let's go back to EBS

111
00:06:19,003 --> 00:06:21,055
its so we can see how we actually get
these metadata

112
00:06:21,055 --> 00:06:25,057
item to the easiest way is just to get
asked for all of the meta-data that

113
00:06:25,075 --> 00:06:26,084
applies to the entire asset

114
00:06:27,065 --> 00:06:30,081
there are types the meta-data that apply
to just part of the effort

115
00:06:30,081 --> 00:06:33,149
but this is how you get the meta-data
like the location in the song title it

116
00:06:34,049 --> 00:06:36,130
applies to the entire after

117
00:06:37,003 --> 00:06:40,030
there's also a way to get justice up to
the meta-data

118
00:06:40,057 --> 00:06:43,091
we have this notion a meta data format
but I'm not to be talking about too much

119
00:06:43,091 --> 00:06:43,143
today

120
00:06:44,043 --> 00:06:47,106
but you can use it to get just that
subset love the meta-data

121
00:06:48,006 --> 00:06:52,044
the for our example when we're getting
iTunes meta-data we're going to use that

122
00:06:52,044 --> 00:06:55,129
AB metadata format iTunes metadata in
grab all about using

123
00:06:56,029 --> 00:06:59,056
the meta data for format method

124
00:06:59,056 --> 00:07:02,124
and then from there we can use the
filtering method meta data items from a

125
00:07:03,024 --> 00:07:04,070
rate filtered by identifiers

126
00:07:04,007 --> 00:07:08,055
to get just the items that correspond to
the song name identify your

127
00:07:09,018 --> 00:07:12,021
they might be wondering why you can have
more than one song name

128
00:07:12,021 --> 00:07:15,040
in a single asset will get back to that
in just a little bit

129
00:07:15,004 --> 00:07:18,050
first i wanna talk about how you load
the payload

130
00:07:18,086 --> 00:07:21,139
up committed item wave emitted item

131
00:07:22,039 --> 00:07:26,043
conforms to the ABA thinkers key-value
loading protocol the protocol that we

132
00:07:26,079 --> 00:07:28,110
define ourselves in a B foundation

133
00:07:29,001 --> 00:07:32,065
in a lot of our core model object confer
conform to it

134
00:07:32,074 --> 00:07:36,125
because a lot of times when you getting
a BF that or navy medic item we have an

135
00:07:37,025 --> 00:07:39,056
actually load the data behind it yet

136
00:07:39,056 --> 00:07:43,078
you can use this method mood values a
thinker slifer keys

137
00:07:43,078 --> 00:07:47,081
to load the specific values you want and
I'll do that a synchronously few not

138
00:07:47,081 --> 00:07:48,113
blocking your main thread

139
00:07:49,013 --> 00:07:52,016
with some sort of thinking is I or
something like that

140
00:07:52,043 --> 00:07:56,064
to for this case we have omitted item
we're looking for the value

141
00:07:56,064 --> 00:07:59,085
so we just slowed the key value and when
we get our completion handler

142
00:07:59,085 --> 00:08:02,126
we're gonna check the status to make
sure that that loading succeeded

143
00:08:03,026 --> 00:08:06,071
in assuming that we did week and then
just go ahead and grab the value in you

144
00:08:06,071 --> 00:08:06,102
that

145
00:08:07,002 --> 00:08:10,026
have we see fit so back to that whole

146
00:08:10,026 --> 00:08:13,089
multiple titles in one meta one asset

147
00:08:13,089 --> 00:08:16,097
thing one reason we might have that is
if we have

148
00:08:17,069 --> 00:08:20,081
the asset localized in multiple
languages

149
00:08:20,081 --> 00:08:23,147
to an African have the same meta data
items in multiple languages

150
00:08:24,047 --> 00:08:28,078
the example that we're going to talk
about is QuickTime user data for name

151
00:08:28,078 --> 00:08:31,145
that identify your if you use this
identify ring your files

152
00:08:32,045 --> 00:08:35,064
in QuickTime Player for example can pick
up the title

153
00:08:35,064 --> 00:08:39,064
in display in the title bar so this is
just yet another example of how many

154
00:08:39,064 --> 00:08:40,095
that is used

155
00:08:40,095 --> 00:08:44,354
in our applications and this particular
example other movie

156
00:08:45,209 --> 00:08:50,290
actually has a look the title available
in both English and Spanish

157
00:08:50,029 --> 00:08:53,118
so here we have the English as the
system language so quick time player

158
00:08:54,018 --> 00:08:55,023
picks that up

159
00:08:55,023 --> 00:08:59,025
that picks up the English title but if
we set our system language to Spanish

160
00:08:59,025 --> 00:09:02,030
it'll pick up the Spanish localization
that title instead

161
00:09:02,075 --> 00:09:07,141
in these are represented as two distinct
pieces UHV meta data within the file

162
00:09:08,041 --> 00:09:10,130
in the way that you distinguish between
them is that they'll have different

163
00:09:11,003 --> 00:09:14,024
values for these final two properties
have a beam edited item

164
00:09:14,051 --> 00:09:18,082
locale an extended language tag extended
language tag is new

165
00:09:18,082 --> 00:09:22,134
in this release I to BCP 47 language tag
and it's particularly useful when you

166
00:09:23,034 --> 00:09:25,060
want to distinguish written languages

167
00:09:25,006 --> 00:09:29,105
so that a that's how one reason why you
might have more than one

168
00:09:30,059 --> 00:09:33,104
merited item with the same identify your

169
00:09:34,004 --> 00:09:38,009
I mentioned before that not all
meta-data applies to the entire after

170
00:09:38,054 --> 00:09:42,058
well one example love that is meta data
only applies to particular track

171
00:09:42,094 --> 00:09:46,141
for this example we have a a special
label attached to a subtitle track

172
00:09:47,041 --> 00:09:50,057
called sth the stands for subtitles for
the Deaf for hearing

173
00:09:50,057 --> 00:09:53,096
a hard of hearing and that's basically

174
00:09:53,096 --> 00:09:56,100
just a moron rich former subtitles

175
00:09:57,036 --> 00:10:00,071
that includes things like labeling who's
talking and

176
00:10:00,071 --> 00:10:04,083
mentioning sound effects that are vital
to the the understanding

177
00:10:04,083 --> 00:10:07,149
and we talked a little bit more about
sth

178
00:10:08,049 --> 00:10:11,096
and accessibility in general last year
and are preparing and presenting media

179
00:10:11,096 --> 00:10:12,140
for accessibility talk

180
00:10:13,004 --> 00:10:16,005
for checking up for more details for the
purposes of this talk

181
00:10:16,041 --> 00:10:19,126
just know that to get this as the age
label here it involves setting track

182
00:10:20,026 --> 00:10:21,092
specific metadata

183
00:10:21,092 --> 00:10:26,101
so let's talk about how you actually
find out after track has this Medina

184
00:10:27,001 --> 00:10:32,004
well you can use a BF that track and it
has pretty much the exact same API as a

185
00:10:32,004 --> 00:10:32,012
BF that

186
00:10:32,084 --> 00:10:35,088
for reading meta-data you have committed
a property

187
00:10:35,088 --> 00:10:38,100
you have term editor for format method

188
00:10:39,000 --> 00:10:42,015
into if we wanna find all the tag
characteristic

189
00:10:42,015 --> 00:10:45,071
that are in a medida her in a in a nasa
track

190
00:10:45,071 --> 00:10:49,084
when asked the track for its metadata
for the format QuickTime user data

191
00:10:49,084 --> 00:10:52,143
and once we have that we use that same
filtering method we saw before

192
00:10:53,043 --> 00:10:56,088
in order to get all love the items that
have

193
00:10:56,088 --> 00:11:00,099
the identifiers QuickTime user data tag
characteristic

194
00:11:00,099 --> 00:11:04,166
so this is a one example of tech
characteristics is the sth that I just

195
00:11:05,066 --> 00:11:05,165
talked about

196
00:11:06,065 --> 00:11:09,106
and it's the payload love that metadata
item that tells you what kind

197
00:11:10,006 --> 00:11:13,075
ab tak characteristic you're dealing
with we'll talk a little bit more detail

198
00:11:13,075 --> 00:11:13,171
about

199
00:11:14,071 --> 00:11:17,162
sth in how you operate in just a little
bit

200
00:11:18,062 --> 00:11:21,063
so going back to our list %uh
identifiers

201
00:11:21,072 --> 00:11:25,087
you might have noticed some patterns if
you're looking closely

202
00:11:25,087 --> 00:11:29,095
each of these groups has their own
version of a title or a song name or

203
00:11:30,067 --> 00:11:31,110
something like that

204
00:11:32,001 --> 00:11:35,016
we noticed that and come up with our own

205
00:11:35,025 --> 00:11:38,554
special kind identify recalled the
common identify your

206
00:11:38,779 --> 00:11:42,870
which can be used when you want to look
up safer this example a title without

207
00:11:42,087 --> 00:11:43,142
carrying exactly

208
00:11:44,042 --> 00:11:48,094
how it stored in your file them for
copyright here we also have

209
00:11:48,094 --> 00:11:51,181
a comedy in a fire that represent
copyright these are not the only come

210
00:11:52,081 --> 00:11:52,179
identify risk

211
00:11:53,079 --> 00:11:56,083
there's a whole list oven but these are
just two examples

212
00:11:57,019 --> 00:12:01,026
so if we go back to our example were
looking for iTunes song name

213
00:12:01,026 --> 00:12:05,093
if we don't actually care that the the
title love our asset is stored as iTunes

214
00:12:05,093 --> 00:12:06,112
meta-data

215
00:12:07,012 --> 00:12:11,019
we just won a title we can display it
somewhere you can ask the asset for

216
00:12:11,019 --> 00:12:14,358
its array of common metadata and this is
all the meta data items

217
00:12:14,529 --> 00:12:18,604
that can be represented using a common
identifiers

218
00:12:19,279 --> 00:12:23,480
and any use that same filtering method
we've been using to filter down to just

219
00:12:23,048 --> 00:12:25,054
the ones that have the common identify
your title

220
00:12:26,008 --> 00:12:31,267
in you can go from there with your title
and also worth noting is that

221
00:12:31,339 --> 00:12:35,080
a bf the track has the same property
come in today to

222
00:12:35,008 --> 00:12:39,017
you can do the same thing over there as
well

223
00:12:39,089 --> 00:12:42,390
so that is your brief introduction to
inspecting meta data with the V

224
00:12:42,039 --> 00:12:43,081
Foundation

225
00:12:43,081 --> 00:12:46,138
talk a little bit about authoring if you
wanna make your own files that have

226
00:12:47,038 --> 00:12:51,041
the location or iTunes metadata in them
well we have several

227
00:12:51,041 --> 00:12:54,046
different classes that can write movie
files

228
00:12:54,046 --> 00:12:59,072
a VFX work session ABS writer in the
capture movie an audiophile upwards

229
00:12:59,072 --> 00:13:02,083
in these all have the exact same
read/write property called simply

230
00:13:02,083 --> 00:13:03,085
meta-data

231
00:13:03,085 --> 00:13:06,131
you given a rave meta data items and
then that will be written out to the

232
00:13:07,031 --> 00:13:08,070
file

233
00:13:08,007 --> 00:13:12,054
similarly four track specific meta data
like this tag characteristics

234
00:13:13,017 --> 00:13:17,072
you can use in ABS the writer input
which also has the exact same

235
00:13:17,072 --> 00:13:20,074
property now you're not limited

236
00:13:20,074 --> 00:13:24,120
to just writing out meta data that you
got from somewhere else like another

237
00:13:25,002 --> 00:13:27,017
file through the API if you've been
looking at

238
00:13:27,035 --> 00:13:30,089
you can also create your own editor
items with the mutable subclass

239
00:13:30,089 --> 00:13:33,137
love meta data item and as you might
expect this just has read/write

240
00:13:34,037 --> 00:13:35,075
properties for all

241
00:13:35,075 --> 00:13:38,080
the up properties in a beam edited item

242
00:13:39,025 --> 00:13:44,082
so for use an example %uh writing
subtitle track that is marked as sth

243
00:13:44,082 --> 00:13:47,090
well its actually two different tack
characteristics that you have to use

244
00:13:48,062 --> 00:13:51,094
is that will create two different
metadata item was at both the

245
00:13:51,094 --> 00:13:52,099
identifiers

246
00:13:52,099 --> 00:13:56,448
to the that identify we just saw the
QuickTime user data tagged

247
00:13:57,339 --> 00:13:58,520
characteristic

248
00:13:58,052 --> 00:14:01,100
but one of them will set the value to
transcribe spoken dialogue for

249
00:14:02,000 --> 00:14:02,097
accessibility

250
00:14:02,097 --> 00:14:05,150
and the other will be described music
and sound for accessibility

251
00:14:06,005 --> 00:14:10,059
then we get the subtitle a after writer
input that's gonna writer subtitle track

252
00:14:11,004 --> 00:14:16,010
and set that array of the two items on
our asset writer input

253
00:14:16,001 --> 00:14:20,065
that tell you the author a subtitle
track that is a marked as sth

254
00:14:20,074 --> 00:14:23,080
justina just one example love you think
tag characteristic

255
00:14:23,008 --> 00:14:27,041
and evening beautiful Medina item
special note about

256
00:14:28,013 --> 00:14:31,018
ABS at export session by default

257
00:14:31,063 --> 00:14:34,088
the export session is actually gonna
take any of the meta-data that

258
00:14:34,088 --> 00:14:37,123
in the the source asset that your
exporting

259
00:14:38,023 --> 00:14:41,077
its gonna copy that over to the output
file

260
00:14:41,077 --> 00:14:44,141
now that's not the case if you set meta
data on its metadata property

261
00:14:45,041 --> 00:14:48,045
that'll be the signal to tell the export
session to ignore the meta-data in the

262
00:14:48,081 --> 00:14:48,172
source file

263
00:14:49,072 --> 00:14:52,093
and instead right just which you put on
the property

264
00:14:52,093 --> 00:14:56,097
so if you want to do augmentation above
the meta-data or some other

265
00:14:56,097 --> 00:14:59,175
sort of modification you wanna grab that
a rave meta-data

266
00:15:00,075 --> 00:15:04,104
make a mutable copy do any adjustments
the you want and then set that

267
00:15:04,779 --> 00:15:08,690
on the meta-data property that's just a
quick note about expert session

268
00:15:08,069 --> 00:15:12,113
last note about offering meta-data is
HTTP Live Streaming this is actually a

269
00:15:13,013 --> 00:15:13,085
new feature

270
00:15:13,085 --> 00:15:16,118
in I was 8 OS 10 yosemite

271
00:15:17,018 --> 00:15:20,427
and you can use the new tag called the
session data tag

272
00:15:20,589 --> 00:15:25,290
in your playlist which has to required
fields the data I D which is a lot like

273
00:15:25,029 --> 00:15:29,100
are identifiers that we're talking about
you are I which can point to the payload

274
00:15:30,000 --> 00:15:32,093
or a value which directly specifies the
payload

275
00:15:32,093 --> 00:15:36,002
and optionally some language information
here's an example that shows a very

276
00:15:36,839 --> 00:15:40,580
similar to what we saw before with the
titles and two different languages

277
00:15:40,058 --> 00:15:45,082
but this is the mark up the you'd use
for HTTP Live Streaming

278
00:15:45,082 --> 00:15:48,091
the for more information on reading and
writing matter they don't we do have

279
00:15:48,091 --> 00:15:49,112
some sample code

280
00:15:50,012 --> 00:15:54,068
it's called AB meta-data editor and for
more information about

281
00:15:54,068 --> 00:15:57,116
the details have writing HTTP Live
Streaming meta-data

282
00:15:58,016 --> 00:16:01,060
see the the document that this URL

283
00:16:01,006 --> 00:16:04,040
I so that is a crash course in meta data
in a V Foundation

284
00:16:04,094 --> 00:16:07,183
our next topic is time to meta data

285
00:16:08,029 --> 00:16:11,054
the time to meditate although I mention
we have new features it is not a new

286
00:16:11,279 --> 00:16:12,920
concept

287
00:16:12,092 --> 00:16:16,099
we supported the notion of chapters for
quite some time in conceptually chapters

288
00:16:16,099 --> 00:16:17,164
are just an example of time

289
00:16:18,064 --> 00:16:22,091
meta-data each of these chapter markers
it's just a piece a better day to

290
00:16:22,091 --> 00:16:25,098
that is describing a particular a

291
00:16:25,098 --> 00:16:28,117
range the time line up the movie

292
00:16:29,017 --> 00:16:33,039
in that all that time to meditate is
just meta data associated with

293
00:16:33,039 --> 00:16:36,110
range have time and for filler Lee

294
00:16:37,001 --> 00:16:40,035
with are looking are dynamic location
example

295
00:16:40,044 --> 00:16:43,045
we have the path that's drawn here
that's really just composed

296
00:16:43,045 --> 00:16:47,132
love a number love pieces have met a
data indicating the current location

297
00:16:48,032 --> 00:16:52,111
each one of them associated with a
particular time in the movies time-line

298
00:16:52,399 --> 00:16:56,990
30 demonstrate I QuickTime Player
features with dynamic location

299
00:16:56,099 --> 00:17:00,152
in Yosemite I wanna bring my colleague
felony up to the stage for a demo

300
00:17:01,052 --> 00:17:05,061
tag I'm here to demonstrate how to read
and playback meta-data

301
00:17:05,061 --> 00:17:08,890
using QuickTime Player yet I have a
movie fine

302
00:17:09,439 --> 00:17:12,463
which has both audio and video and time

303
00:17:12,679 --> 00:17:15,730
location data stored in a different
track

304
00:17:15,073 --> 00:17:18,532
so now if I bring this up and QuickTime
Player

305
00:17:19,189 --> 00:17:22,198
this is the usual you I for audio and
video

306
00:17:22,279 --> 00:17:26,327
new analyst daniel Smith D in the movie
inspector

307
00:17:26,759 --> 00:17:30,774
you can see a map for you if your movie
file has location data

308
00:17:30,909 --> 00:17:33,914
you map you is presented along with the
Lord

309
00:17:34,409 --> 00:17:37,474
there you've recorded this radio so here

310
00:17:38,059 --> 00:17:41,066
the blue line indicates the pot maybe
Dakota do we do.

311
00:17:41,129 --> 00:17:44,820
and the Red been is an indication of the
current location

312
00:17:44,082 --> 00:17:49,111
or the location on the time line of the
movie

313
00:17:50,011 --> 00:17:54,330
so if I do in a little bit and start
playing

314
00:17:54,429 --> 00:17:59,590
you can be as the movie progresses the
bend location is being updated

315
00:17:59,059 --> 00:18:03,348
to be in sync with the video

316
00:18:03,879 --> 00:18:07,080
I can drag the scrubber around and you
see the been

317
00:18:07,008 --> 00:18:10,707
moving back and forth I can also go

318
00:18:10,779 --> 00:18:15,220
and click at any point in the map

319
00:18:15,022 --> 00:18:18,046
and you see the media seek to that
location to present

320
00:18:18,046 --> 00:18:22,051
bed your media wats menu it at that
location

321
00:18:22,096 --> 00:18:26,182
this is map view in QuickTime Player on
with Dan yes maybe

322
00:18:27,082 --> 00:18:31,109
thanks Johnny so let's talk about what
we just saw their

323
00:18:32,009 --> 00:18:36,084
so that location information was stored
as time too many data in the file

324
00:18:36,084 --> 00:18:40,173
in order to have Quicktime Player draw
that information on the map

325
00:18:40,929 --> 00:18:45,026
we use in a bf reader to read all of the
location information from

326
00:18:45,899 --> 00:18:50,690
that after and because times when data
is stored in its own track

327
00:18:50,069 --> 00:18:53,073
we use in a BF 3 to track up wit to read
that data

328
00:18:54,009 --> 00:18:58,058
im you to new class called a bf reader
output meta-data adapter

329
00:18:58,139 --> 00:19:01,180
that knows how to give us that data in
the form have a class called

330
00:19:01,549 --> 00:19:05,571
EV time to meditate a group and then we
from there we can grab each location in

331
00:19:05,769 --> 00:19:06,610
dry that path

332
00:19:06,061 --> 00:19:09,098
on the map to a tee time benedita group

333
00:19:09,098 --> 00:19:13,497
is a very simple class it's really just
a few properties in array of meta-data

334
00:19:14,379 --> 00:19:14,447
items

335
00:19:15,059 --> 00:19:18,140
combined with a time range to describe
where in the movie

336
00:19:18,869 --> 00:19:21,931
that date applies

337
00:19:22,489 --> 00:19:25,558
to see a little bit a code for using ask
the reader for this purpose

338
00:19:26,179 --> 00:19:29,236
the first thing you want to do is find
the track that contains your location

339
00:19:29,749 --> 00:19:30,752
information

340
00:19:31,049 --> 00:19:34,123
we'll talk more about how to do that in
just a second and any use that track to

341
00:19:34,789 --> 00:19:35,350
create

342
00:19:35,035 --> 00:19:39,994
a track %uh f3 to track output any use
no output settings

343
00:19:40,309 --> 00:19:45,100
and then you create your merited adapter
with that track output

344
00:19:45,001 --> 00:19:48,460
and then in the loop you just take your
med after in called the

345
00:19:48,559 --> 00:19:52,330
next time to meditate a group method
over and over again

346
00:19:52,033 --> 00:19:55,382
doing something with each piece of data
like drawing on the map

347
00:19:55,679 --> 00:19:59,713
in till that method returns nil and then
you know there's no more data to draw

348
00:20:00,019 --> 00:20:03,070
so in terms of finding the right track
to read

349
00:20:03,007 --> 00:20:07,010
the way to do that is by examining the
tracks in your asset in looking through

350
00:20:07,001 --> 00:20:08,026
the format description

351
00:20:08,035 --> 00:20:11,123
each track to find the identifiers
you're looking for to you first start

352
00:20:12,023 --> 00:20:15,107
by getting the tracks with the media
type metadata in and for each other's

353
00:20:16,007 --> 00:20:16,083
track

354
00:20:16,083 --> 00:20:20,135
you can loop through all of its format
description usually there's only one

355
00:20:21,035 --> 00:20:24,744
and for each format description you're
gonna grab with the identifiers using

356
00:20:25,059 --> 00:20:26,068
this function

357
00:20:26,149 --> 00:20:30,200
and check whether that I don't identify
rate contains identify you're looking

358
00:20:30,002 --> 00:20:30,661
for

359
00:20:30,859 --> 00:20:34,902
in this case were looking for the
location I said 6709 identifiers 2013

360
00:20:35,289 --> 00:20:36,200
found it

361
00:20:36,002 --> 00:20:39,451
we're good to go and we can resume with
the code on the previous slide

362
00:20:39,649 --> 00:20:42,714
so that's how QuickTime Player is
drawing the maps were joined the path

363
00:20:43,299 --> 00:20:47,336
on the map before you start playback the
other thing that quick time player does

364
00:20:47,669 --> 00:20:49,716
as he saw as they can update the current
location

365
00:20:50,139 --> 00:20:53,201
while you're doing playback or even
scrubbing around in the way it does that

366
00:20:53,759 --> 00:20:54,801
work already playing

367
00:20:55,179 --> 00:20:59,215
the asset using AV player item and we're
gonna use a new class called

368
00:20:59,539 --> 00:21:03,590
AB player item meta-data output you
attach to your player item

369
00:21:03,059 --> 00:21:06,072
which often knows how to vendors data in
the form of time

370
00:21:06,072 --> 00:21:09,148
benedita group but unlike the author
reader instead of getting all the data

371
00:21:10,048 --> 00:21:10,747
up front

372
00:21:11,179 --> 00:21:15,710
you gonna be getting a piece by piece as
the movie plays

373
00:21:15,071 --> 00:21:18,076
a little bit a code you first create
your metadata output using the it with

374
00:21:19,021 --> 00:21:20,480
identifiers method

375
00:21:20,669 --> 00:21:23,676
and in this case were only interested in
a meditated it has that

376
00:21:24,369 --> 00:21:27,470
location identifiers so that's all we're
gonna get by

377
00:21:27,047 --> 00:21:30,496
opting into this way and you create a
delegate that you

378
00:21:30,919 --> 00:21:34,840
you define and that's what's going to
receive the meta-data during playback

379
00:21:34,084 --> 00:21:37,913
any set that delegate on your output and
tell us what do you want to send

380
00:21:38,669 --> 00:21:41,695
the date on

381
00:21:41,929 --> 00:21:44,950
and then you create or grab your AV
player item

382
00:21:45,139 --> 00:21:48,167
and call at output to attach your output
to the player item

383
00:21:48,419 --> 00:21:51,432
in finally make your player

384
00:21:51,549 --> 00:21:54,622
an associate your item with the player
as the current item in star playback

385
00:21:55,279 --> 00:21:58,940
it's important to get the smooth
playback experience possible

386
00:21:58,094 --> 00:22:01,108
we highly recommend that you do all of
this third setup work

387
00:22:02,008 --> 00:22:07,917
before you start playback or even attach
the item to you the player

388
00:22:07,989 --> 00:22:13,340
so a little bit a look at what your
delegate method might look like

389
00:22:13,034 --> 00:22:16,095
is only one delegate method if the
metadata output did output time to

390
00:22:16,095 --> 00:22:18,784
meditate a group from playwright Amtrak
method

391
00:22:19,639 --> 00:22:21,713
and the first thing you want to do is
grab an item that you can get your

392
00:22:22,379 --> 00:22:23,383
payload data from

393
00:22:23,419 --> 00:22:26,950
in this case to keep things simple I'm
describing the first item from the first

394
00:22:26,095 --> 00:22:26,157
group

395
00:22:27,057 --> 00:22:29,135
but keep in mind that there could be
multiple items there could be multiple

396
00:22:30,035 --> 00:22:31,044
groups

397
00:22:31,359 --> 00:22:34,470
one reason that there could be multiple
groups given to this method

398
00:22:34,047 --> 00:22:37,086
is that the medida output

399
00:22:37,509 --> 00:22:41,480
will keep track love whether the meta
data is coming in faster than your

400
00:22:41,048 --> 00:22:43,967
processing it and if it is it'll start a
batch that up

401
00:22:44,399 --> 00:22:47,483
in give you the metadata in batches when
you're done with the previous batch a

402
00:22:48,239 --> 00:22:49,720
metadata

403
00:22:49,072 --> 00:22:53,120
the moving on with your item you gonna
do this load values you think Chris Lee

404
00:22:54,002 --> 00:22:57,017
for keys dance that we talked about
before

405
00:22:57,035 --> 00:23:00,984
in this case were interested in the
value and data type properties threw in

406
00:23:01,299 --> 00:23:02,333
a load both have those

407
00:23:02,639 --> 00:23:05,720
I've omitted the air checking for
brevity here

408
00:23:05,072 --> 00:23:07,096
but you'll probably want to do that
they're checking like we had the other

409
00:23:07,096 --> 00:23:07,935
flood

410
00:23:08,799 --> 00:23:12,806
and once we have the the completion
handler we can ask the item for its data

411
00:23:13,499 --> 00:23:14,950
type

412
00:23:14,095 --> 00:23:17,324
and make sure that the data type are
prepared to handle in this case my code

413
00:23:18,179 --> 00:23:19,213
only knows how to handle

414
00:23:19,519 --> 00:23:23,554
location information in I so 6709 format
for you to make sure that's the right

415
00:23:23,869 --> 00:23:23,956
data type

416
00:23:24,739 --> 00:23:28,600
and from there we go and dispatch are
coded the main thread that'll

417
00:23:28,006 --> 00:23:31,025
update are you why for that O

418
00:23:31,619 --> 00:23:34,697
QuickTime Player is updating the
location

419
00:23:35,399 --> 00:23:39,438
meta-data during playback of course this
is not the first API

420
00:23:39,789 --> 00:23:42,861
that we've offered for reading time
meta-data during playback

421
00:23:43,509 --> 00:23:46,584
there is an existing property called
time meta-data and every player item

422
00:23:47,259 --> 00:23:50,267
by mir's say that the AV player item
edited output replaces

423
00:23:51,059 --> 00:23:55,092
that property for this for all these use
cases

424
00:23:55,389 --> 00:23:59,423
now we're not deprecating the property
yet but we do recommend if you're new to

425
00:23:59,729 --> 00:24:00,734
time to meta data

426
00:24:00,779 --> 00:24:04,812
to just adopt the meta-data output and
not worry about the property

427
00:24:05,109 --> 00:24:09,470
if you're already using the property
virgin we do recommend that you move

428
00:24:09,047 --> 00:24:09,706
over

429
00:24:10,129 --> 00:24:13,330
but just do you know that you should
make sure that

430
00:24:13,033 --> 00:24:17,252
your code is working properly after that
transition in particular I'll point out

431
00:24:17,549 --> 00:24:18,100
that the

432
00:24:18,001 --> 00:24:23,440
medida output will give you for certain
kinda HLF content will give you

433
00:24:23,539 --> 00:24:26,940
a more specific identifiers then

434
00:24:26,094 --> 00:24:31,333
the old property did for just make sure
your code is prepared to handle that

435
00:24:32,179 --> 00:24:35,226
and the last topic on reading time
meta-data is chapters

436
00:24:35,649 --> 00:24:39,710
chapters like I said I've been supported
for some time even have their own API

437
00:24:40,259 --> 00:24:43,333
chapter meta-data group best matching
preferred languages this is on

438
00:24:43,999 --> 00:24:49,080
EV after and this will give you an array
of time to meditate a group

439
00:24:49,008 --> 00:24:54,167
that contain items with the identifiers
QuickTime user data chapter

440
00:24:54,239 --> 00:24:58,243
in with the border this for some time
for QuickTime movie files

441
00:24:58,279 --> 00:25:01,293
in .m4v and new in Iowa

442
00:25:01,419 --> 00:25:06,330
8 is the and Western your seventy is
support for chapters in

443
00:25:06,033 --> 00:25:09,033
HTTP Live Streams as well as mp3 files

444
00:25:09,033 --> 00:25:12,832
now tell you more about how to author
there is HLS chapters in just a little

445
00:25:13,129 --> 00:25:14,960
bit

446
00:25:14,096 --> 00:25:17,245
for more information we have some sample
code that does

447
00:25:18,109 --> 00:25:21,140
approximately what QuickTime Player is
doing

448
00:25:21,419 --> 00:25:24,450
where it can show your your location
during playback

449
00:25:24,045 --> 00:25:27,254
we also have a a previous session about

450
00:25:27,659 --> 00:25:30,721
after reader that goes into much more
detail than I did hear called working

451
00:25:31,279 --> 00:25:34,720
with media in a V Foundation from 2011

452
00:25:34,072 --> 00:25:37,145
to tell you read in playback time
metadata our next

453
00:25:38,045 --> 00:25:41,214
time to read it in the topic is how you
can create your own movies that contain

454
00:25:41,619 --> 00:25:42,633
times meta-data

455
00:25:42,759 --> 00:25:45,820
we saw the screenshot before and I
mentioned that these annotations are

456
00:25:46,369 --> 00:25:48,374
stored as times meta-data

457
00:25:48,419 --> 00:25:52,427
and to show you this demo app I'd like
to invite Shoni back up on stage

458
00:25:52,499 --> 00:25:55,820
to demo it this time let's look at an
apt

459
00:25:55,082 --> 00:25:59,741
on how to auto your own custom meta data
in your movie files

460
00:26:00,479 --> 00:26:04,479
killer I have a video and if I would
like to share some notes

461
00:26:04,479 --> 00:26:07,524
but my friend who's good at mixing
colors in a movie

462
00:26:07,929 --> 00:26:10,990
I can now do that within the app

463
00:26:11,539 --> 00:26:16,634
to add annotations I use 8 to finger
gesture

464
00:26:17,489 --> 00:26:20,553
I can use a pen gestured to the size and
then

465
00:26:21,129 --> 00:26:24,157
add a comment

466
00:26:24,409 --> 00:26:27,505
which is enough for my a whoever looks
at the media later

467
00:26:28,369 --> 00:26:33,395
to fix the colors there and then I begin
playback

468
00:26:33,629 --> 00:26:37,631
and as playback progresses I tracked the
SoCal did where

469
00:26:37,649 --> 00:26:41,687
I want this to be fixed and now that I
have this annotation

470
00:26:42,029 --> 00:26:48,081
and I I can write it out along with the
audio and video to do that I hit export

471
00:26:48,549 --> 00:26:53,090
and now we see if a deeply love you
control over it shows the exported movie

472
00:26:53,009 --> 00:26:58,478
along with the meta data which was
written to hit so if i start playback

473
00:26:58,559 --> 00:27:01,595
you see the annotations morning along
the time line

474
00:27:01,919 --> 00:27:04,950
in the pot image I up changed

475
00:27:04,095 --> 00:27:07,174
so if I scrub back in time you can see
the

476
00:27:08,029 --> 00:27:11,320
annotation mowing you might wonder that

477
00:27:11,032 --> 00:27:15,034
the annotations babe into the video
frame it's not

478
00:27:15,034 --> 00:27:19,503
it is being rendered real-time using any
player item edited out but

479
00:27:19,809 --> 00:27:23,700
and you can change the color or the font
of the annotation

480
00:27:23,007 --> 00:27:30,007
so if I begin playback you see the
rendering is happening in real time

481
00:27:31,021 --> 00:27:35,550
that a beat and annotation writer we
have this available as a sample code as

482
00:27:35,739 --> 00:27:35,818
well

483
00:27:36,529 --> 00:27:39,840
thank you there was a great
demonstration have not only

484
00:27:39,084 --> 00:27:43,503
the playback part of it but also how to
write that data into the file

485
00:27:44,259 --> 00:27:47,332
first take a look at how that was
accomplished so we're going to use in

486
00:27:47,989 --> 00:27:49,200
ABS at writer

487
00:27:49,002 --> 00:27:53,077
to write the file and we can use ABS
writer input in order to write

488
00:27:53,095 --> 00:27:57,134
that metadata track to the file in just
like the reader side

489
00:27:58,034 --> 00:28:01,096
the writer has a new class that the
meta-data adapter

490
00:28:01,096 --> 00:28:04,155
in that class knows how to interpret
inferences

491
00:28:05,019 --> 00:28:09,073
a AB time militant group in right that
into the file

492
00:28:09,559 --> 00:28:13,593
see a little bit code first thing we're
gonna do is create

493
00:28:13,899 --> 00:28:17,950
are after writer input we're going to
use the media type

494
00:28:17,095 --> 00:28:21,414
EV media type meta-data once again no
output settings

495
00:28:22,269 --> 00:28:25,357
and we're going to have to provide a
clue to the source format

496
00:28:26,149 --> 00:28:29,183
the format of the data that we're going
to be a pending we'll talk more about

497
00:28:29,489 --> 00:28:32,515
this and why it's required on the next
flight

498
00:28:32,749 --> 00:28:36,766
anything plea create your meta data
adapter with the reference to that input

499
00:28:36,919 --> 00:28:41,012
and as you generate or receive your time
to meditate a group you'd simply use the

500
00:28:41,849 --> 00:28:42,940
append time to edit a group method

501
00:28:43,759 --> 00:28:48,070
to continue to offenders in write them
to the file

502
00:28:48,007 --> 00:28:51,095
with the deal with that force format
thing well

503
00:28:51,095 --> 00:28:54,314
it turns out that in order for EV of the
writer to

504
00:28:55,169 --> 00:28:59,210
be able to write your meta data in the
most efficient way possible

505
00:28:59,021 --> 00:29:03,680
in need to know up front exactly what
kinda meta data is going to be writing

506
00:29:03,869 --> 00:29:06,874
and this will result in you know the
most the lowest

507
00:29:07,369 --> 00:29:10,387
storage overhead in terms of the number
bites your file takes up

508
00:29:10,549 --> 00:29:14,450
and it also has affect on how efficient
it is to play back

509
00:29:14,045 --> 00:29:17,072
this kind of content you don't want to
be using too much power when you're

510
00:29:17,072 --> 00:29:17,134
playing with

511
00:29:18,034 --> 00:29:21,109
but kinda content back you do have some
options in terms of how you actually

512
00:29:22,009 --> 00:29:23,978
construct one of these form and hence

513
00:29:24,059 --> 00:29:28,126
if you're reading from a bf the reader
you can actually ask the track the

514
00:29:28,729 --> 00:29:30,807
reading from to give you it with the
format descriptions

515
00:29:31,509 --> 00:29:34,535
and use one of those if you're creating

516
00:29:34,769 --> 00:29:38,778
the medida group yourself for getting it
from some other source

517
00:29:38,859 --> 00:29:41,873
then you can use a new method called
copy format description

518
00:29:41,999 --> 00:29:45,440
that will give you back an instant up cm
format description that will do

519
00:29:45,044 --> 00:29:48,513
this job for you it's important to know
that if you go this route

520
00:29:48,909 --> 00:29:51,981
need to make sure that the content
submitted a group our comprehensive

521
00:29:52,629 --> 00:29:55,726
in terms love it containing every
combination identifiers

522
00:29:56,599 --> 00:30:00,600
datatype and language tag that you are
going to be a pending

523
00:30:00,609 --> 00:30:05,220
that is it contains an item with each
other's combinations

524
00:30:05,022 --> 00:30:08,057
and of course in the theme for many
scripts in is a thief type you need to

525
00:30:08,057 --> 00:30:10,616
see if relief that when you're done

526
00:30:11,129 --> 00:30:13,202
course there's one more way you can do
this you can create the format

527
00:30:13,859 --> 00:30:14,860
description directly

528
00:30:14,869 --> 00:30:17,940
you think or media API's in here use
this

529
00:30:17,094 --> 00:30:22,013
long name CML data format description
create with meta data specification

530
00:30:22,859 --> 00:30:22,954
function

531
00:30:23,809 --> 00:30:26,902
you gonna pass in the midday to type box
that the third admitted it we've been

532
00:30:27,739 --> 00:30:30,816
talking about this whole time with time
to enter data

533
00:30:31,509 --> 00:30:35,190
and these metadata specifications it's
just an array of dictionaries

534
00:30:35,019 --> 00:30:39,071
each dictionary contains those
combinations I was talking about before

535
00:30:39,071 --> 00:30:42,670
the identifiers datatype and optionally
extended language tag

536
00:30:43,309 --> 00:30:47,700
for you wanna make one of these meta
data specification dictionaries for each

537
00:30:47,007 --> 00:30:48,966
combination you plan to append

538
00:30:49,659 --> 00:30:54,671
for the one thing that was not obvious
about that demo is that

539
00:30:54,779 --> 00:30:57,816
we're actually writing meta-data time
today to

540
00:30:58,149 --> 00:31:01,470
that describes one particular other
track so

541
00:31:01,047 --> 00:31:04,206
for the example if these annotations
we're really just talking about

542
00:31:04,629 --> 00:31:07,714
the video track up the movie and not the
sound or anything else like that

543
00:31:08,479 --> 00:31:13,571
in tho just like we had a way of making
tracks Pacific meditated that applied to

544
00:31:14,399 --> 00:31:17,700
the entire track with this tag
characteristics with %uh before

545
00:31:17,007 --> 00:31:20,986
you also have the ability to formally
mark your meta-data track

546
00:31:21,679 --> 00:31:24,690
as describing one particular other track

547
00:31:24,069 --> 00:31:27,908
and you do that with the ad tracker
association with track I've input method

548
00:31:28,529 --> 00:31:32,605
using at the printer the after better
input to using to write your video track

549
00:31:33,289 --> 00:31:36,940
in your receiver is the input to using
to write your meta data track

550
00:31:36,094 --> 00:31:39,693
and use the Association tight meta-data
referent so

551
00:31:40,539 --> 00:31:44,547
that's how you create meta-data that
time too but also specific to particular

552
00:31:44,619 --> 00:31:46,080
track

553
00:31:46,008 --> 00:31:49,537
the next thing we did that was
interesting in that demo is that we

554
00:31:49,609 --> 00:31:51,626
actually use our own custom identifiers

555
00:31:51,779 --> 00:31:54,824
we had that big with the built-in
identifiers we don't have to use those

556
00:31:55,229 --> 00:31:56,234
you can actually build your own

557
00:31:56,729 --> 00:32:00,771
in as I mentioned before and identifiers
just a combination of Keith Basinski

558
00:32:01,149 --> 00:32:05,150
and has a particular format is just a
string but it's in a particular format

559
00:32:05,249 --> 00:32:08,263
to help you make your own custom
identifiers we have this method

560
00:32:08,389 --> 00:32:11,443
identifiers for key in key states that
the class method a navy medic

561
00:32:11,929 --> 00:32:15,974
item and there are some some rules to
follow

562
00:32:16,379 --> 00:32:18,470
your key space needs to be four
characters long if you want to use it

563
00:32:19,289 --> 00:32:20,308
for time to meditate a

564
00:32:20,479 --> 00:32:23,512
we actually recommend you to use our
built-in Keith Spaeth the QuickTime

565
00:32:23,809 --> 00:32:27,908
meta-data Keith and we also highly
recommend you use reverse DNS notation

566
00:32:28,799 --> 00:32:30,800
for your custom keys to avoid collisions

567
00:32:30,899 --> 00:32:35,450
with other kinds the meta-data to brief
code snippet you can see you can

568
00:32:35,045 --> 00:32:38,724
simply use this method to make your
custom identify your

569
00:32:39,129 --> 00:32:42,206
in and set that on the identify property
I love your beautiful medidata

570
00:32:42,899 --> 00:32:47,960
in addition to custom identifiers you
can also create your own custom data

571
00:32:47,096 --> 00:32:49,133
types

572
00:32:50,033 --> 00:32:53,302
through all familiar by now through this
presentation with some of these built-in

573
00:32:53,599 --> 00:32:55,210
data types that we define

574
00:32:55,021 --> 00:32:59,110
is a lot more than the is but we've been
using these quite heavily already

575
00:32:59,299 --> 00:33:02,348
is a really useful but sometimes you
want your data type information to

576
00:33:02,789 --> 00:33:02,885
express more

577
00:33:03,749 --> 00:33:07,790
maybe about the demesne you're working
in if you doing a serial number or

578
00:33:08,159 --> 00:33:09,207
barcode kind of thing

579
00:33:09,639 --> 00:33:13,656
you might want to define a data type
that's the sort of your number as string

580
00:33:13,809 --> 00:33:13,875
datatype

581
00:33:14,469 --> 00:33:18,538
or barcode image as Jay pag datatype so
you have more specific information about

582
00:33:19,159 --> 00:33:21,203
what your meta data actually contains

583
00:33:21,599 --> 00:33:25,070
anyway that this works is you have to
tell us

584
00:33:25,007 --> 00:33:28,206
exactly how did he realize that

585
00:33:28,269 --> 00:33:31,352
a custom data type and the way you do
that if you tell us that your custom

586
00:33:32,099 --> 00:33:35,320
data type conforms to one of our
built-in data types

587
00:33:35,032 --> 00:33:39,108
so in this case the fuel number conforms
to the utf8 datatype third

588
00:33:40,008 --> 00:33:43,187
under the hood with utf8 string but we
know that it really represents

589
00:33:43,259 --> 00:33:46,346
a barker a serial number in same with
the barcode image

590
00:33:47,129 --> 00:33:50,151
in a way that you do this is you
register your data type using the CM

591
00:33:50,349 --> 00:33:50,436
meta-data

592
00:33:51,219 --> 00:33:56,260
datatype registry register datatype
functioned as defined in core media

593
00:33:56,629 --> 00:34:00,630
you can create your own custom base
types but you can

594
00:34:00,639 --> 00:34:05,840
create a your own custom type that
conforms to our raw data

595
00:34:05,084 --> 00:34:08,091
built-in type if you're datatype really
is just a custom sequence

596
00:34:09,054 --> 00:34:13,076
a bite so there are some rules to using
a bf

597
00:34:13,076 --> 00:34:16,108
writer for reading time meta-data

598
00:34:17,008 --> 00:34:20,053
most importantly every minute they die
dem that you up and

599
00:34:20,053 --> 00:34:23,172
has to have 90 values for identifiers
datatype

600
00:34:23,649 --> 00:34:27,713
and value in your identifiers have to
conform to the the format that we

601
00:34:28,289 --> 00:34:32,980
specifies that we highly recommend using
that utility methods talked about

602
00:34:32,098 --> 00:34:35,237
in the value has to be compatible the
datatype you can tell us

603
00:34:36,119 --> 00:34:39,142
that year and a string value is a utf8
string

604
00:34:39,349 --> 00:34:43,354
but don't try telling us for your custom
class is a utf8 string because we won't

605
00:34:43,399 --> 00:34:44,451
know how to serialize that

606
00:34:44,919 --> 00:34:48,938
properly and the other player will fail
and as I mentioned before

607
00:34:49,109 --> 00:34:52,127
you have to create your ass writer input
with the form at hand and that must be

608
00:34:52,289 --> 00:34:53,301
comprehensive

609
00:34:53,409 --> 00:34:56,430
and we describe that for for the last
topic

610
00:34:56,619 --> 00:35:00,680
about after writer in time to meditate a
is a recipe for

611
00:35:00,068 --> 00:35:03,146
creating your own movies that have the
same sort of dynamic location that we've

612
00:35:04,046 --> 00:35:06,425
seen a couple times already

613
00:35:06,839 --> 00:35:10,884
in to do this you can use EV captures
audio and video data output

614
00:35:11,289 --> 00:35:15,630
in target that data at two instances a
after writer input

615
00:35:15,063 --> 00:35:19,292
in the same time grab looking
information from core location that

616
00:35:19,859 --> 00:35:21,910
represents the location information

617
00:35:21,091 --> 00:35:25,010
in right that to its own ass the writer
input in for more

618
00:35:25,829 --> 00:35:28,927
detail about you that we've actually
implemented out and made it available a

619
00:35:29,809 --> 00:35:29,906
sample code

620
00:35:30,779 --> 00:35:33,857
to see if you capture location if you
want to make your own movies that

621
00:35:34,559 --> 00:35:36,611
contain dynamic location

622
00:35:37,079 --> 00:35:40,680
we also have sample code is shown a
mention for the demo we just showed you

623
00:35:40,068 --> 00:35:43,417
that's called a be timed annotation
writer and of course for more

624
00:35:44,029 --> 00:35:46,240
information about asset writer in
general

625
00:35:46,024 --> 00:35:51,123
see that same talk I referenced earlier
working with media in the V Foundation

626
00:35:51,339 --> 00:35:55,342
left a quick topics about times
meta-data export session

627
00:35:55,369 --> 00:35:59,000
just like we said the acid export
session will by default

628
00:35:59,000 --> 00:36:02,539
passed through any of your meta data
that applies to the entire asset

629
00:36:02,539 --> 00:36:06,640
or entire track it'll pass that through
copy it to the output file

630
00:36:06,064 --> 00:36:09,243
will do the same thing with time to
enter data that exists in the source

631
00:36:09,819 --> 00:36:09,892
file

632
00:36:10,549 --> 00:36:13,597
provided that your destination file type
is quick time movie

633
00:36:14,029 --> 00:36:17,210
we'll talk more about file types in just
a little bit

634
00:36:17,021 --> 00:36:22,092
but basically export session behaves
exactly as you'd expect

635
00:36:22,092 --> 00:36:25,201
in our last time to enter data offering
topic

636
00:36:26,029 --> 00:36:31,410
is HTTP Live Streaming chapters so if
you wanna author chapters in your hols

637
00:36:31,041 --> 00:36:35,063
stream you can use the session data
tagged we talked about earlier

638
00:36:35,063 --> 00:36:39,042
and the special data ID com dot Apple
that HLF

639
00:36:39,609 --> 00:36:43,490
dot chapters and your you are I should
point to Jason file

640
00:36:43,049 --> 00:36:46,848
that describes the chapter information
for that stream

641
00:36:47,289 --> 00:36:50,450
if course for more detail on this see
that same link that I

642
00:36:50,045 --> 00:36:53,097
referenced earlier for HTTP live
streaming

643
00:36:53,097 --> 00:36:57,118
art for that is timed meta-data our next
topic is privacy

644
00:36:58,018 --> 00:37:01,089
wise privacy important in this context
well

645
00:37:01,089 --> 00:37:04,478
anytime that you're writing your users
data to a file

646
00:37:05,279 --> 00:37:09,700
you need to be Elise consider it about
their privacy

647
00:37:09,007 --> 00:37:13,009
and be aware that the meditator the you
right out to these movie files can

648
00:37:13,009 --> 00:37:13,918
contain

649
00:37:14,809 --> 00:37:19,813
user identifiable information the most
obvious example that is location

650
00:37:19,849 --> 00:37:22,896
in so because movie files can be
distributed

651
00:37:23,319 --> 00:37:26,970
and we want to protect the privacy of
our users for our

652
00:37:26,097 --> 00:37:29,150
built insurance services we do our best
to strip out

653
00:37:30,005 --> 00:37:34,047
any potentially user identifiable
information such as this location

654
00:37:34,092 --> 00:37:38,471
we recommend that you do the same we've
given you a utility for that up

655
00:37:39,299 --> 00:37:43,990
called AV meta data item filter right
now there is only one filter that we

656
00:37:43,099 --> 00:37:46,198
make available but it is geared towards
privacy if the Mediterranean filter for

657
00:37:47,098 --> 00:37:47,194
sharing

658
00:37:48,094 --> 00:37:52,095
and metal strip out any of this 30 views
are identifying information that we're

659
00:37:52,095 --> 00:37:54,734
talking about location is only one
example

660
00:37:55,589 --> 00:37:58,630
but it also is true about anything it
doesn't recognize because it doesn't

661
00:37:58,063 --> 00:38:00,022
know whether that might contain

662
00:38:00,589 --> 00:38:04,720
user identifiable information so that
includes any meta data that uses

663
00:38:04,072 --> 00:38:08,127
identifiers that you define yourself
it'll even some things

664
00:38:09,027 --> 00:38:13,045
like many data that a important to the
structure of the movie in chapters are

665
00:38:13,045 --> 00:38:14,116
the best example of that

666
00:38:15,016 --> 00:38:19,077
and also any commercial related data
like your Apple ID

667
00:38:19,077 --> 00:38:22,143
30 use the matter did I don't filter
you're gonna just

668
00:38:23,043 --> 00:38:28,202
crew for civil create your filter and
beaded your original array of meta-data

669
00:38:28,589 --> 00:38:32,200
items using this many data items from a
rate filtered by

670
00:38:32,002 --> 00:38:35,048
meta-data I don't filter method this is
a companion to that other filtering

671
00:38:35,066 --> 00:38:35,138
method

672
00:38:36,038 --> 00:38:40,120
based on identifiers have been using all
day and then once you have your filtered

673
00:38:41,002 --> 00:38:41,651
array

674
00:38:41,849 --> 00:38:44,980
love metadata item just set that on your

675
00:38:44,098 --> 00:38:47,151
out that writer or export session as you
normally would

676
00:38:48,051 --> 00:38:51,660
well actually I mention expert session
but things can be simple if you're using

677
00:38:52,119 --> 00:38:53,216
the export session in only one

678
00:38:54,089 --> 00:38:57,270
to copy the time are the meta-data from

679
00:38:57,027 --> 00:39:00,064
the source outside and not add your own
you just set the filter

680
00:39:00,064 --> 00:39:03,095
on the export session in it'll actually
do the filtering for you

681
00:39:03,095 --> 00:39:06,734
the filter both static and time to enter
data and

682
00:39:07,589 --> 00:39:10,720
but it will only filter the meta-data
from the source after

683
00:39:10,072 --> 00:39:13,138
if you set your own meta-data on the
metadata property it won't feel too that

684
00:39:14,038 --> 00:39:14,757
for you

685
00:39:15,099 --> 00:39:18,160
you need to do the process that i just
described above doing the filtering

686
00:39:18,016 --> 00:39:19,017
yourself

687
00:39:19,026 --> 00:39:22,375
in the only other thing to keep in mind
is that the export may take more time

688
00:39:22,609 --> 00:39:26,430
when the filter is being used because it
has to go through and examine all the

689
00:39:26,043 --> 00:39:28,052
meta data items

690
00:39:28,052 --> 00:39:32,064
so that privacy our last section other
talk today

691
00:39:32,064 --> 00:39:36,023
is some assorted best practices when
you're writing your own files that

692
00:39:36,599 --> 00:39:37,180
contain

693
00:39:37,018 --> 00:39:40,697
meta-data first up

694
00:39:40,859 --> 00:39:44,877
what if you're reading time today to in
you have multiple streams

695
00:39:45,039 --> 00:39:48,430
love meta-data that use different
identifiers

696
00:39:48,043 --> 00:39:51,912
how do you get those in the same file we
actually have the situation in the

697
00:39:52,299 --> 00:39:56,300
the demo app we have that circle is
comprised of two different pieces of

698
00:39:56,309 --> 00:39:57,440
information

699
00:39:57,044 --> 00:40:00,066
the position and the radius so where

700
00:40:00,066 --> 00:40:03,195
we're representing the is in the demo
app has two distinct

701
00:40:03,789 --> 00:40:06,797
streams have meta-data into the most
obvious way I can think of to get this

702
00:40:07,589 --> 00:40:07,686
into a file

703
00:40:08,559 --> 00:40:11,582
is to use two different AB

704
00:40:11,789 --> 00:40:15,740
after writer input which was all in
having to meditate attraction the upper

705
00:40:15,074 --> 00:40:15,873
file

706
00:40:16,539 --> 00:40:19,616
pretty simple but there's nothing we
could do it

707
00:40:20,309 --> 00:40:24,363
you could instead combine those two
different types of meta-data into one

708
00:40:24,849 --> 00:40:28,868
time to meditate a group and write that
to a single asset writer input and that

709
00:40:29,039 --> 00:40:30,920
was all thin only one

710
00:40:30,092 --> 00:40:33,163
meta data tracking the output file that
contains multiple different kinds of

711
00:40:34,063 --> 00:40:35,091
identifiers

712
00:40:35,091 --> 00:40:38,200
there are some advantages to this
approach not the least of which is it

713
00:40:39,019 --> 00:40:39,096
can result

714
00:40:39,789 --> 00:40:44,840
in lower storage overhead and therefore
as we always see more efficient playback

715
00:40:45,299 --> 00:40:48,670
but there are of course pros and cons to
everything

716
00:40:48,067 --> 00:40:51,686
so you'll differ want to consider
combining into one track

717
00:40:52,289 --> 00:40:56,295
your different meta-data if they are
used together during playback

718
00:40:56,349 --> 00:41:00,010
and they have identical timing in this
is definitely the case with the example

719
00:41:00,001 --> 00:41:00,067
we just saw

720
00:41:00,067 --> 00:41:03,766
with the circle center in the circle
radius

721
00:41:04,369 --> 00:41:08,130
if these are not true then you might not
want to combine in effect one instance

722
00:41:08,013 --> 00:41:10,026
where you definitely do not want to
combine

723
00:41:10,026 --> 00:41:13,035
is if you have one typeof meta data that
the thirty did

724
00:41:14,016 --> 00:41:18,075
with another track in the file that like
our are annotations are fitted with the

725
00:41:18,075 --> 00:41:21,089
the video track but then you have
another typeof meta-data

726
00:41:21,089 --> 00:41:25,095
like location that 32 with the entire
asset you don't want to combine those

727
00:41:25,095 --> 00:41:28,116
into one track otherwise your

728
00:41:29,016 --> 00:41:32,705
location in that example will be come
mistakenly associated with just the

729
00:41:32,849 --> 00:41:34,866
video track and that's not what you want

730
00:41:35,019 --> 00:41:39,078
so that how to deal with multiple
streams time meta-data

731
00:41:39,609 --> 00:41:43,970
next topic is duration of your time to
meditate a group

732
00:41:43,097 --> 00:41:46,666
when you get a time to edit a group from
maybe foundation it's always going to

733
00:41:47,539 --> 00:41:47,970
have

734
00:41:47,097 --> 00:41:50,173
a fully formed time time range

735
00:41:51,073 --> 00:41:54,162
so that means it'll have a start time
and duration

736
00:41:54,819 --> 00:41:57,960
we actually recommend when you make your
own time to an idiot a group for

737
00:41:57,096 --> 00:41:57,735
appending

738
00:41:58,599 --> 00:42:02,650
with a TV out the writer that you don't
bother giving us a duration

739
00:42:02,065 --> 00:42:06,116
in to see how that works here's an
example of a group that starts at time 0

740
00:42:07,016 --> 00:42:10,145
but doesn't have a duration so how do we
know when and

741
00:42:10,289 --> 00:42:13,322
of course we'll wait till you append the
next one and then we'll say that

742
00:42:13,619 --> 00:42:16,660
well K the end time I've the first group

743
00:42:16,066 --> 00:42:19,090
is same as the start time love the next
one

744
00:42:19,009 --> 00:42:22,018
for this ensures that your metadata
track is gonna have

745
00:42:22,099 --> 00:42:25,228
a continuous stream up contiguous

746
00:42:26,119 --> 00:42:29,730
meta-data and we think that for most
cases this is the best way to store your

747
00:42:29,073 --> 00:42:30,164
metadata

748
00:42:31,064 --> 00:42:34,283
in the way you come up with this is when
you're making your time range you just

749
00:42:34,859 --> 00:42:35,950
use KCM time invalid

750
00:42:36,769 --> 00:42:39,777
for your duration: and we'll take care
the rest

751
00:42:40,569 --> 00:42:44,598
we do recognize that there are cases
where you might not want to have

752
00:42:44,859 --> 00:42:48,210
contiguous meta-data you might wanna
author an explicit gap

753
00:42:48,021 --> 00:42:52,066
into your meta data stream answer for
that our recommendation is you give us

754
00:42:52,066 --> 00:42:55,074
in the middle there a group that
contains 0% item

755
00:42:55,074 --> 00:42:58,100
this is the best way to author a gap in
the meta-data

756
00:42:59,000 --> 00:43:02,018
and you can see we just do that by
presenting a

757
00:43:02,018 --> 00:43:06,025
empty array when we're creating our time
together data group

758
00:43:06,025 --> 00:43:10,094
and notice that we're still using KCM
time invalid for a duration here

759
00:43:10,319 --> 00:43:14,240
just tell us when the beginning above
the the meta-data silent so to speak

760
00:43:14,024 --> 00:43:17,045
is and we'll figure out how long a laugh
based on

761
00:43:17,045 --> 00:43:20,134
when you append your next non-empty
group

762
00:43:20,539 --> 00:43:23,940
so that's how you rate gap in your
metadata

763
00:43:23,094 --> 00:43:26,165
a last best practice I mention output
file type before

764
00:43:27,065 --> 00:43:30,091
and here's the XB longer explanation

765
00:43:30,091 --> 00:43:33,800
well after writer and an after-tax per
session support

766
00:43:34,619 --> 00:43:39,950
writing to a wide variety file types

767
00:43:39,095 --> 00:43:42,124
you've got QuickTime movie impact for

768
00:43:43,024 --> 00:43:47,042
an offer to buy their kind of file types
and those file types

769
00:43:47,042 --> 00:43:50,721
can carry different kinds a meta-data
some have more restrictions and others

770
00:43:51,099 --> 00:43:54,720
about what kinda metadata can go into
that file type

771
00:43:54,072 --> 00:43:57,941
for the easiest situations if you have
an export session and you're going from

772
00:43:58,589 --> 00:44:02,990
one from the from the same file type as
your source to the output

773
00:44:02,099 --> 00:44:05,118
so for this example they're both
QuickTime movie file

774
00:44:06,018 --> 00:44:09,096
this is the easiest way to ensure that
all of that data is actually gonna make

775
00:44:09,096 --> 00:44:11,195
it into the output file

776
00:44:12,059 --> 00:44:15,137
if instead you using a different output
file type like impact for in this

777
00:44:15,839 --> 00:44:15,935
example

778
00:44:16,799 --> 00:44:19,940
then them up different things are going
to have to happen

779
00:44:19,094 --> 00:44:22,143
you noticed as last year item didn't
quite make it into the output file

780
00:44:23,043 --> 00:44:26,712
it because they have no equivalent
representation that works with an impact

781
00:44:27,099 --> 00:44:28,650
for file

782
00:44:28,065 --> 00:44:32,284
if you're looking closely of a notice
that those top two items have changed

783
00:44:32,869 --> 00:44:35,871
although they sound very similar they
are slightly different

784
00:44:36,069 --> 00:44:40,095
identifiers because that's the kind of
it in a fire that works for them pick 4

785
00:44:40,329 --> 00:44:44,390
for both after-tax per session after
writer will do the thirty three step

786
00:44:44,039 --> 00:44:44,988
process

787
00:44:45,339 --> 00:44:49,210
first they'll try to past that data
through directly

788
00:44:49,021 --> 00:44:52,099
if possible and if not to try to convert
the identifiers

789
00:44:52,099 --> 00:44:55,172
into an equivalent representation in the
output file type:

790
00:44:56,072 --> 00:44:59,641
and if needed those work we have no
choice but to just drop that

791
00:45:00,289 --> 00:45:05,180
be submitted data on the floor centers
have guidance on how to choose an output

792
00:45:05,018 --> 00:45:05,101
file type:

793
00:45:06,001 --> 00:45:09,560
well my key recommendations are if you
are

794
00:45:09,569 --> 00:45:13,574
using say an expert session to copy all
of the time

795
00:45:13,619 --> 00:45:17,619
or all of the meta-data times or
otherwise from the store sales at your

796
00:45:17,619 --> 00:45:18,661
destination file

797
00:45:19,039 --> 00:45:22,930
the best ways to try and use the same
file type: that you started with

798
00:45:22,093 --> 00:45:25,532
and if you don't know what that file
type is you can use the end of URL type

799
00:45:26,369 --> 00:45:30,150
identify key to find out

800
00:45:30,015 --> 00:45:35,018
you can also always use the QuickTime
movie file because that is going to

801
00:45:35,045 --> 00:45:38,074
have the the greatest chance up
supporting your meta data no matter

802
00:45:38,074 --> 00:45:39,097
where it came from

803
00:45:39,097 --> 00:45:42,486
if the Foundation supports it there's a
good chance that I'll be supported by

804
00:45:43,359 --> 00:45:45,470
the QuickTime movie file

805
00:45:45,047 --> 00:45:48,066
and of course this is the only way if
you're writing time to enter data

806
00:45:48,066 --> 00:45:52,255
to get your time too many data into file
is to use QuickTime movie file it's the

807
00:45:52,849 --> 00:45:53,390
only

808
00:45:53,039 --> 00:45:57,065
file for that supports that right now
and of course

809
00:45:57,065 --> 00:46:00,089
good advice is always to check the
results no matter what

810
00:46:00,089 --> 00:46:04,114
check that your output files contain the
kinda better data that you expect

811
00:46:05,014 --> 00:46:09,016
all the midday to the expect and you can
choose to use them in the API's

812
00:46:09,016 --> 00:46:12,100
that we've already talked about if you
wanna do that at runtime

813
00:46:13,000 --> 00:46:16,021
some guidance if that doesn't end up
being the case

814
00:46:16,021 --> 00:46:19,024
if you don't get all the midday the you
expect we can try to do the conversion

815
00:46:19,051 --> 00:46:20,066
yourself

816
00:46:20,066 --> 00:46:23,101
especially if you have a custom
identifiers in or going to a file type

817
00:46:24,001 --> 00:46:26,600
doesn't support your custom identifiers

818
00:46:26,609 --> 00:46:29,720
take a look at that along with the
built-in identifiers we have

819
00:46:29,072 --> 00:46:31,138
and see if there's something that's
roughly equivalent to what you're trying

820
00:46:32,038 --> 00:46:32,767
to store

821
00:46:33,109 --> 00:46:36,208
and you can do that conversion yourself
one particular example I wanna call out

822
00:46:37,099 --> 00:46:37,750
that involve

823
00:46:37,075 --> 00:46:40,904
only built-in identifiers is when you're
right when you're trying to go from

824
00:46:41,579 --> 00:46:44,606
I D 32 iTunes wavy foundation currently

825
00:46:44,849 --> 00:46:47,923
isn't gonna do that conversion for you
but there's no reason that you couldn't

826
00:46:48,589 --> 00:46:49,590
do that yourself

827
00:46:49,599 --> 00:46:52,630
so once again just take a look at our
long with the identifiers

828
00:46:52,063 --> 00:46:56,772
in match them up in do the conversion in
your own code

829
00:46:57,339 --> 00:47:01,470
that is the end the talk do we covered
we talked

830
00:47:01,047 --> 00:47:04,616
obviously a lot about meta data in AB
foundation talked about all the

831
00:47:05,039 --> 00:47:06,121
different classes you can use for

832
00:47:06,859 --> 00:47:09,900
inspection talked about TV after 10 EV
meta-data

833
00:47:09,009 --> 00:47:13,012
item and how those work together and
also offering we talked about

834
00:47:13,093 --> 00:47:17,149
the after writer acid export session
even briefly on the capture audio and

835
00:47:18,049 --> 00:47:20,050
movie file output

836
00:47:20,005 --> 00:47:22,094
we dove into time to mentor data
including all the new features that

837
00:47:23,039 --> 00:47:24,065
enable things like

838
00:47:24,065 --> 00:47:27,144
the dynamic location in your own time
for the data like the

839
00:47:28,044 --> 00:47:31,072
annotation demo we offer talked about

840
00:47:31,072 --> 00:47:34,138
privacy considerations in some best
practices like how to choose the right

841
00:47:35,038 --> 00:47:36,707
file type:

842
00:47:37,049 --> 00:47:40,390
for more information contactor vandalism
team

843
00:47:40,039 --> 00:47:44,228
or see our programming guide there are
some other related sessions you might be

844
00:47:44,579 --> 00:47:45,480
interested in

845
00:47:45,048 --> 00:47:48,052
if you miss this morning's presentation
on modern media playback you can catch

846
00:47:48,088 --> 00:47:48,145
that

847
00:47:49,045 --> 00:47:52,067
and the video recording tomorrow there's
also a

848
00:47:52,067 --> 00:47:56,116
capture camera capture talk focusing on
manual controls

849
00:47:57,016 --> 00:48:01,039
and on Thursday will have a talk about
direct access to

850
00:48:01,039 --> 00:48:04,042
video encoding and decoding which I'm
sure a lot if you will be interested in

