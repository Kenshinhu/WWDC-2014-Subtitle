1
00:00:12,004 --> 00:00:15,058
he think you

2
00:00:15,094 --> 00:00:16,126
thank you very

3
00:00:17,026 --> 00:00:21,102
much my name is Andy Matuszak I work in
the UI kit framework

4
00:00:22,002 --> 00:00:25,060
and later I'm going to join by my
colleague Colin Barrett

5
00:00:25,006 --> 00:00:28,064
also works on you like it today we're
gonna talk

6
00:00:29,018 --> 00:00:33,039
about advanced I O S architectural
patterns

7
00:00:33,039 --> 00:00:36,122
which is is going to store to be a
continuation

8
00:00:37,022 --> 00:00:40,037
a bill done is talk from this morning
the core I was

9
00:00:40,037 --> 00:00:43,100
application Arctic Tern patterns were
gonna be taking some of those ideas a

10
00:00:44,000 --> 00:00:44,009
little further

11
00:00:44,009 --> 00:00:47,063
and just in case you didn't see that
talk this morning or even if you did

12
00:00:48,044 --> 00:00:51,553
I want to tell a little story explains I
think

13
00:00:51,949 --> 00:00:57,002
how we all got here many start-up by
yourself in the project start small

14
00:00:57,479 --> 00:01:00,650
they're well-intentioned keeping
everything orderly

15
00:01:00,065 --> 00:01:04,160
you're adding features and everything
still good you add more features and

16
00:01:05,006 --> 00:01:09,014
the kinda pile-up been you got momentum
behind you now have all these users and

17
00:01:10,004 --> 00:01:10,089
demanding

18
00:01:11,025 --> 00:01:16,025
yet more developers cuz maybe that'll
help but it doesn't seem to have quite

19
00:01:16,025 --> 00:01:18,104
the impact on your progress but you've
been hoping for

20
00:01:19,004 --> 00:01:22,027
you're making changes faster and faster

21
00:01:22,027 --> 00:01:26,044
and bug thing to be appearing faster and
faster

22
00:01:26,044 --> 00:01:30,092
and things like all you're doing is
spending your time finding bugs

23
00:01:30,092 --> 00:01:35,168
and you think okay well knock you down
in a few more comeback

24
00:01:36,068 --> 00:01:41,100
not adding new features you ads and unit
tests to try to get a handle

25
00:01:42,000 --> 00:01:46,024
on what's going on here somebody stole
you that's gonna help things but through

26
00:01:46,024 --> 00:01:48,101
the open easily and then the button
start

27
00:01:49,001 --> 00:01:52,044
coming back and then you learn actually

28
00:01:52,044 --> 00:01:58,083
your YouTube tough can have bugs to what
we do

29
00:01:58,083 --> 00:02:01,094
people say

30
00:02:01,094 --> 00:02:05,105
software architecture you are a

31
00:02:06,005 --> 00:02:09,031
cool Suffolk texture are

32
00:02:09,031 --> 00:02:14,850
whatsapp architecture researcher on the
internet and you

33
00:02:15,129 --> 00:02:18,370
you know how much a blog airlifting like
home and never do this

34
00:02:18,037 --> 00:02:21,136
stop its gonna make your architecture
bad and it seems like a lot

35
00:02:22,036 --> 00:02:25,098
contradicting opinion from people safe
start small and some people wanted line

36
00:02:25,098 --> 00:02:26,187
everything up front

37
00:02:27,069 --> 00:02:30,920
things like these discussions just keep
coming back to

38
00:02:30,092 --> 00:02:35,741
taste maybe dogma all you really know

39
00:02:36,569 --> 00:02:39,603
maybe is that your taste

40
00:02:39,909 --> 00:02:43,180
is improving a lot faster than your
ability

41
00:02:43,018 --> 00:02:48,277
you can tell that something starting to
get smelly

42
00:02:48,439 --> 00:02:51,528
can tell you got a problem the maybe you
don't know what to do about it

43
00:02:52,329 --> 00:02:58,348
Serena try to help you'd only scratched
the surface today

44
00:02:58,519 --> 00:03:02,510
the ideas to take some time honored
concepts

45
00:03:02,051 --> 00:03:05,450
from computer sciences offerings nearing
an to present them

46
00:03:05,909 --> 00:03:09,967
hopefully less abstractly and in a way
that might make sense to

47
00:03:10,489 --> 00:03:15,430
you and I West developer with your app's
today were

48
00:03:15,043 --> 00:03:19,115
hoping to provide insight not dogma were
not

49
00:03:20,015 --> 00:03:24,084
I'm so glad so glad to hear that

50
00:03:24,219 --> 00:03:27,650
epistemology is important need to know

51
00:03:27,065 --> 00:03:30,304
why you're having architectural problems

52
00:03:30,889 --> 00:03:34,905
not just a bag of tricks that you can
use

53
00:03:35,049 --> 00:03:39,093
when faced with any particular issue
that way

54
00:03:39,489 --> 00:03:42,543
probably have a real objective measure
but you can use to compare approaches

55
00:03:43,029 --> 00:03:46,230
that way when your colleagues disagree
with you can actually talk about

56
00:03:46,023 --> 00:03:49,502
what might be better and what might be
worse and why rather than just

57
00:03:49,709 --> 00:03:53,260
citing a buncha countries alright

58
00:03:53,026 --> 00:03:56,285
so today we're going to talk about 3
brought approaches

59
00:03:56,519 --> 00:04:00,555
that you can use to consider the
complexity your application and evaluate

60
00:04:00,879 --> 00:04:02,040
approaches to dealing with it

61
00:04:02,004 --> 00:04:05,793
first time we have tangled measures

62
00:04:05,829 --> 00:04:08,918
up information that works like this
we're gonna clean them up

63
00:04:09,719 --> 00:04:12,796
by actually designing the information
flow in our application rather than just

64
00:04:13,489 --> 00:04:15,503
letting it grow ad hoc like a weed

65
00:04:15,629 --> 00:04:20,661
and then when are objects start to
become a more pissed blobs

66
00:04:20,949 --> 00:04:24,760
we're going to separate them actually
define what their responsibilities

67
00:04:24,076 --> 00:04:27,147
are and hopefully get each other circles
a little smaller

68
00:04:28,047 --> 00:04:33,075
finally when Pinkberry ground seems to
be shifting out from under you

69
00:04:33,075 --> 00:04:37,076
we're going to take advantage of
immutability and in particular

70
00:04:37,076 --> 00:04:42,110
some new features have swift to really
get a handle on things

71
00:04:43,001 --> 00:04:46,068
for those big concerts from today will
start

72
00:04:46,077 --> 00:04:50,148
but talking about designing information
flow

73
00:04:51,048 --> 00:04:55,086
now much the complexity in a modern
application is really just shuffling

74
00:04:55,086 --> 00:04:59,097
information events around

75
00:04:59,097 --> 00:05:03,159
yet delicate handlers target action
called active completion blocks

76
00:05:04,059 --> 00:05:07,088
ideas and signals and how should

77
00:05:07,088 --> 00:05:11,097
this information and events go through
your application

78
00:05:11,097 --> 00:05:13,178
is our wiring stuff up is that this
object to the delegated this other

79
00:05:14,078 --> 00:05:15,150
object ever hear

80
00:05:16,005 --> 00:05:19,081
you say at Target action and every time
you're doing that

81
00:05:20,026 --> 00:05:23,101
adding a little-known this network

82
00:05:24,001 --> 00:05:27,034
never just getting earlier and i learn
maybe you've drawn networks like this

83
00:05:27,034 --> 00:05:28,086
force a

84
00:05:28,086 --> 00:05:32,142
object ownership in your application
which object owns which other object or

85
00:05:33,042 --> 00:05:36,088
maybe for a workflow but in this section
we're going to

86
00:05:36,088 --> 00:05:39,163
talk about thinking conceptually about
this diagram as it pertains to

87
00:05:40,063 --> 00:05:42,144
information flow in your application

88
00:05:43,044 --> 00:05:46,053
where's information coming from and
where is it going

89
00:05:47,034 --> 00:05:50,076
the first question I'll ask is where is

90
00:05:50,076 --> 00:05:53,078
true my application

91
00:05:53,078 --> 00:05:58,092
in order to do that in order to keep
things hopefully some concrete

92
00:05:58,092 --> 00:06:02,170
we're gonna turn to a demo application

93
00:06:03,007 --> 00:06:09,043
which is having its own problems with
information plump

94
00:06:10,006 --> 00:06:14,042
all rights over here we have an
application it's going to be written in

95
00:06:14,042 --> 00:06:15,128
swift

96
00:06:16,028 --> 00:06:19,050
and thats just because I like swift
quite a lot by the

97
00:06:19,005 --> 00:06:23,019
the topics were discussing in this
particular section really don't

98
00:06:23,064 --> 00:06:27,102
require swept I it's worth the journey
application

99
00:06:28,002 --> 00:06:32,007
right on what's going on in your life
cue track things maybe River him Lincoln

100
00:06:32,052 --> 00:06:35,057
and like any journaling up there's a UI

101
00:06:36,002 --> 00:06:39,025
to add an entry you got the bug report
for user

102
00:06:39,025 --> 00:06:44,060
talking about a bug with the photo
edition you live in your application

103
00:06:44,006 --> 00:06:49,006
so go ahead and start making a journal
entry

104
00:06:49,006 --> 00:06:52,009
we will out a photo

105
00:06:52,009 --> 00:06:55,056
taking this one from Apple dot com hand

106
00:06:56,037 --> 00:06:59,089
there is this Peter here that lets me
show and hide

107
00:06:59,089 --> 00:07:02,090
the photos that I've attached to my
journal entry

108
00:07:02,099 --> 00:07:05,177
everything's looking good so far but
this bug report I got

109
00:07:06,077 --> 00:07:09,082
said that the app seems to break

110
00:07:10,027 --> 00:07:15,028
when I'm playing with this button so
I'll play with the button

111
00:07:15,028 --> 00:07:22,028
so something really which is happening
there and we have a crash

112
00:07:22,053 --> 00:07:27,127
that's no good now we can look at this
back trace but

113
00:07:28,027 --> 00:07:31,069
probably the problem is already happened

114
00:07:31,069 --> 00:07:35,074
and we can see the issuance now this
exclamation point here's

115
00:07:35,074 --> 00:07:39,080
going awry rather than trying to address

116
00:07:39,008 --> 00:07:43,017
this specific crasher I'd like to draw
your attention to the

117
00:07:43,089 --> 00:07:47,133
infrastructural problem which is
underlying the scratcher

118
00:07:48,033 --> 00:07:51,132
let's take a look how exactly this
expanding and collapsing love the photo

119
00:07:52,032 --> 00:07:53,108
drawer features work

120
00:07:54,008 --> 00:07:58,070
here to expand photo drawer and uppers
we say okay do we have authority

121
00:07:58,007 --> 00:08:01,010
if we don't make one

122
00:08:02,000 --> 00:08:05,036
did it all laid out so it'll expand from
0 height but

123
00:08:05,036 --> 00:08:11,039
animated 24 heights and you know update
that but in a little bit a bookkeeping

124
00:08:11,066 --> 00:08:15,115
course then in collapsed orange or if we
only have a corridor which we want to

125
00:08:16,015 --> 00:08:16,097
collapse

126
00:08:16,097 --> 00:08:21,188
we animated shots and when the emissions
done we remove it

127
00:08:22,088 --> 00:08:25,095
things pretty straightforward you know
you might say well this this

128
00:08:26,058 --> 00:08:29,066
option this option seems to be the
problem like you're letting users

129
00:08:29,066 --> 00:08:32,070
interact with your you all the
animations going on

130
00:08:32,007 --> 00:08:38,226
shouldn't do that %uh okay so you could
remove this option

131
00:08:38,919 --> 00:08:43,950
I but you know we we do actually want to
keep things fluid

132
00:08:43,095 --> 00:08:45,854
there's no reason that the world should
up to stop just because this folder is

133
00:08:46,709 --> 00:08:47,740
opening up

134
00:08:48,019 --> 00:08:51,850
and furthermore all we're starting to
get a little them for that taste verses

135
00:08:51,085 --> 00:08:53,093
ability tradeoff we were talking earlier
I mean hopefully your

136
00:08:54,065 --> 00:08:57,081
your you're looking at this year's thing
I well I i dont

137
00:08:57,081 --> 00:09:01,087
exactly see anything wrong so trying to
work around this bug by just disabling

138
00:09:02,041 --> 00:09:04,133
the button doesn't seem like the best
thing to do

139
00:09:05,033 --> 00:09:09,111
what's really going on and even if we
were disable the spine

140
00:09:10,011 --> 00:09:14,075
things get somewhat worse if I rerun
this application of show you there's

141
00:09:14,075 --> 00:09:15,354
sort of a side feature

142
00:09:16,029 --> 00:09:19,270
to say that was the case that you could
not

143
00:09:19,027 --> 00:09:22,090
interact with the show photos button

144
00:09:22,009 --> 00:09:25,096
while the animations going on well

145
00:09:26,077 --> 00:09:30,154
now here's our body and as we start
typing into it

146
00:09:31,054 --> 00:09:37,125
we hide that for it or because we want
to have more space for the keyboard

147
00:09:38,025 --> 00:09:43,073
so it's actually not good enough just to
disable this button

148
00:09:43,073 --> 00:09:46,142
to make this problem go away the problem
will still exist because

149
00:09:47,042 --> 00:09:50,042
we collapse this photo drawer

150
00:09:50,042 --> 00:09:54,125
plan we focus the body about to keep
going on like that it would crash

151
00:09:55,025 --> 00:09:58,099
so there's something more fundamental at
play here some mold growing in the

152
00:09:58,099 --> 00:09:59,163
corner

153
00:10:00,063 --> 00:10:05,085
and I'd like to return to diagrammatic
approach

154
00:10:05,085 --> 00:10:09,091
to examine that mold

155
00:10:09,091 --> 00:10:13,107
now this is boxes and arrows
representation at the information flow

156
00:10:14,007 --> 00:10:16,022
in our application

157
00:10:16,022 --> 00:10:19,031
we've got this this photos or tap action

158
00:10:19,031 --> 00:10:22,040
and we've also got a text new focus
action and they're both doing something

159
00:10:23,021 --> 00:10:27,045
based on a piece of information now
piece of information is

160
00:10:27,045 --> 00:10:31,089
does that follows drawer exist does that
Jordan you exist already

161
00:10:31,089 --> 00:10:34,132
every song the code it doesn't exist
today will make it and if it does exist

162
00:10:35,032 --> 00:10:39,046
will start animation when the
nominations done will throw it out

163
00:10:39,046 --> 00:10:44,115
that's phenomenal what's going on here
this bug is occurring

164
00:10:44,529 --> 00:10:47,290
because we're getting our information
from the wrong place there's another

165
00:10:47,029 --> 00:10:48,072
piece in state

166
00:10:48,072 --> 00:10:52,146
which is in the drawer semantically
expanded

167
00:10:53,046 --> 00:10:57,057
that separate from does the drawer view
exist because the journey wasn't torn

168
00:10:57,057 --> 00:10:57,135
down

169
00:10:58,035 --> 00:11:03,464
until the animation completes if we
start collapsing the drawer

170
00:11:03,779 --> 00:11:07,150
then we want to think about the state of
the system

171
00:11:07,015 --> 00:11:11,069
as the drawer is collapse now just like
to start animating a view to the other

172
00:11:11,069 --> 00:11:11,155
side of the screen

173
00:11:12,055 --> 00:11:15,110
its model value is already at its
destination

174
00:11:16,001 --> 00:11:19,002
the drawer whose existence is more like
the presentation value that you it's

175
00:11:19,011 --> 00:11:20,014
like a proxy

176
00:11:20,014 --> 00:11:23,153
for that underlying truth should the
drawer view

177
00:11:23,279 --> 00:11:27,470
be expanded modulo any emissions that
are going on

178
00:11:27,047 --> 00:11:30,138
so we can deal with this problem by
ratifying that the state

179
00:11:31,038 --> 00:11:34,125
beginning a property say you know is the
door you expanded right now updated

180
00:11:35,025 --> 00:11:35,104
immediately

181
00:11:36,004 --> 00:11:39,493
when we start collapsing the drawer view
and let me start expanding that your

182
00:11:39,529 --> 00:11:41,200
view

183
00:11:41,002 --> 00:11:45,090
and then once we do that we can look at
this diagram and say we're

184
00:11:46,008 --> 00:11:50,026
why are these actions getting their
truth

185
00:11:50,026 --> 00:11:54,083
from whether or not the drawer you
exists what really matters

186
00:11:54,083 --> 00:11:57,110
is whether or not the door supposed to
be expanded or not and when you picked

187
00:11:58,001 --> 00:11:59,008
up in the TextView

188
00:11:59,017 --> 00:12:02,050
you should only really be collapsing the
four drawer

189
00:12:02,005 --> 00:12:06,077
if it is actually expended you don't try
to collapse the photo drawer

190
00:12:07,022 --> 00:12:11,073
if it's in the process a beam collapsed
already

191
00:12:11,073 --> 00:12:14,145
but that drawer view hasn't been removed
yet

192
00:12:15,045 --> 00:12:17,874
now in a stock I'm not actually going to
make the code changes that we're talking

193
00:12:18,279 --> 00:12:19,670
about here because

194
00:12:19,067 --> 00:12:22,071
with a lot material to get there and i
wanna cover quickly but here we've been

195
00:12:23,007 --> 00:12:24,836
able to solve this problem

196
00:12:24,899 --> 00:12:28,770
a conceptual level at least by thinking
about our system

197
00:12:28,077 --> 00:12:31,105
in terms love how information is moving
through it

198
00:12:32,005 --> 00:12:35,092
where we're going data however making
decisions and considering first

199
00:12:35,092 --> 00:12:39,099
where is true who really knows

200
00:12:40,062 --> 00:12:44,139
that state which one place should be
consulted for it

201
00:12:45,039 --> 00:12:49,054
now to help us get all the boxes that we
need in our diagram

202
00:12:49,054 --> 00:12:52,149
don't think on all the boxes we need in
our diagram

203
00:12:53,049 --> 00:12:56,050
on joy attention to the difference
between

204
00:12:56,005 --> 00:13:00,069
that room level truth that one place in
your application that actually knows

205
00:13:01,014 --> 00:13:03,036
where things are supposed to be

206
00:13:03,036 --> 00:13:06,081
and the values which are merely derived
from it

207
00:13:06,081 --> 00:13:13,081
so in order to do that again let's
return to our demo application

208
00:13:14,017 --> 00:13:18,105
and you'll see here that as I continue
typing

209
00:13:19,005 --> 00:13:22,007
the character counter my character
counter there because you might be

210
00:13:22,007 --> 00:13:23,010
extremely

211
00:13:23,001 --> 00:13:26,048
up going extroverted person with your
journal you might want to

212
00:13:26,057 --> 00:13:29,326
take advantage of this feature that we
have which automatically shares

213
00:13:29,839 --> 00:13:33,390
oliver journal entries to put her so we
give you a

214
00:13:33,039 --> 00:13:36,044
character count in order to help you
make sure

215
00:13:36,044 --> 00:13:39,098
that it actually gonna fit when you post
Twitter simple enough

216
00:13:39,098 --> 00:13:42,167
goes up as wheatly and goes down

217
00:13:43,067 --> 00:13:46,111
as we had in characters that's all fine

218
00:13:47,011 --> 00:13:50,018
but if we think about the this photos
feature

219
00:13:50,018 --> 00:13:53,035
that we have

220
00:13:53,035 --> 00:13:56,070
you know when we post to Twitter

221
00:13:56,007 --> 00:13:59,094
we're gonna have to put a URL for that
photo in the body in a tweet so that

222
00:14:00,057 --> 00:14:01,152
means to be included

223
00:14:02,052 --> 00:14:06,139
in the character count and we got a bug
from users saying that

224
00:14:07,039 --> 00:14:10,086
they tried to make a post and

225
00:14:10,086 --> 00:14:14,155
Twitter rejected it even at the Y said
it was okay

226
00:14:15,055 --> 00:14:19,091
so I added this photo you can see it
added to this entry

227
00:14:19,091 --> 00:14:23,174
and we can see that the number remaining
characters is 240

228
00:14:24,074 --> 00:14:28,079
and if I start typing wacho enter one
key

229
00:14:28,079 --> 00:14:32,151
and we jumped on the 118 like
immediately reconsidered

230
00:14:33,051 --> 00:14:36,690
the URL I'm sure you've all seen this
kind of bug quite a lot from things

231
00:14:37,149 --> 00:14:40,149
stale something that was supposed to
happen has not

232
00:14:40,149 --> 00:14:43,870
happened and unfortunately that kind of
problem is really difficult to debug

233
00:14:43,087 --> 00:14:46,116
there's no way to break

234
00:14:46,899 --> 00:14:51,050
so we can we can look at the code and
say okay what's supposed to happen

235
00:14:51,005 --> 00:14:54,030
there is a an update character count
method

236
00:14:54,003 --> 00:14:57,054
here and very simple it just a

237
00:14:57,081 --> 00:15:00,082
just update this character count label
with the result %uh

238
00:15:00,082 --> 00:15:04,167
our Twitter entry encoder to those two
possible problems here

239
00:15:05,067 --> 00:15:09,067
of a problem number one is but we're
entering coder is that Paul

240
00:15:09,067 --> 00:15:12,162
it's returning a wrong value possible
problem number two is this method is

241
00:15:13,062 --> 00:15:14,107
simply not being called

242
00:15:15,007 --> 00:15:18,018
when we add a photo so

243
00:15:18,018 --> 00:15:21,737
we can look to invalidate wannabes
hypotheses we can we can look to sort of

244
00:15:21,899 --> 00:15:26,970
guide to where we should be addressing
are debugging abilities we can

245
00:15:26,097 --> 00:15:29,776
do that by just adding a break point
here

246
00:15:30,649 --> 00:15:36,290
and well going create a new journal
entry here to set this up again

247
00:15:36,029 --> 00:15:40,034
all out photo: we see that the character
count is never called

248
00:15:40,079 --> 00:15:44,087
but 1i anarchy here it is called

249
00:15:44,087 --> 00:15:47,169
sewer problem appears to be at this this
method is just not even getting called

250
00:15:48,069 --> 00:15:49,111
when it should be called in

251
00:15:50,011 --> 00:15:54,013
let's continue to follow this rabbit
hole upwards I guess

252
00:15:54,013 --> 00:15:57,021
and see who calls update your account

253
00:15:57,093 --> 00:16:01,098
not only called in one place

254
00:16:01,098 --> 00:16:05,151
and it's called on text you didn't
change

255
00:16:06,051 --> 00:16:10,063
now Taliban esoteric

256
00:16:10,063 --> 00:16:13,124
facto it about the you like it and after
the eyes is that

257
00:16:14,024 --> 00:16:18,058
if you programmatically set attacks
Piers value the text you does not

258
00:16:18,058 --> 00:16:22,093
emit delegate call backs saying that the
text is by changed

259
00:16:22,093 --> 00:16:26,062
and the same thing is true for basically
anything else the house a delegate call

260
00:16:26,899 --> 00:16:29,130
back if you programmatically set the
value

261
00:16:29,013 --> 00:16:32,060
that its corresponding to that call back
you like it flak jacket will not call

262
00:16:32,006 --> 00:16:32,865
you back

263
00:16:33,459 --> 00:16:37,190
so you can react to this by saying
allergies

264
00:16:37,019 --> 00:16:40,026
got to work around this this weird you
like it behavior

265
00:16:40,026 --> 00:16:43,119
II guess we'll add an extra call to
update character count

266
00:16:44,019 --> 00:16:47,168
when we at a photo which happens

267
00:16:47,339 --> 00:16:50,850
down here somewhere right here you know
we we coulda

268
00:16:50,085 --> 00:16:54,113
we can call it that character count
there but you know what if we added

269
00:16:55,013 --> 00:16:58,066
a audio recording feature you know to go
take a voice note about how your day's

270
00:16:58,066 --> 00:17:00,925
going what if we added a video recording
feature all these things are going to

271
00:17:01,519 --> 00:17:03,670
have to remember to update the character
count

272
00:17:03,067 --> 00:17:07,436
ans I hope anyway that you're starting
to get that

273
00:17:08,039 --> 00:17:11,067
sort ofthis person's ability smell again

274
00:17:11,319 --> 00:17:14,321
something seems amiss here

275
00:17:14,339 --> 00:17:18,344
not exactly clear what it is

276
00:17:18,839 --> 00:17:22,290
so again I propose that the solution is

277
00:17:22,029 --> 00:17:28,051
thinking about the information flows
your application diagrammatic way

278
00:17:28,051 --> 00:17:33,085
here dan is a diagram any information
flow in the application

279
00:17:33,085 --> 00:17:37,109
as a text you enter the character count
both these things

280
00:17:38,009 --> 00:17:42,086
are getting their values from the mall
let things okay

281
00:17:42,086 --> 00:17:45,135
we've got truth the models will intrude

282
00:17:46,035 --> 00:17:51,038
and we're using the right inputs in our
information flow

283
00:17:51,065 --> 00:17:54,153
but we're still not getting the right
behavior reason for that

284
00:17:55,053 --> 00:18:00,150
is that derived values have to be
treated differently

285
00:18:01,005 --> 00:18:05,006
think about what is derived values are
in comparison

286
00:18:05,051 --> 00:18:08,057
to the truth which provides their inputs

287
00:18:09,011 --> 00:18:12,098
now if you have a drive value it doesn't
couple things the commute it computes

288
00:18:12,098 --> 00:18:16,191
some other value like a character count
from some seven parts

289
00:18:17,091 --> 00:18:20,125
that straightforward we saw that the
character count

290
00:18:21,025 --> 00:18:24,084
separately it needs to re computer

291
00:18:24,084 --> 00:18:28,163
that output when one the inputs changes

292
00:18:29,063 --> 00:18:34,067
these requirements are really very much
like a catch

293
00:18:35,003 --> 00:18:38,402
and I propose to you that everywhere in
your program where you have something

294
00:18:38,429 --> 00:18:39,130
like

295
00:18:39,013 --> 00:18:42,098
a character count which seems like a
very straightforward thing it's just

296
00:18:42,098 --> 00:18:46,112
a value derived from another value all
of those things

297
00:18:47,012 --> 00:18:50,101
have many of the same properties all a
cash

298
00:18:51,001 --> 00:18:56,017
which means that they're subject to the
same problems that a cash as well

299
00:18:56,017 --> 00:18:59,101
for instance when your original data
changes you need to make sure to update

300
00:19:00,001 --> 00:19:02,420
the cache data or else you're going to
have

301
00:19:02,429 --> 00:19:06,700
staleness bugs and on the flip side

302
00:19:06,007 --> 00:19:10,028
if the original data haven't changed
than you shouldn't be going about Jerry

303
00:19:10,091 --> 00:19:11,092
adding new

304
00:19:11,092 --> 00:19:13,189
cash representations that information
either else you're going to have a

305
00:19:14,089 --> 00:19:16,113
vision see problems

306
00:19:17,013 --> 00:19:20,036
now our problem here is stilts

307
00:19:20,036 --> 00:19:23,044
and you can see that the same issues

308
00:19:24,016 --> 00:19:27,785
apply for truth versus derived values

309
00:19:27,929 --> 00:19:32,190
as they do for caches and the values
which are being

310
00:19:32,019 --> 00:19:36,047
cash so its focus on the stand on this
issue here

311
00:19:36,047 --> 00:19:39,053
and try to understand what's going on
with our application how to

312
00:19:39,053 --> 00:19:42,952
get here where did we go wrong and how
do we model it with these information

313
00:19:43,429 --> 00:19:44,150
diagrams

314
00:19:44,015 --> 00:19:47,914
surgery in this diagram

315
00:19:48,049 --> 00:19:53,420
we see that the models are you to find
the text you value

316
00:19:53,042 --> 00:19:56,086
I guess they didn't show it to you but
take my word on that the models of the

317
00:19:56,086 --> 00:19:58,091
changes we set the text you value is
very straightforward

318
00:19:59,036 --> 00:20:01,855
we haven't seen any bugs with that at
least not yet anyway so let's go ahead

319
00:20:02,179 --> 00:20:03,740
and assume that this is how it works and

320
00:20:03,074 --> 00:20:07,159
when the models change the text using
validated saw love that is fine

321
00:20:08,059 --> 00:20:11,098
the problem that we're having is with
the character count we've seen the

322
00:20:11,098 --> 00:20:13,141
definition about the character count we
know that

323
00:20:14,041 --> 00:20:18,134
the character count as deriving its
value from the model

324
00:20:19,034 --> 00:20:22,125
but when the model changes the character
count is not invalidated

325
00:20:23,025 --> 00:20:27,026
rather it's when the text you changes

326
00:20:27,026 --> 00:20:32,050
the character count is being invalidated
and the lopsided miss in this diagram

327
00:20:32,005 --> 00:20:35,096
should hopefully indicate something to
you usually they rose is basically doing

328
00:20:36,041 --> 00:20:37,060
have a job

329
00:20:37,429 --> 00:20:41,630
you're splitting up these
responsibilities to different places

330
00:20:41,063 --> 00:20:44,111
and that's really because of our buck
region we can solve our bug

331
00:20:45,011 --> 00:20:48,025
by merging its responsibilities back to
one place because of the stillness

332
00:20:48,025 --> 00:20:50,082
problem by saying okay whenever the
model changes we need to make sure to

333
00:20:50,082 --> 00:20:50,811
update over

334
00:20:51,549 --> 00:20:55,730
values which are derived from that model

335
00:20:55,073 --> 00:20:58,079
it's really easy to do this in swift
because we've got these fancy new

336
00:20:59,033 --> 00:21:00,061
property observers

337
00:21:00,061 --> 00:21:05,750
we have to do is add that up the
character count call to our did set lock

338
00:21:06,299 --> 00:21:10,230
and in general gonna be way better off

339
00:21:10,023 --> 00:21:14,045
if you always keep users merge together
and this is a very pressing reason

340
00:21:14,045 --> 00:21:18,082
not to so that's just one more tool in
your tool bag

341
00:21:18,082 --> 00:21:21,146
for thinking about the complexity in
your application

342
00:21:22,046 --> 00:21:25,113
actually draw out these information
flows what the boxes

343
00:21:26,013 --> 00:21:29,100
where the arrow's teacher those arrows
actually mean

344
00:21:30,000 --> 00:21:34,028
both definition and invalidation because
they need to

345
00:21:34,028 --> 00:21:37,032
Realty might have still has problems

346
00:21:37,032 --> 00:21:42,047
now finally I'd like to turn your
attention to the text you

347
00:21:42,047 --> 00:21:45,048
now he said okay the text he was getting
its value

348
00:21:45,057 --> 00:21:48,086
from the model not part appears to work
but

349
00:21:48,086 --> 00:21:51,095
we know that when the user types in the
text you that model must be getting

350
00:21:51,095 --> 00:21:51,694
updated

351
00:21:52,549 --> 00:21:55,575
after all I can making a journal entry
and

352
00:21:55,809 --> 00:22:02,080
it appears to get saved so there must be
some reverse relationship here too

353
00:22:02,008 --> 00:22:06,019
how we think about that schematically in
the same way

354
00:22:06,019 --> 00:22:10,888
and in particular this looks like an
infinite loop

355
00:22:11,059 --> 00:22:14,290
but it's not we don't have a stack
overflow

356
00:22:14,029 --> 00:22:18,063
so these errors must be asymmetric in
some way

357
00:22:18,063 --> 00:22:21,098
and I propose to you that in thinking
about how new truth

358
00:22:21,098 --> 00:22:24,121
is created need to carefully consider

359
00:22:25,021 --> 00:22:30,062
the asymmetry those relationships in
your application

360
00:22:30,062 --> 00:22:35,139
alright so its return to our app talk
about creating new true

361
00:22:36,039 --> 00:22:39,061
now our application is another feature
I've been told you about that features

362
00:22:39,061 --> 00:22:39,127
that

363
00:22:40,027 --> 00:22:44,048
I can share my journal with a loved one
I can let my fiance see all these

364
00:22:44,048 --> 00:22:47,057
entries i right

365
00:22:47,057 --> 00:22:50,116
at a great feature I'm but it's
complicated somewhat by the fact that

366
00:22:51,016 --> 00:22:51,058
there's this

367
00:22:51,058 --> 00:22:54,152
edit button here you know if I were to
start

368
00:22:55,052 --> 00:22:59,078
editing the century you see our
character count issue on display again

369
00:22:59,078 --> 00:23:05,112
about to start editing the century out
we need this break point anymore

370
00:23:06,012 --> 00:23:09,107
then we don't expect

371
00:23:10,007 --> 00:23:13,071
for my fiance just a reminder phone to
actually see

372
00:23:13,071 --> 00:23:17,169
this at a journal entry at right because
I can hit cancel

373
00:23:18,069 --> 00:23:22,096
I'll be throwing it out presumably the
old entry would still be there

374
00:23:22,096 --> 00:23:27,115
so I said that working with the model
here but we must not be working with

375
00:23:28,015 --> 00:23:32,034
any model must be working with some
other model

376
00:23:32,034 --> 00:23:36,052
that has a relationship to the first
model

377
00:23:36,052 --> 00:23:39,099
because if they were really one model
then there will be no real way a

378
00:23:39,099 --> 00:23:42,185
implement this cancel button and she
would be seeing those changes as soon as

379
00:23:43,085 --> 00:23:46,127
I made them

380
00:23:47,027 --> 00:23:51,090
I'm going to suggest that thinking about
the relationship between this

381
00:23:51,009 --> 00:23:54,107
editing you eyes model and the
underlying model

382
00:23:55,088 --> 00:23:58,099
which it is added a is actually the same

383
00:23:58,099 --> 00:24:02,163
as the relationship between the model
underline the TextView

384
00:24:03,063 --> 00:24:07,152
and the new values that the text use
emitting to the mall

385
00:24:08,052 --> 00:24:12,069
but if we're gonna think about this
effectively we really need

386
00:24:12,069 --> 00:24:15,113
to be able to think about it from

387
00:24:16,013 --> 00:24:20,020
a diagrammatic perspectives so that we
can see where everything is in

388
00:24:20,002 --> 00:24:24,043
how it's going so talk about these
errors

389
00:24:24,061 --> 00:24:27,078
let's talk about what they need

390
00:24:27,078 --> 00:24:33,083
what's that asymmetry we know if we
start with just the text you

391
00:24:33,083 --> 00:24:36,090
that the Texas values defined by the
models value we also know that if we

392
00:24:37,053 --> 00:24:40,119
edit the text you somehow that monica is
getting updated

393
00:24:41,019 --> 00:24:44,022
but the tax-free with deference

394
00:24:44,049 --> 00:24:48,057
to the model value if the mall Delhi
where change

395
00:24:48,057 --> 00:24:50,150
out from under the text you somebody
were to just Sep the body to something

396
00:24:51,005 --> 00:24:52,016
else

397
00:24:52,061 --> 00:24:55,158
but text you would probably just update
immediately to that new value

398
00:24:56,058 --> 00:24:59,287
and if some other piece the program were
wondering what

399
00:24:59,809 --> 00:25:03,340
is the body value up this journal entry

400
00:25:03,034 --> 00:25:06,733
they wouldn't asked the text you or at
least we hope that they went as we saw

401
00:25:07,039 --> 00:25:11,860
earlier instead we hope that they would
ask the model

402
00:25:11,086 --> 00:25:14,515
the model is true and these derived
values

403
00:25:15,289 --> 00:25:18,510
are different too true these new values
they met

404
00:25:18,051 --> 00:25:21,124
as you added are like suggestions

405
00:25:22,024 --> 00:25:26,713
flowing back up the graph to the model
along these dashed arrows

406
00:25:26,929 --> 00:25:30,020
truth new pieces of information facts

407
00:25:30,002 --> 00:25:34,027
these things flow from the model to the
derived values

408
00:25:34,027 --> 00:25:38,046
and suggested new pieces of information
flow back from a taxi to the model

409
00:25:38,289 --> 00:25:43,630
because the course the consolidation the
behavior over application with respect

410
00:25:43,063 --> 00:25:46,145
to the 140 character 20 limit could be
that we just okay

411
00:25:47,045 --> 00:25:52,063
so it could be that that suggested
value: was not applied exactly

412
00:25:52,063 --> 00:25:55,065
in this way this relationship is
asymmetrical

413
00:25:55,065 --> 00:25:58,464
and we can use the same structure is
thinking

414
00:25:59,049 --> 00:26:02,049
to think about the entry viewing
controller

415
00:26:02,049 --> 00:26:05,730
which presented that editing controller
and

416
00:26:05,073 --> 00:26:08,108
the entry editing controller there's
some original model

417
00:26:09,008 --> 00:26:13,015
not so my fiance saying she looks at the
app and that's the one that's gonna

418
00:26:13,015 --> 00:26:16,021
still be there if we hit cancel

419
00:26:16,021 --> 00:26:19,062
and then there's the model that were
edited which

420
00:26:19,062 --> 00:26:22,126
began from a copy at the original model

421
00:26:23,026 --> 00:26:26,085
so the same way as these other
relationships in our crap the model that

422
00:26:26,085 --> 00:26:29,534
we're editing is derived from the
original model

423
00:26:30,299 --> 00:26:34,300
and when we had that done button

424
00:26:34,309 --> 00:26:37,358
are editing controller is suggesting a
new value

425
00:26:37,799 --> 00:26:42,990
for the model to the viewing controller
that is how new truth

426
00:26:42,099 --> 00:26:45,099
is created

427
00:26:45,099 --> 00:26:48,145
I want you to imagine with me because it
isn't on the slide

428
00:26:49,045 --> 00:26:52,102
that there is a dashed arrow coming from
the model

429
00:26:53,002 --> 00:26:56,073
back up to the original model that is
how you can think about this

430
00:26:56,073 --> 00:26:57,126
relationship

431
00:26:58,026 --> 00:27:02,121
just as the model may validate the text
is value is coming out the text you

432
00:27:03,021 --> 00:27:06,089
the original entry view controller maybe

433
00:27:06,089 --> 00:27:11,089
validating the edited entry for instance
if she were able to edit those journal

434
00:27:11,089 --> 00:27:11,176
entries also

435
00:27:12,076 --> 00:27:15,141
there could be a conflict now and so
when the new model value suggested

436
00:27:16,041 --> 00:27:19,134
some you I might be presented to allow
that merged to happen

437
00:27:20,034 --> 00:27:24,098
in the same way the editing controller
its value is derived from the viewing

438
00:27:24,098 --> 00:27:24,186
controller

439
00:27:25,086 --> 00:27:30,092
and the new value was only a suggestion
to the viewing controller

440
00:27:31,046 --> 00:27:34,115
so we work through how these techniques
can help us solve several real-world

441
00:27:35,015 --> 00:27:36,110
application problems

442
00:27:37,001 --> 00:27:40,069
and hopefully they suggest to you ways
that you can solve

443
00:27:40,078 --> 00:27:43,109
the kinds of problems you face in your
everyday use have to actually think

444
00:27:44,009 --> 00:27:48,021
about how information and events are
flowing through application first where

445
00:27:48,021 --> 00:27:51,100
is true who really knows

446
00:27:51,289 --> 00:27:55,250
who is really responsible for those
fundamental pieces States

447
00:27:55,025 --> 00:27:58,060
information events in your application

448
00:27:58,006 --> 00:28:01,945
and then once you start thinking about
how the flow through your application

449
00:28:02,539 --> 00:28:07,580
remember the difference between true and
the values derived from church

450
00:28:07,058 --> 00:28:10,063
remember that values derived from sure
there are many ways like a cash

451
00:28:11,008 --> 00:28:15,065
and needed to be treated as such and
finally remember that when new truth is

452
00:28:15,065 --> 00:28:16,160
created

453
00:28:17,006 --> 00:28:20,205
that relationship asymmetrical by
necessity

454
00:28:20,799 --> 00:28:25,090
in order to avoid some kind of infinite
loop one direction

455
00:28:25,009 --> 00:28:28,078
facts flow and in the other direction

456
00:28:28,159 --> 00:28:32,460
suggested new values flow which may need
to be merged a valid in some way

457
00:28:32,046 --> 00:28:35,385
by thinking systematically about the
information flow in your application

458
00:28:35,799 --> 00:28:40,100
you can really get a handle a complexity

459
00:28:40,001 --> 00:28:43,042
all right now let's move on

460
00:28:43,051 --> 00:28:46,085
I'm going in by calling their it up talk
about the fining

461
00:28:46,085 --> 00:28:49,404
clear responsibilities for your
application

462
00:28:50,169 --> 00:28:56,120
here

463
00:28:56,012 --> 00:28:58,051
thank you any good afternoon everybody

464
00:28:58,051 --> 00:29:01,137
miss next section minute show you

465
00:29:02,037 --> 00:29:05,084
how to identify and tease apart

466
00:29:05,084 --> 00:29:09,161
responsibilities in your application but
start with an example

467
00:29:10,061 --> 00:29:14,087
form validation

468
00:29:14,087 --> 00:29:20,130
we've all at least used form like this
many russians may be implemented one

469
00:29:21,003 --> 00:29:24,034
you know it's not a simple as

470
00:29:24,061 --> 00:29:27,085
just putting from text field on the
screen and a button

471
00:29:27,085 --> 00:29:30,089
their rules about

472
00:29:31,025 --> 00:29:35,076
what values are allowed in a different
text fields before we have here

473
00:29:35,076 --> 00:29:38,078
and how the other interface elements

474
00:29:38,096 --> 00:29:41,125
in this view are enabled

475
00:29:42,025 --> 00:29:45,028
and disabled or shown in hidden

476
00:29:45,028 --> 00:29:49,126
depending on the values the text field
so

477
00:29:50,026 --> 00:29:53,115
what they were implementing this are

478
00:29:54,015 --> 00:29:57,069
this few here where we start

479
00:29:57,069 --> 00:30:02,114
well will need to know when the user
finishes editing a text field

480
00:30:03,014 --> 00:30:06,101
so will implement the text field did and
editing

481
00:30:07,001 --> 00:30:10,012
delegate message

482
00:30:10,012 --> 00:30:13,031
our view controller and in that

483
00:30:13,031 --> 00:30:16,115
delegate message we're gonna need to
consider each text field

484
00:30:17,015 --> 00:30:20,020
and if they're all valid enable the Sign
up button

485
00:30:20,065 --> 00:30:24,159
but we can't exactly consider

486
00:30:25,059 --> 00:30:28,130
all these text field uniformly they all
have different

487
00:30:29,003 --> 00:30:33,010
rules let's look at the rules for the
username

488
00:30:33,037 --> 00:30:37,103
field with this regular expression

489
00:30:38,003 --> 00:30:41,058
that our server engineers came to us we
have to match that against the content

490
00:30:41,058 --> 00:30:42,081
to be using text field

491
00:30:42,081 --> 00:30:45,118
we don't have any if we don't match

492
00:30:46,018 --> 00:30:49,084
we're gonna need it show the user
somehow that they messed up in

493
00:30:49,084 --> 00:30:53,153
when you go back and correct a mistake
now

494
00:30:54,053 --> 00:30:58,067
there's a1 other complication here and
that's if our text fielder empty

495
00:30:58,067 --> 00:31:01,136
if or

496
00:31:02,036 --> 00:31:07,049
text goes empty when we're checking each
field we're gonna wanna leave it alone

497
00:31:07,049 --> 00:31:11,085
but one were considering the state of
the Sign up button

498
00:31:11,085 --> 00:31:16,140
we're gonna want to leave the Sign up
button

499
00:31:17,004 --> 00:31:22,021
disabled so we're gonna wanna leave
unstable because

500
00:31:22,057 --> 00:31:27,074
we don't want the user percy with
partially filled out form so let's go

501
00:31:27,074 --> 00:31:28,091
back to the user name

502
00:31:28,091 --> 00:31:31,107
part-time see what that would look like
an in cult

503
00:31:32,007 --> 00:31:36,053
so yes there's a lot of code

504
00:31:36,053 --> 00:31:39,087
but it's all different sorts of

505
00:31:39,087 --> 00:31:43,179
thanks intermingle we have local
variables the track the state love the

506
00:31:44,079 --> 00:31:49,156
text fields and I've empty text fields
we have a bunch regular expression code

507
00:31:50,056 --> 00:31:54,119
right next to that and in between all
that we have

508
00:31:55,019 --> 00:31:58,102
these two lines which are really the
most important

509
00:31:59,002 --> 00:32:02,411
for what the view controller does which
is to manage

510
00:32:02,429 --> 00:32:08,504
and configure its constituent views so
much like we can diagram

511
00:32:09,179 --> 00:32:14,310
information for application we can also
diagram

512
00:32:14,031 --> 00:32:18,077
responsibilities who does what here

513
00:32:18,077 --> 00:32:21,083
in the diagram that we've been thinking
about so far we we have our view

514
00:32:21,083 --> 00:32:21,145
controller

515
00:32:22,045 --> 00:32:25,090
which manages and configures its
constituent views

516
00:32:25,009 --> 00:32:29,040
and we have our views which display the
data given

517
00:32:30,021 --> 00:32:35,050
work or animation Inc or graphics but
we've identified

518
00:32:35,005 --> 00:32:39,014
a third overlapping responsibility
validation

519
00:32:39,059 --> 00:32:42,071
as may not think

520
00:32:42,071 --> 00:32:46,139
so bad but if we had another view
controller that also have to do some

521
00:32:47,039 --> 00:32:48,040
more validation

522
00:32:48,004 --> 00:32:51,011
know how the same logic into places

523
00:32:51,047 --> 00:32:55,131
a bug in one at 3:15 the other and fence

524
00:32:56,031 --> 00:33:00,066
these are in different places it's
likely that they will diverge overtime

525
00:33:00,066 --> 00:33:05,083
I'm typeof we'll get at it in one place
but not the other cuz not left 30 their

526
00:33:05,083 --> 00:33:09,682
making it even more difficult to change
and

527
00:33:10,429 --> 00:33:13,840
and fix these common issues overtime

528
00:33:13,084 --> 00:33:17,178
so what we want to do is separate their
responsibility out

529
00:33:18,078 --> 00:33:25,078
in one place that can be shared by both
you controllers

530
00:33:27,036 --> 00:33:31,095
so to do that we person identified

531
00:33:31,419 --> 00:33:34,790
what validation actually it's

532
00:33:34,079 --> 00:33:38,080
when thinking about these types of
questions it's useful to think of the

533
00:33:38,008 --> 00:33:39,014
input

534
00:33:39,086 --> 00:33:43,099
and output Ford to put it another way

535
00:33:43,099 --> 00:33:46,152
what information do I need and what
questions

536
00:33:47,052 --> 00:33:50,127
much trying to answer so are they build
through

537
00:33:51,027 --> 00:33:54,080
this a common sense Val explanation what
validation is

538
00:33:54,008 --> 00:33:58,089
I'm gonna fill an the inputs an output
in stable

539
00:33:59,061 --> 00:34:03,105
so validation seems to be that

540
00:34:04,005 --> 00:34:08,087
if you give me an input value I can tell
you if it's valid

541
00:34:08,087 --> 00:34:12,148
and it is not a valid I can tell you why
these pretty directly translate

542
00:34:13,048 --> 00:34:16,059
to fairly simple data types

543
00:34:16,059 --> 00:34:20,102
and we look at what that looks like here
in swept

544
00:34:21,002 --> 00:34:25,085
on forgiveness in fact they're there we
have are output

545
00:34:25,085 --> 00:34:28,172
types were here but we're missing our
input

546
00:34:29,072 --> 00:34:32,781
at because we want to leave this
actually open to interpretation in this

547
00:34:33,429 --> 00:34:34,431
case

548
00:34:34,629 --> 00:34:39,700
because a good technique for dealing
with complicate responsibilities

549
00:34:39,007 --> 00:34:42,011
it to be able to build larger units

550
00:34:42,074 --> 00:34:46,101
are smaller ones so in this case will
build larger Bella there's

551
00:34:47,001 --> 00:34:50,670
at a smaller ones so for those larger
validators

552
00:34:50,679 --> 00:34:53,728
the input will be implicit in the

553
00:34:54,169 --> 00:34:57,200
constituent Valley daters input

554
00:34:57,002 --> 00:35:00,008
this technique is called composition for
composing

555
00:35:00,008 --> 00:35:03,091
a large around later at a smaller ones
and it works

556
00:35:04,063 --> 00:35:07,076
totally fine objective-c to I also

557
00:35:07,076 --> 00:35:10,079
really like swift I

558
00:35:11,006 --> 00:35:14,023
so let's look at what I username object

559
00:35:14,023 --> 00:35:19,025
%um calendar object implements this
validation protocol would look like

560
00:35:19,043 --> 00:35:22,138
wall we have our input here the string
and

561
00:35:23,038 --> 00:35:26,134
this bell date with error function is

562
00:35:27,034 --> 00:35:30,066
where we're going to have our regular
expression code

563
00:35:30,066 --> 00:35:33,075
it's now up isolated it's not air
mingled with

564
00:35:33,075 --> 00:35:37,134
all these this other code we can do
likewise

565
00:35:38,034 --> 00:35:41,076
for password validation

566
00:35:41,076 --> 00:35:44,121
but may be wondering that

567
00:35:45,021 --> 00:35:48,092
dazzling represent the validity of a
single password field

568
00:35:48,092 --> 00:35:51,163
then that's correct we need to represent
that to password fields

569
00:35:52,063 --> 00:35:55,099
match in value in addition to an not
being too short

570
00:35:55,099 --> 00:35:58,118
not being hi mom things like that

571
00:35:59,018 --> 00:36:02,447
so will create a that password valliere
that has

572
00:36:02,609 --> 00:36:06,340
to password validators is a composition
action

573
00:36:06,034 --> 00:36:09,107
its gonna represent in addition to that
the password field

574
00:36:10,007 --> 00:36:14,796
individually are valid that they're also
matching in value

575
00:36:14,859 --> 00:36:20,970
we can also apply this composition
technique to our overall form

576
00:36:20,097 --> 00:36:23,100
we have a username validator set
password bow their

577
00:36:24,027 --> 00:36:29,099
an email address validator

578
00:36:29,099 --> 00:36:35,122
this is also where will handle the
behavior know we talked about earlier

579
00:36:36,022 --> 00:36:40,054
be constituent elders will allow mill
because we don't want the individual

580
00:36:40,054 --> 00:36:41,085
text field to show

581
00:36:41,085 --> 00:36:45,114
a story air state wanna empty that would
be confusing

582
00:36:46,014 --> 00:36:49,066
but this sign up valliere will check

583
00:36:49,066 --> 00:36:52,067
that its constituent validators have non
mil

584
00:36:52,076 --> 00:36:55,171
input and if any of those inputs are no

585
00:36:56,071 --> 00:36:59,080
it'll say it's not valid allowing us to
easily disable

586
00:36:59,008 --> 00:37:04,081
Sign up button so let's return to that
workflow we were looking at earlier

587
00:37:05,053 --> 00:37:08,132
and see what that looks like

588
00:37:08,609 --> 00:37:12,030
now were able to consider each text
field uniformly

589
00:37:12,003 --> 00:37:17,004
because all we do is set the input on
the corresponding validator

590
00:37:17,004 --> 00:37:20,085
were also able to decorate all the text
field uniformly as well

591
00:37:20,085 --> 00:37:23,121
the logic and that responsibility has
been moved elsewhere

592
00:37:24,021 --> 00:37:28,070
we're only talking to an abstract
interface

593
00:37:28,007 --> 00:37:31,040
so let's define clear responsibilities
with

594
00:37:32,003 --> 00:37:35,046
separated out the responsibility a
validation

595
00:37:35,046 --> 00:37:38,195
from the rest of our program

596
00:37:38,609 --> 00:37:42,300
we've use composition to build up

597
00:37:42,003 --> 00:37:46,016
larger pieces from smaller ones let's
move on out to

598
00:37:46,043 --> 00:37:51,068
our third section civil fine with the
mutability

599
00:37:51,068 --> 00:37:54,123
you may have heard on the Internet that
new ability is bad

600
00:37:55,023 --> 00:37:58,041
and you should feel bad for using it

601
00:37:58,041 --> 00:38:02,043
but no one is really told you why

602
00:38:02,043 --> 00:38:07,062
why is it bad I mean it's you use use
said it rate we're working imperative

603
00:38:07,062 --> 00:38:10,137
foreign languages here we have
statements

604
00:38:11,037 --> 00:38:16,043
so to illustrate that let's look at
another diagram

605
00:38:16,043 --> 00:38:19,052
in this diagram

606
00:38:19,052 --> 00:38:22,064
the red box represent immutable object
which doubt

607
00:38:22,064 --> 00:38:26,263
which has a value 5 me is circles here

608
00:38:26,839 --> 00:38:31,280
represent other objects are packing with
new mobile data around

609
00:38:31,028 --> 00:38:37,115
so what a packer this mutable object to
be

610
00:38:38,015 --> 00:38:41,090
be probably doesn't want that object
changing out from under it

611
00:38:41,009 --> 00:38:44,070
so how do we ensure that that happens

612
00:38:45,051 --> 00:38:49,054
well a phil has a reference

613
00:38:49,054 --> 00:38:52,137
to this object so be depends on

614
00:38:53,037 --> 00:38:58,044
a sorry if yes exactly a change that
then BC that change

615
00:38:58,044 --> 00:39:02,213
so be depends on a behaving in a
specific way

616
00:39:02,609 --> 00:39:06,450
they're linked in in this or
responsibility and and

617
00:39:06,045 --> 00:39:12,100
dependency graph now likewise if this
object now get past the see

618
00:39:13,000 --> 00:39:15,075
the other objects could still have
references to it they could still change

619
00:39:15,075 --> 00:39:16,124
it

620
00:39:17,024 --> 00:39:21,048
so see may depend on A&B

621
00:39:21,048 --> 00:39:24,123
but actually it will get worse than that
because

622
00:39:25,023 --> 00:39:28,152
a RBI could be waiting for C you make
some sort range

623
00:39:28,359 --> 00:39:32,690
AB a has a register for KD 0 observation

624
00:39:32,069 --> 00:39:35,127
maybe beers in the deli on this object
is waiting for some for a call back to

625
00:39:36,027 --> 00:39:36,115
happen

626
00:39:37,015 --> 00:39:41,027
the specific timing of that could be
part of these implementation

627
00:39:41,027 --> 00:39:44,050
iffy changes what it calls some Center

628
00:39:44,005 --> 00:39:48,594
that could screw up be so we're seeing
here how mutability

629
00:39:49,089 --> 00:39:53,430
hi all these things together it's one of
the biggest reasons

630
00:39:53,043 --> 00:39:57,044
why you feel that drag that any was
talking about as your application grows

631
00:39:57,044 --> 00:39:58,077
bigger

632
00:39:58,077 --> 00:40:01,108
and it also explains what adding
abstraction often

633
00:40:02,008 --> 00:40:06,039
doesn't help as long as you're passing
around the same mutable data

634
00:40:06,039 --> 00:40:09,098
it doesn't matter how many layers you
happy here in fact just

635
00:40:09,098 --> 00:40:12,110
lashing more mutable layers on

636
00:40:13,001 --> 00:40:16,058
onto the big ball so

637
00:40:16,067 --> 00:40:20,067
let's look at what would happen if the
subject was immutable instead

638
00:40:20,067 --> 00:40:25,073
we couldn't change its value when a
passes it to be

639
00:40:26,027 --> 00:40:30,044
while a size reference to it but can
change it

640
00:40:30,044 --> 00:40:34,093
no one can change it it can never change
it be done to make a change

641
00:40:34,093 --> 00:40:38,122
s to make a copy impact that copy to see

642
00:40:39,022 --> 00:40:42,041
no arrows here there's no dependencies
everything

643
00:40:42,041 --> 00:40:46,970
has a data that they have and that's it

644
00:40:47,339 --> 00:40:51,170
so there is a trade-off here the right

645
00:40:51,017 --> 00:40:54,023
your ability inheritors to think about

646
00:40:54,023 --> 00:40:57,067
locally thing about building up a string

647
00:40:57,067 --> 00:41:02,081
or ray it also wasteful the crate
airmedia copies

648
00:41:02,081 --> 00:41:05,085
one no one else's new tearing our

649
00:41:05,085 --> 00:41:08,086
in when Noel canfield mutations yet

650
00:41:08,095 --> 00:41:12,118
you may be wondering is there a better
way happy to say this was struck

651
00:41:13,018 --> 00:41:17,037
are that better way they have often
utility

652
00:41:17,037 --> 00:41:20,045
be in the mutating keyword this lets you

653
00:41:20,045 --> 00:41:23,118
choose whether or not a struct is
YouTube or or immutable

654
00:41:24,018 --> 00:41:27,042
based on using the let or var keyword to
introduce the binding

655
00:41:27,042 --> 00:41:32,065
to the name when you when you declared
so

656
00:41:32,065 --> 00:41:35,133
Swiss truck offer on the property there
call by value which just means that a

657
00:41:36,033 --> 00:41:38,039
new copy is automatically created from
you

658
00:41:38,093 --> 00:41:41,121
in past that's trucked for one function
to another

659
00:41:42,021 --> 00:41:45,100
you don't pass a reference or pointer
like you do with an objective-c

660
00:41:46,000 --> 00:41:49,026
or swept I object

661
00:41:49,026 --> 00:41:52,124
so let's go back to diagramming see what
that would look like one more time

662
00:41:53,024 --> 00:41:57,047
here we have our Swiss struct happy you
green box

663
00:41:57,047 --> 00:42:01,053
I and when we pass it from a to be

664
00:42:02,007 --> 00:42:05,095
an implicit copy is made and that's with
passerby

665
00:42:05,095 --> 00:42:09,140
he can happen when you take a want
people changes

666
00:42:10,004 --> 00:42:13,004
and again when we pass it

667
00:42:13,004 --> 00:42:16,069
another copy is made and see get its own
copy

668
00:42:17,005 --> 00:42:21,010
so that's one for the mutability

669
00:42:21,001 --> 00:42:24,002
that house was struck can help us be

670
00:42:24,002 --> 00:42:27,065
get a lot of the benefits have any
ability without sacrificing

671
00:42:27,083 --> 00:42:30,101
a programming you the programmability

672
00:42:31,001 --> 00:42:34,047
but there's another kind of in your
ability i wanna talk about we see that

673
00:42:34,047 --> 00:42:35,110
in you I motion effect

674
00:42:36,001 --> 00:42:39,022
not familiar with you emotional fact it

675
00:42:39,031 --> 00:42:44,114
simply adjust properties on views based
on jars coke data

676
00:42:45,014 --> 00:42:48,030
we use this to achieve the parallax
effect on the home screen elsewhere

677
00:42:48,003 --> 00:42:51,067
throughout the OS

678
00:42:51,094 --> 00:42:54,103
motion effects are reusable across many
views

679
00:42:55,003 --> 00:43:01,005
have one type of motion no its crate
wanna fact

680
00:43:01,023 --> 00:43:04,114
motion effects of a very low latency
requirements we don't want to get behind

681
00:43:05,014 --> 00:43:08,026
the Giro data because that was laggy

682
00:43:08,026 --> 00:43:11,030
and its really ruins the magical
effective

683
00:43:11,003 --> 00:43:15,036
para lacks on the home screen and other
places

684
00:43:15,063 --> 00:43:18,121
so

685
00:43:19,021 --> 00:43:23,076
again at work we're going to show how
this is also immutability

686
00:43:23,076 --> 00:43:26,088
once again by considering the inputs
outputs

687
00:43:26,088 --> 00:43:29,133
on the motion of that process

688
00:43:30,033 --> 00:43:34,033
motion a fax take a device pose which is
simply

689
00:43:34,033 --> 00:43:38,046
description love the devices orientation
in space

690
00:43:38,046 --> 00:43:42,055
and return a relative offset for each
keypad

691
00:43:42,055 --> 00:43:45,864
that we want to change

692
00:43:46,359 --> 00:43:49,830
it may be a somewhat surprising describe
emotional factors immutable

693
00:43:49,083 --> 00:43:52,180
it doesn't really have 12 properties not
we're dealing with

694
00:43:53,008 --> 00:43:56,027
you I am terribly much in fact it

695
00:43:56,099 --> 00:43:59,195
feel more like a function but in your
ability is actually a

696
00:44:00,095 --> 00:44:03,192
debe idea and had deep our

697
00:44:04,092 --> 00:44:07,761
because motion affects take an absolute
device pose

698
00:44:08,589 --> 00:44:12,270
return a relative of her they can always
return the same

699
00:44:12,027 --> 00:44:16,046
dictionary for the same input device
parks

700
00:44:16,046 --> 00:44:19,049
in much the same way that if you don't
have a a fetter you always return the

701
00:44:19,076 --> 00:44:21,168
same value for your candor

702
00:44:22,068 --> 00:44:25,073
so to really show that this design is

703
00:44:26,018 --> 00:44:29,093
in is mutable let's look at some
alternative designs

704
00:44:29,093 --> 00:44:33,098
promotion fax what say that we thought
that having

705
00:44:33,098 --> 00:44:36,192
Delta inputs rather than actual absolute
device pose

706
00:44:37,092 --> 00:44:40,120
was a better design well

707
00:44:41,002 --> 00:44:44,039
with Sauber device posed data but it
will be dealt is

708
00:44:44,057 --> 00:44:47,070
and would still be giving back relative
offsets

709
00:44:47,007 --> 00:44:51,026
but the calculators offsets we would
actually need to figure out what

710
00:44:51,089 --> 00:44:54,180
the current orientation the device was
so we would depend

711
00:44:55,008 --> 00:45:01,067
upon all previous poses as an implicit
former them put

712
00:45:01,859 --> 00:45:05,650
now are inputs are not just all possible
device poses

713
00:45:05,065 --> 00:45:09,073
but all possible sequences a device
posed albert's

714
00:45:09,073 --> 00:45:12,105
at a lot bigger input space hearted test

715
00:45:13,005 --> 00:45:16,016
harder to reason about and

716
00:45:16,016 --> 00:45:19,085
it's also not immutable because as our
application changes over time

717
00:45:19,085 --> 00:45:22,101
we're gonna get different answers

718
00:45:23,001 --> 00:45:26,077
likewise if we had absolute offsets

719
00:45:26,077 --> 00:45:29,916
rather than a relative of that we would
have

720
00:45:30,609 --> 00:45:34,050
value-free keypad that we're turning
absolute offset we would

721
00:45:34,005 --> 00:45:38,008
we depend on our particular view that
particular view

722
00:45:38,008 --> 00:45:41,062
would make his motion effect not
something that was reusable across many

723
00:45:41,062 --> 00:45:41,160
different places

724
00:45:42,006 --> 00:45:45,024
and again would make it so that its
value

725
00:45:45,078 --> 00:45:49,165
for a particular device pose would
change overtime

726
00:45:50,065 --> 00:45:53,119
so thats super fun with the mutability

727
00:45:54,019 --> 00:45:57,048
we seem to different forms of
immutability

728
00:45:57,048 --> 00:46:01,051
and how we can leverage those to build
simpler

729
00:46:01,051 --> 00:46:05,900
more easy to reason about portions were
application

730
00:46:06,359 --> 00:46:09,378
be able to reason abstractly about peace
in your application

731
00:46:09,549 --> 00:46:12,650
is critical captain no every nook and
cranny

732
00:46:12,065 --> 00:46:15,153
on the system and wonder if changing one
thing is gonna cost something else to

733
00:46:16,053 --> 00:46:17,071
break

734
00:46:17,071 --> 00:46:24,071
ap just become this big spider web you
can never really escape from

735
00:46:24,083 --> 00:46:27,179
talked about a lot today so let's just
review everything we've gone over

736
00:46:28,079 --> 00:46:31,124
right now first

737
00:46:32,024 --> 00:46:36,025
we talked about how to design
information flow in your application

738
00:46:36,025 --> 00:46:40,027
we learn the difference between truth
and derive value

739
00:46:40,027 --> 00:46:43,056
how new truth is created

740
00:46:43,056 --> 00:46:46,835
we saw how to define clear
responsibilities how to tease apart

741
00:46:47,339 --> 00:46:50,630
different portion the app how to isolate
them

742
00:46:50,063 --> 00:46:56,081
we also saw how to use that isolation to
build things a composition

743
00:46:56,081 --> 00:46:59,360
we also saw to simplify with the
mutability to increase

744
00:47:00,089 --> 00:47:04,640
our ability to abstractly reason about
our application

745
00:47:04,064 --> 00:47:07,513
so what now you heard this talk maybe
hopefully

746
00:47:08,089 --> 00:47:12,530
you're all fired up about these concepts

747
00:47:12,053 --> 00:47:15,118
go back to your apt put someone in
action

748
00:47:16,018 --> 00:47:19,023
when you're designing a feature think
about the information flow

749
00:47:19,023 --> 00:47:23,102
think about the responsibilities share
this talk with your coworkers

750
00:47:24,002 --> 00:47:27,037
tell them about it I'm in your app
specifically your

751
00:47:27,037 --> 00:47:30,050
ap where there was a bug where you are
maybe updating

752
00:47:30,005 --> 00:47:37,005
for cash that you didn't really even
realize what the cash until just now

753
00:47:37,094 --> 00:47:41,176
so we got today for more information
contact a parent's

754
00:47:42,076 --> 00:47:45,077
build gave a talk this morning about

755
00:47:45,077 --> 00:47:49,124
to other type design patterns in in our
frameworks

756
00:47:50,024 --> 00:47:52,028
thank you for listening have a great
afternoon

