1
00:00:11,011 --> 00:00:14,019
welcome to this afternoon the this
year's addition

2
00:00:14,019 --> 00:00:15,073
and what's new information network

3
00:00:15,073 --> 00:00:19,127
ng permission networking is a course for
layer up networking is available to

4
00:00:20,027 --> 00:00:21,196
application developers

5
00:00:21,439 --> 00:00:26,360
on Mac OS 10 and I O S I it's our goal
to provide you guys

6
00:00:26,036 --> 00:00:30,057
where the protocol and networking
support that you need to make great

7
00:00:30,057 --> 00:00:33,094
applications on a platform of course we
use the VPN herself

8
00:00:33,094 --> 00:00:36,143
here's a standard picture

9
00:00:36,989 --> 00:00:40,010
what framework for like honor system I'm

10
00:00:40,001 --> 00:00:44,005
your application for fun top and now in
danger also having extension

11
00:00:44,005 --> 00:00:47,060
are better sitting on top while these
frameworks and extensions are

12
00:00:47,006 --> 00:00:48,285
particularly interesting

13
00:00:48,879 --> 00:00:53,460
for background networking be Karen when
your extension terminate you might still

14
00:00:53,046 --> 00:00:54,165
need to have worked on

15
00:00:54,579 --> 00:00:58,420
news background networking to ensure
fashion to get that worked on

16
00:00:58,042 --> 00:01:02,661
looking up different levels but actually
make

17
00:01:03,039 --> 00:01:07,097
up foundation networking let me start
with you know that the corner where

18
00:01:07,619 --> 00:01:11,840
I'm BFT networking where this is from my
with my wallet fokker

19
00:01:11,084 --> 00:01:15,393
it binded address in it kinda like
building a car from a cat

20
00:01:16,149 --> 00:01:19,152
and back to my question started

21
00:01:19,179 --> 00:01:22,780
we took be foundation layer

22
00:01:22,078 --> 00:01:26,122
things from next app I and we said well
we need from interfering PI in

23
00:01:27,022 --> 00:01:29,781
CoreFoundation came out and see if
networking at

24
00:01:29,979 --> 00:01:34,780
but as time has gone on we find more
more developers want a higher level

25
00:01:34,078 --> 00:01:34,647
approach

26
00:01:35,349 --> 00:01:38,670
felt foundation and foundation
networking provide

27
00:01:38,067 --> 00:01:41,083
Anna URL session

28
00:01:41,083 --> 00:01:45,108
replacing initial connection and if
streams in an ethnic services

29
00:01:46,008 --> 00:01:49,033
and a Coco style

30
00:01:49,033 --> 00:01:52,075
ATI for developers to use on Mac West
Ham

31
00:01:52,075 --> 00:01:55,161
and I'll believe

32
00:01:56,061 --> 00:01:59,075
a pure serve different purposes arm and

33
00:01:59,075 --> 00:02:04,394
stream is the PRI back you think bite

34
00:02:05,069 --> 00:02:08,080
into the system in various places would
receive by out

35
00:02:08,179 --> 00:02:12,370
when you maybe don't have an idea how
many bytes rar you have a final on day

36
00:02:12,037 --> 00:02:13,876
asking you know there's a certain signs

37
00:02:14,209 --> 00:02:17,251
so you could if I Olympic animus input
stream from a file

38
00:02:17,629 --> 00:02:21,170
or you could really feel even if input
stream from the PRI

39
00:02:21,017 --> 00:02:24,286
don't know how big it is for your
schedule this treatment and you start

40
00:02:24,439 --> 00:02:25,442
reading bite out of it

41
00:02:25,469 --> 00:02:28,543
and ethnic services in the PI

42
00:02:29,209 --> 00:02:32,211
that allows you to do peer to peer
servers

43
00:02:32,409 --> 00:02:35,464
and client are on your machine on your
device

44
00:02:35,959 --> 00:02:39,780
talking to other devices so it's it's a
great way of publishing work what you

45
00:02:39,078 --> 00:02:40,457
want other app still

46
00:02:41,159 --> 00:02:44,231
every hero fashion provide

47
00:02:44,879 --> 00:02:48,260
observe a message beef delivery you're
talking about

48
00:02:48,026 --> 00:02:52,125
putting a request on the network
everything response and and Erica

49
00:02:52,359 --> 00:02:56,425
on in the stock wanna talk about birth

50
00:02:57,019 --> 00:03:01,230
API seventh stream and if it's a reason
for natural session

51
00:03:01,023 --> 00:03:04,372
when reviewing mister a fashion which is
what we introduced last year

52
00:03:04,579 --> 00:03:09,180
so there will be a bit a review here we
have a new protocol support

53
00:03:09,018 --> 00:03:12,087
and if you saw a be Craig

54
00:03:12,249 --> 00:03:16,650
talk yesterday parents are on one fly
there is no mention of a new protocol it

55
00:03:16,065 --> 00:03:16,734
will talk about

56
00:03:17,319 --> 00:03:21,260
and lastly were gonna spend some time
talking out the best way to use

57
00:03:21,026 --> 00:03:26,087
amateur of russian background networking
but get the new API family first

58
00:03:26,087 --> 00:03:29,346
and officers who have anything only
thing I arm

59
00:03:30,129 --> 00:03:33,155
but it's not really knew me even have a
level last year and I are 7

60
00:03:33,389 --> 00:03:36,397
this year include you to pierce the veil
on Mac OS

61
00:03:36,469 --> 00:03:39,760
can your family on hardware that
supports it which is

62
00:03:39,076 --> 00:03:44,118
reef in 2012 or later Mac hardware that
really only you can change available by

63
00:03:45,018 --> 00:03:48,837
it is now available for use NF

64
00:03:48,999 --> 00:03:52,002
stream get through new API now

65
00:03:52,029 --> 00:03:58,035
extreme in had toll-free bridged with
yep stream which means that there's a

66
00:03:58,629 --> 00:04:00,650
lower level API that this works with

67
00:04:00,065 --> 00:04:03,123
but at some point we lost the ability of
just creating

68
00:04:04,023 --> 00:04:07,402
extreme to a host on the Internet
threading back

69
00:04:07,609 --> 00:04:10,730
and we can get streams to to host with
name

70
00:04:10,073 --> 00:04:13,282
bring a portent the host community doubt
it I P

71
00:04:13,939 --> 00:04:17,040
IP be fair or a regular internet host
name

72
00:04:17,004 --> 00:04:20,070
the result is an InputStream InputStream
but you then

73
00:04:20,007 --> 00:04:23,015
open schedule and read and write from

74
00:04:23,078 --> 00:04:26,217
as for Strings get open work you have
fun to another layer

75
00:04:26,919 --> 00:04:30,810
so for instance if you had an audio
streaming app that wanted to read by

76
00:04:30,081 --> 00:04:33,158
of a network resource that was providing
you with are your data

77
00:04:34,058 --> 00:04:37,127
you 33 P IIT get and and if input stream
from that

78
00:04:38,027 --> 00:04:42,061
and path but anything but stream of to
be on a player well

79
00:04:42,061 --> 00:04:45,102
if you had bite you were generating you
want to defend internet

80
00:04:46,002 --> 00:04:49,058
audio player or if you want to filter
the news bites you might need to

81
00:04:49,058 --> 00:04:49,123
implement your

82
00:04:50,023 --> 00:04:53,046
own in a stream unified some pressing a
stream

83
00:04:53,046 --> 00:04:56,067
where the preferred way we want you to
do a in

84
00:04:56,067 --> 00:04:59,149
preening what we call a bound hair back
return input and output stream in a

85
00:05:00,049 --> 00:05:00,055
buffer

86
00:05:01,009 --> 00:05:04,080
so you're right by into the open stream:
and the

87
00:05:04,008 --> 00:05:07,102
audio unit or whatever it is will
consume a bite at the input string

88
00:05:08,074 --> 00:05:12,101
corrective a couple new API's in and if
not arisen

89
00:05:13,001 --> 00:05:16,009
and stream not talk about

90
00:05:16,009 --> 00:05:19,100
amateur fashion and a lot of fun for you
from last year

91
00:05:20,000 --> 00:05:24,041
and assure a session for the big machine
backhand a lot of moving parts

92
00:05:24,041 --> 00:05:27,114
ominous picture can look for a couple I
am

93
00:05:28,014 --> 00:05:31,051
it an object but you create with a
configuration

94
00:05:31,051 --> 00:05:34,123
and references storage object storage
object are needed

95
00:05:35,023 --> 00:05:38,078
to supply information about how to
perform a world

96
00:05:38,078 --> 00:05:41,105
well with Bo the capital is your
delegate but you bind

97
00:05:42,005 --> 00:05:46,057
in to the 50m and the purpose of this
ballot and that's one long

98
00:05:46,057 --> 00:05:49,065
is to take data in request and to
produce responsive

99
00:05:50,037 --> 00:05:53,099
and data object out so it's like
carrying passengers

100
00:05:53,099 --> 00:05:56,121
and duty-free shop out the other side
were you get everything here

101
00:05:57,021 --> 00:06:04,021
getting right very confident an issue of
session buffet Russian object itself

102
00:06:04,021 --> 00:06:08,052
the API upon initial session the main
factory class is common emitter of

103
00:06:08,052 --> 00:06:09,081
fashion

104
00:06:09,081 --> 00:06:12,167
arm and editor of freshman class has
created with an initial session

105
00:06:13,067 --> 00:06:16,070
configuration object the configuration
object

106
00:06:16,097 --> 00:06:19,108
in Fig dictionary of properties that

107
00:06:20,008 --> 00:06:24,032
the keeping flight the how many
connections we can make to a server

108
00:06:24,032 --> 00:06:28,130
what kinda after filming use what
storage object you can use

109
00:06:29,003 --> 00:06:33,052
the session create task object to be
used to represent

110
00:06:33,079 --> 00:06:36,103
the certain transient speed

111
00:06:37,003 --> 00:06:41,057
ivory sorry for the be loaded a task
object is created from a request or your

112
00:06:41,057 --> 00:06:42,060
L

113
00:06:42,087 --> 00:06:45,145
and its initial three is suspended
resume

114
00:06:46,045 --> 00:06:50,077
I it doesn't work within the fashion
conferring with your delegate as needed

115
00:06:50,077 --> 00:06:53,092
and then he ran the catholic and
finished

116
00:06:53,092 --> 00:06:56,113
are and you're done you got your data

117
00:06:57,013 --> 00:07:00,065
okay the delegated fell at it from a new
supply

118
00:07:00,065 --> 00:07:03,094
the delegate in arm

119
00:07:03,094 --> 00:07:07,103
African 100 bunch of different protocol
their purple session preparing for the

120
00:07:08,003 --> 00:07:08,041
various

121
00:07:08,041 --> 00:07:11,046
have someplace there are

122
00:07:11,046 --> 00:07:14,134
storage object back exist in the system
by fall

123
00:07:15,034 --> 00:07:19,046
arm parents any keychain be credential
store

124
00:07:19,046 --> 00:07:22,119
various a cookies store a cookie jar
cookies are

125
00:07:23,019 --> 00:07:26,022
for the general form a authentication

126
00:07:26,022 --> 00:07:29,059
arm be through the thing purposely
identify you to a website

127
00:07:29,059 --> 00:07:32,081
in 1122 communicate with you in

128
00:07:32,081 --> 00:07:35,081
waiting for your way

129
00:07:35,081 --> 00:07:38,084
protocol are objects back you can
register

130
00:07:38,084 --> 00:07:43,087
women fashion back overrun the default
behavior or provide additional behavior

131
00:07:43,087 --> 00:07:44,111
so your outlook right

132
00:07:45,011 --> 00:07:48,033
HTTP colon your protocol could be am

133
00:07:48,033 --> 00:07:51,069
00 F home run and you deal with move
protocol

134
00:07:51,069 --> 00:07:54,110
everyone arm including rewriting them to
become

135
00:07:55,001 --> 00:07:58,009
HTTP protocol

136
00:07:58,009 --> 00:08:01,068
i think is the Euro cache object which
is what we're able to console

137
00:08:02,049 --> 00:08:05,061
in order to avoid going out on the
network at all

138
00:08:05,061 --> 00:08:09,127
in emotional fashion your configuration
object you can specify your own

139
00:08:10,027 --> 00:08:16,092
subclasses for following through an
object

140
00:08:16,092 --> 00:08:19,101
the configuration object itself arm as I
mentioned

141
00:08:20,001 --> 00:08:23,096
it basically in the dictionary although
it be its comparative a bunch of at

142
00:08:23,096 --> 00:08:24,171
property attributes

143
00:08:25,071 --> 00:08:28,140
when you create one when you get a
configuration object you modify it

144
00:08:29,004 --> 00:08:30,021
however you want

145
00:08:30,057 --> 00:08:33,113
you to create a fashion with fact
configuration once you've created a

146
00:08:34,013 --> 00:08:35,081
fashion with a configuration

147
00:08:35,081 --> 00:08:38,087
you can't modify it again user from the
attributes

148
00:08:38,087 --> 00:08:41,089
you can change within a configuration

149
00:08:41,089 --> 00:08:44,538
he left levels whether you want to
support the latest your life I'm

150
00:08:45,339 --> 00:08:48,351
are restricted to bad working while the
previous one

151
00:08:48,459 --> 00:08:51,730
whether or not mile you are requesting
over the network

152
00:08:51,073 --> 00:08:54,932
yeah film our arm network service type
in

153
00:08:55,589 --> 00:09:00,370
well I'm doing video data and when a
higher priority effect available

154
00:09:00,037 --> 00:09:03,606
I'm I won't try in with all over
configuration options because there are

155
00:09:03,939 --> 00:09:07,945
quite a few more on the header file

156
00:09:07,999 --> 00:09:11,050
so to get a configuration object you can
after the default session configuration

157
00:09:11,509 --> 00:09:14,550
from the factory method that returns an
object

158
00:09:14,055 --> 00:09:17,104
back captures the global the framework

159
00:09:18,004 --> 00:09:21,473
if you look at the foundation for
workers in classes like ms. Tina

160
00:09:21,509 --> 00:09:25,536
have a a class map it and if the Red
Deer with content for the URL

161
00:09:25,779 --> 00:09:29,350
and if you're a pair for each CPU around
into that it will use

162
00:09:29,035 --> 00:09:32,834
all the global fall Family Foundation
framework in order to go out on the

163
00:09:33,149 --> 00:09:33,228
network

164
00:09:33,939 --> 00:09:37,430
and get back data never call many PRI be
that block

165
00:09:37,043 --> 00:09:40,099
and it will and hanging whatever
Frederick sitting around

166
00:09:40,099 --> 00:09:43,111
I but the point is that bad
configuration

167
00:09:44,011 --> 00:09:47,056
is with the default session
configuration represent

168
00:09:47,056 --> 00:09:51,057
if you get a professional preparation
and modify it you're only modifying back

169
00:09:51,066 --> 00:09:53,097
configuration you're not modifying

170
00:09:53,097 --> 00:09:57,716
but global configuration there's a
factory method for an ephemeral

171
00:09:58,589 --> 00:10:01,800
session immigration this is set up for
that

172
00:10:01,008 --> 00:10:04,657
none other storage object actually
persistent data to death

173
00:10:05,449 --> 00:10:09,220
arm new users to implement programs in
print

174
00:10:09,022 --> 00:10:13,441
the third factory method is used to
create a background fashion

175
00:10:13,639 --> 00:10:17,100
I'll you specify and identifying which
is a string

176
00:10:17,001 --> 00:10:20,046
that when your app is relaunched new

177
00:10:20,055 --> 00:10:24,034
the fame starring are in order to get

178
00:10:24,529 --> 00:10:27,603
refreshing it with accession in the
background manual for receiving a ban

179
00:10:28,269 --> 00:10:32,355
threat session there's a factory method
for infection because you shared passion

180
00:10:33,129 --> 00:10:34,135
we shared fashion you

181
00:10:34,189 --> 00:10:37,189
swell going back a in a speech TV a

182
00:10:37,189 --> 00:10:40,202
n/a data be there with content URL

183
00:10:40,319 --> 00:10:43,660
example that would be using the shared
session to do with work

184
00:10:43,066 --> 00:10:46,465
it representing the global environment I

185
00:10:47,059 --> 00:10:50,970
it's a very heavy thing to use a when
you just want to get a resource of the

186
00:10:50,097 --> 00:10:52,098
network

187
00:10:52,098 --> 00:10:54,174
once you have a configuration object but
after you might want to create

188
00:10:55,074 --> 00:10:55,673
profession

189
00:10:56,339 --> 00:10:59,388
all your own that you have only your own
resources and

190
00:10:59,829 --> 00:11:02,854
and maybe on your own storage questions

191
00:11:03,079 --> 00:11:07,040
you don't have to pay W because if we're
going to talk about a few minutes

192
00:11:07,004 --> 00:11:10,283
their them you think or if convenient 13
better-known

193
00:11:10,319 --> 00:11:13,990
require you to implement a delegate with
your with your

194
00:11:13,099 --> 00:11:16,154
an extra session but if you do

195
00:11:17,054 --> 00:11:22,062
specified delegate which you need to do
for background transfers

196
00:11:22,062 --> 00:11:25,131
the you can use session with
configuration

197
00:11:25,689 --> 00:11:32,689
passing a delegate I am a BBQ don't
think you can be a concurrent cue

198
00:11:33,041 --> 00:11:36,510
for past object themself session creepy

199
00:11:36,879 --> 00:11:41,170
half object need to be square after
objecting to pick up a pattern

200
00:11:41,017 --> 00:11:45,096
I kantle spending with him when it have
to object is created

201
00:11:45,249 --> 00:11:48,980
it is suspended you have to infinite to
resume message in order for it to start

202
00:11:48,098 --> 00:11:49,707
working

203
00:11:50,589 --> 00:11:54,612
there to them questions which are really
only available

204
00:11:54,819 --> 00:11:58,240
for the purposes both providing hunter
them into glue

205
00:11:58,024 --> 00:12:01,223
currently very a delegate

206
00:12:01,439 --> 00:12:04,464
ford direct path but there's no
delegates perfect for

207
00:12:04,689 --> 00:12:07,760
download for a bloodbath but if there
were in the future

208
00:12:08,399 --> 00:12:11,440
we would have the ability to
differentiate between the pipes

209
00:12:11,809 --> 00:12:14,843
there's also a download half and all the
fat and Papa

210
00:12:15,149 --> 00:12:19,470
the normal past object if cancelled by
producing resume data

211
00:12:19,047 --> 00:12:23,104
when a downward if cancel if you use
this API

212
00:12:24,004 --> 00:12:27,036
were able to cash in a favor to download
and at a later time

213
00:12:27,036 --> 00:12:30,255
you can create a downward path using
everything better

214
00:12:30,579 --> 00:12:33,654
and avoid having to download all the
banks can if the server support

215
00:12:34,329 --> 00:12:39,360
NF conditions warrant and lot of other
authors reasons why that might not work

216
00:12:39,036 --> 00:12:42,315
by if you wanted to have a chance of
working with help you get there is

217
00:12:42,639 --> 00:12:44,646
indeed a

218
00:12:44,709 --> 00:12:47,747
could create a past object profession

219
00:12:48,089 --> 00:12:51,160
added half URL you have given a are
referring URL

220
00:12:51,016 --> 00:12:54,030
HDPE our move whatever in

221
00:12:54,003 --> 00:12:57,070
gonna be supported by the protocol data
with require

222
00:12:57,097 --> 00:13:01,276
which Nathan an issue or request which
is through the alder

223
00:13:02,149 --> 00:13:05,162
way of specifying arm

224
00:13:05,279 --> 00:13:08,285
finding a URL with a method or

225
00:13:08,339 --> 00:13:12,680
however your protocol is going to
interpret that request

226
00:13:12,068 --> 00:13:15,130
up might have are similar except we
don't

227
00:13:16,003 --> 00:13:19,592
a loan agreement apart after you're out
have to create an upward path

228
00:13:19,889 --> 00:13:24,891
from request read specified the method
like poster put

229
00:13:25,089 --> 00:13:28,470
you the option a performing a quote from
a file or from a data

230
00:13:28,047 --> 00:13:31,099
interviewed great are but we also give
you the option

231
00:13:31,099 --> 00:13:35,154
premium about half with me green isn't
with a friend request

232
00:13:36,054 --> 00:13:40,093
that means we're going to after a
delegate for you stream

233
00:13:40,579 --> 00:13:43,584
when we're ready right the by view or

234
00:13:43,629 --> 00:13:47,970
upload to the network the reason we have
to do that

235
00:13:47,097 --> 00:13:50,129
is because sometimes we will open
connection to server start reading by

236
00:13:51,029 --> 00:13:54,188
from the Federal come back an of
challenge I from

237
00:13:54,449 --> 00:13:57,468
and we'll have to talk with you delegate
but at that point bernie from

238
00:13:57,639 --> 00:14:01,645
by along and if we're doing a upward
from a stream

239
00:14:01,699 --> 00:14:05,240
we're gonna have to through extreme away
and ask you doing it for a new one

240
00:14:05,024 --> 00:14:08,080
if we did the upload from a file or from
a data object

241
00:14:08,008 --> 00:14:11,787
we know how to restart bathroom without
him and asking for it

242
00:14:12,579 --> 00:14:15,720
if you're ending if you're trying to do
arm

243
00:14:15,072 --> 00:14:19,072
upload from background transfers you
have to do it from a file

244
00:14:19,072 --> 00:14:24,881
because we want to capture a file so we
can up on in the background

245
00:14:25,529 --> 00:14:28,910
download have to summer you can download
from your own I wanna copy

246
00:14:28,091 --> 00:14:33,104
I wanna you're all victims from you know
my big file back to GV

247
00:14:34,004 --> 00:14:37,035
I'll or from an initial request I

248
00:14:37,035 --> 00:14:40,434
porn created from from resumed in a pop
and they give you back

249
00:14:40,749 --> 00:14:44,750
had downward path which you can read
them

250
00:14:44,759 --> 00:14:48,786
for the life cycle over data cache for
them to spend their

251
00:14:49,029 --> 00:14:52,038
referencing the request that we're going
to be aware

252
00:14:52,929 --> 00:14:55,974
you tell it okay resume the speakers to
running

253
00:14:56,379 --> 00:14:59,730
and I'm a delegate stricken car did
receive response occurs

254
00:14:59,073 --> 00:15:03,602
inherited respond and response is also
available as the property on the cast

255
00:15:04,259 --> 00:15:05,276
object

256
00:15:05,429 --> 00:15:09,420
as day to come a.m. will call you did
receive Derek delegate method

257
00:15:09,042 --> 00:15:12,049
mirror more time

258
00:15:12,049 --> 00:15:15,057
effect half a is in a fashion that would
enable

259
00:15:16,029 --> 00:15:19,388
better than even hashing we're gonna
call you will catch a spot for

260
00:15:19,649 --> 00:15:22,655
gives you the opportunity to face for a
particular resource

261
00:15:22,709 --> 00:15:27,290
I don't wanna casual are or you want to
modify the crash response

262
00:15:27,029 --> 00:15:31,108
but we recall that at this point before
we call did complete with error

263
00:15:31,369 --> 00:15:35,610
and if they don't ask us to finish one
thing about being complete with error

264
00:15:35,061 --> 00:15:36,330
and a final

265
00:15:36,879 --> 00:15:40,360
thing biggest fan to your delegate on
behalf of the path

266
00:15:40,036 --> 00:15:43,060
the error is going to be near all if the
server game

267
00:15:43,006 --> 00:15:46,165
a valid response a valid response would
be

268
00:15:46,759 --> 00:15:50,764
200 OK but a valid response is also 404

269
00:15:50,809 --> 00:15:54,843
from I found because body that came back
might be interesting

270
00:15:55,149 --> 00:15:58,160
you might want to display that party me

271
00:15:58,259 --> 00:16:01,320
air perimeter here than in strictly for
transmission errors

272
00:16:01,869 --> 00:16:05,873
Mike the host cannot be resolved or a
I'm not occur

273
00:16:06,269 --> 00:16:09,295
or you can follow the path while I was
in flight

274
00:16:09,529 --> 00:16:12,626
for when you look at me here here it's
going to campaign

275
00:16:13,499 --> 00:16:16,660
well the reason why the transfer failed
and you should assume it to respond

276
00:16:16,066 --> 00:16:19,555
and the data got back invalid

277
00:16:20,149 --> 00:16:23,237
download tariff works for a summer when
you create download have

278
00:16:24,029 --> 00:16:27,032
I am this issue reference from file
you're gonna get

279
00:16:27,329 --> 00:16:31,660
and it starts to its workers to use a
river yet you something new method

280
00:16:31,066 --> 00:16:35,235
so close to running and it will
periodically call be a great day don't

281
00:16:35,829 --> 00:16:36,923
tell you your friend making progress

282
00:16:37,769 --> 00:16:41,800
on this download it going note that this
in also what's gonna happen for a

283
00:16:42,079 --> 00:16:46,160
background download if if passed we
created for a background downloader app

284
00:16:46,016 --> 00:16:46,875
is running

285
00:16:47,019 --> 00:16:50,112
you can receive did write data call back

286
00:16:50,949 --> 00:16:53,956
finally we've written all by file to

287
00:16:54,019 --> 00:16:57,032
the filesystem women broken did finish
downloading

288
00:16:57,149 --> 00:17:00,152
URL message and we're gonna give you a
file URL

289
00:17:00,179 --> 00:17:03,243
in your container you have to move into
a more permanent location

290
00:17:03,819 --> 00:17:06,990
move the file to a more permanent
location in your container

291
00:17:06,099 --> 00:17:09,185
because when you return from a family
get we're going to leave the file

292
00:17:10,085 --> 00:17:14,092
then we will call did complete with air
with nil beacons we successfully got the

293
00:17:14,092 --> 00:17:17,138
final only to death

294
00:17:18,038 --> 00:17:21,347
so creating a natural fashion tariff can
be done

295
00:17:21,689 --> 00:17:24,715
just no protector are requesting in cash
cow

296
00:17:24,949 --> 00:17:28,580
but they're from convenient 13th in
really handy especially when you have a

297
00:17:28,058 --> 00:17:30,907
session that doesn't use a delegate or I
should say

298
00:17:31,429 --> 00:17:37,440
particularly you can only use these with
affection they don't have a delegate

299
00:17:37,539 --> 00:17:41,350
are so you think didn't have to TRL
completion and you give it a completion

300
00:17:41,035 --> 00:17:42,086
handler

301
00:17:42,086 --> 00:17:45,185
be tariffs tarjeta comes back have to be
resumed

302
00:17:46,085 --> 00:17:50,644
by it doesn't bother calling and have a
delegate message in

303
00:17:51,409 --> 00:17:54,424
back might be in the fashion or might
not are

304
00:17:54,559 --> 00:17:57,633
and when the work is done in russia
completion handler arm

305
00:17:58,299 --> 00:18:02,120
this is true for you know within upload
be a file

306
00:18:02,012 --> 00:18:05,064
or Dana arm or download

307
00:18:05,064 --> 00:18:08,064
to death mackey for completion handler

308
00:18:08,064 --> 00:18:12,095
reference file and like the delegate for
did finish moving to file

309
00:18:12,095 --> 00:18:16,186
you have to move that file away so this
is what the mccracken in 15

310
00:18:17,086 --> 00:18:20,265
am very simply just create a a URL but
you're gonna

311
00:18:21,039 --> 00:18:24,850
request up a network in this case for
you to create a configuration object

312
00:18:24,085 --> 00:18:25,784
using the ephemeral

313
00:18:26,549 --> 00:18:29,621
session configuration prototype object I
don't wanna

314
00:18:30,269 --> 00:18:33,760
store anything and and when I wouldn't
know about this resource

315
00:18:33,076 --> 00:18:36,158
I'm gonna cry a private session and then
I'm gonna create a cat

316
00:18:37,058 --> 00:18:41,063
with a private session and with that
you're out right over fashion

317
00:18:41,063 --> 00:18:44,069
I didn't have to be around using rail
here's why completion handler

318
00:18:45,023 --> 00:18:49,096
the signature for the completion hammers
data response and air

319
00:18:49,096 --> 00:18:53,107
there will be no lift a response or
valid

320
00:18:54,007 --> 00:18:57,020
I resume a tariff and then I go back to
running around one

321
00:18:57,002 --> 00:19:00,461
if you were just exit right here nothing
would happen beacons

322
00:19:00,659 --> 00:19:03,736
we're not doing anything we have to run
the run when poor dispatch main

323
00:19:04,429 --> 00:19:07,460
an order for with completion it called

324
00:19:07,046 --> 00:19:12,395
you get called in re will be or could be
never came back

325
00:19:12,809 --> 00:19:15,870
delegate that you profession with ban

326
00:19:16,419 --> 00:19:19,420
is comprised of a number of different
protocol

327
00:19:19,519 --> 00:19:22,584
the fashion level delegate for many
information

328
00:19:23,169 --> 00:19:26,440
about the fashion wanna fresheners
created

329
00:19:26,044 --> 00:19:29,893
here in my become invalid given seven
invalidate message in which case

330
00:19:30,289 --> 00:19:33,970
profession in validation delegate method
will be called

331
00:19:33,097 --> 00:19:36,156
but is more interesting delegate message

332
00:19:37,029 --> 00:19:40,510
send confession delegate which used for

333
00:19:40,051 --> 00:19:43,114
connection level of education if you
connected to a website

334
00:19:44,014 --> 00:19:47,035
that had FL encryption

335
00:19:47,035 --> 00:19:50,070
we're gonna call your session level
authentication

336
00:19:50,007 --> 00:19:55,206
challenge Ambler to asked whether or not
you wanna continue connecting to a site

337
00:19:55,899 --> 00:20:00,600
we're going from multiple requests on
the fame socket we're not going to

338
00:20:00,006 --> 00:20:05,325
making soccer and of challenging for
each request I think I'm gonna do it one

339
00:20:05,919 --> 00:20:09,330
I'm on the basis for beach

340
00:20:09,033 --> 00:20:13,035
path up on his request there's a manager
of a Russian pastel again

341
00:20:13,035 --> 00:20:16,120
me that the fingers are building on top
of one another

342
00:20:17,002 --> 00:20:20,951
the most important thing that this time
again response to his did finish

343
00:20:21,149 --> 00:20:25,158
a loading with their and again if the
air is nil that mean

344
00:20:26,049 --> 00:20:29,190
rapid response was valid and you should

345
00:20:29,019 --> 00:20:32,075
deal with the data if the air is not
known in something happen

346
00:20:32,075 --> 00:20:35,138
that captor through me or transfer your
request

347
00:20:36,038 --> 00:20:40,074
there's of the request authentication
handling here if the server serve

348
00:20:40,074 --> 00:20:44,119
for a particular request I don't know
how to deal with you and even potential

349
00:20:45,019 --> 00:20:46,024
for this request

350
00:20:46,024 --> 00:20:49,453
have you have any other questions this
request band bat

351
00:20:49,669 --> 00:20:53,754
challenge request will come through biff
half delegate

352
00:20:54,519 --> 00:20:57,830
David Elliott ban extend for half

353
00:20:57,083 --> 00:21:01,042
delegate it got a couple method bat are
interesting

354
00:21:01,789 --> 00:21:05,816
first did receive a response frazier
downloading file of a network

355
00:21:06,059 --> 00:21:09,870
down a bit of a network and you look at
the content I when you get a response

356
00:21:09,087 --> 00:21:09,176
back

357
00:21:10,076 --> 00:21:14,345
the content type thing this is a diff
image well you probably want to read the

358
00:21:15,029 --> 00:21:16,820
disk image on a memory

359
00:21:16,082 --> 00:21:19,173
so the completion routine for this
delegate method

360
00:21:20,073 --> 00:21:24,126
allows you to specify the this data
cache should become a downward path

361
00:21:25,026 --> 00:21:28,425
and that's exactly what happened
recruited downward path to replace your

362
00:21:28,659 --> 00:21:29,940
data cache

363
00:21:29,094 --> 00:21:32,160
and for reading the file to their and
when the file is completely written

364
00:21:33,006 --> 00:21:36,057
we treat miffed after the F word Erica
and we

365
00:21:37,011 --> 00:21:40,032
notify you in the file's location

366
00:21:40,032 --> 00:21:43,047
by back are read of a network then are
sent

367
00:21:43,047 --> 00:21:46,094
to you and gear if you get a call at
there are more did receive data call

368
00:21:46,094 --> 00:21:46,713
back

369
00:21:47,559 --> 00:21:51,690
one thing you know you don't have to
copy them statements you can keep track

370
00:21:51,069 --> 00:21:52,107
of them you can reference

371
00:21:53,007 --> 00:21:57,098
fam but you know me to copy them by
future boosting its me 100

372
00:21:57,098 --> 00:22:01,100
scenes PDF contiguous tnf-a you should
use the chemist in a discontinuous

373
00:22:02,000 --> 00:22:05,389
nearer application API incentive
requesting the

374
00:22:05,389 --> 00:22:09,250
by pointer to the starting data and that
from a true democracy parents and

375
00:22:09,025 --> 00:22:10,086
producing dated today

376
00:22:10,086 --> 00:22:13,098
we had a friend were trying to fix
things to govern beekeeping

377
00:22:13,098 --> 00:22:16,112
discontinuous memory which is a big
performance when

378
00:22:17,012 --> 00:22:20,034
family to download that look at

379
00:22:20,034 --> 00:22:24,253
extend for passed down again it doesn't
receive the by receives notification on

380
00:22:24,559 --> 00:22:25,360
the bike

381
00:22:25,036 --> 00:22:28,595
and in the end it receives a a delegate
message that says

382
00:22:28,919 --> 00:22:31,970
here in the file location: for

383
00:22:32,429 --> 00:22:36,480
Dana we just transferred so one quick
thing we talk about

384
00:22:36,048 --> 00:22:39,337
in the delegate cue that use create a
profession where

385
00:22:39,769 --> 00:22:43,080
we created my own 7 and Mac with an
average

386
00:22:43,008 --> 00:22:46,837
as a serial killer every time a bit and
have had something to do

387
00:22:46,909 --> 00:22:49,974
it would calling here delegate may
prevent a return

388
00:22:50,559 --> 00:22:54,594
and on to the next after had some work
to do the problem with this approach

389
00:22:54,909 --> 00:22:58,440
in fact the F anyone in your delegate
stalled for some reason

390
00:22:58,044 --> 00:23:03,383
by in happening here then we have to
wait for that dominated return

391
00:23:03,779 --> 00:23:06,793
before the next half can come along

392
00:23:06,919 --> 00:23:11,330
through america with Pam are your family
and I will pay

393
00:23:11,033 --> 00:23:14,036
we're now going to treat your QS
concurrent if it is a concurrent you

394
00:23:14,063 --> 00:23:16,084
know is why did you know specified

395
00:23:16,084 --> 00:23:20,133
so all these past three or call into
your delegate that one

396
00:23:20,889 --> 00:23:23,942
I and no matter what ordered a fair
national delegates me

397
00:23:24,419 --> 00:23:27,456
finish at different times we're always
gonna be able to link you

398
00:23:27,789 --> 00:23:31,850
work for the next task and that that's a
good thing

399
00:23:31,085 --> 00:23:35,086
there is a little bit of new EP are
going to talk about national fashion

400
00:23:35,095 --> 00:23:38,184
this be resolved revolves around storage
object

401
00:23:39,084 --> 00:23:43,883
Mike at the end of each to be cocky
storage and you're a potential storage

402
00:23:44,639 --> 00:23:47,720
and the initial cash as well as initial
particle

403
00:23:47,072 --> 00:23:50,871
in each of these cases we found any with
insufficient

404
00:23:51,519 --> 00:23:54,594
for the accessories for the storage
object received Jeff

405
00:23:55,269 --> 00:23:58,272
the URL people who were fed questionings
object

406
00:23:58,299 --> 00:24:02,380
wanted but actor path that was asking
the question

407
00:24:02,038 --> 00:24:05,567
so there's a new category manager of
fashion half conditions

408
00:24:05,909 --> 00:24:08,980
I if you look in the header around the
entire URL

409
00:24:08,098 --> 00:24:12,787
my break arm even if you have category
show up

410
00:24:13,669 --> 00:24:17,750
and providing synchronous get I and
presumably

411
00:24:17,075 --> 00:24:21,076
even if that job at an implementation
detail

412
00:24:21,085 --> 00:24:24,384
will take anything should be cookie
storage for example for two new method

413
00:24:25,149 --> 00:24:25,213
to get

414
00:24:25,789 --> 00:24:28,980
store cookies forecast here's an array
of cooking

415
00:24:28,098 --> 00:24:31,397
am doing it be if they've passed cares
you look

416
00:24:32,279 --> 00:24:35,610
the implementation will look in the past
look at her request

417
00:24:35,061 --> 00:24:39,260
your ally back and do that work get
cookies for tariff

418
00:24:39,809 --> 00:24:42,870
works the same way I would like the
cookies turn off caps

419
00:24:42,087 --> 00:24:46,396
at Infineon synchronously responding
here the completion hammer once you've

420
00:24:47,179 --> 00:24:47,228
got

421
00:24:47,669 --> 00:24:50,682
those cookies invoke the completion
handler and

422
00:24:50,799 --> 00:24:54,470
you don't have to block me the three rd
the beers are available

423
00:24:54,047 --> 00:24:59,138
on a anything because the store national
credential animus real cash

424
00:25:00,038 --> 00:25:03,967
so as I mentioned earlier arm

425
00:25:04,309 --> 00:25:07,830
3 mickey no the river flow I with had
one little

426
00:25:07,083 --> 00:25:10,099
little bit love interesting stuff in it
and I'd like their

427
00:25:10,099 --> 00:25:14,498
stock you coming up and tell us about a
new protocol support

428
00:25:15,389 --> 00:25:20,370
thank you Steve hello everyone I'm Scott
and 3 I'll be talking about new protocol

429
00:25:20,037 --> 00:25:20,086
support

430
00:25:20,086 --> 00:25:24,111
in foundation networking we've been
working hard to improve the performance

431
00:25:25,011 --> 00:25:25,050
of our

432
00:25:25,005 --> 00:25:28,042
HEB implementation for developers you
guys

433
00:25:28,087 --> 00:25:32,094
and a popular request at last year's
WWDC

434
00:25:32,094 --> 00:25:36,203
was to add support for the speedy
protocol her so today we're pleased to

435
00:25:37,049 --> 00:25:37,133
announce that

436
00:25:37,889 --> 00:25:40,965
the speed protocol is now supported by
an issuer all session

437
00:25:41,649 --> 00:25:45,714
on our tenure Sammy and Iowa State so
not only does this mean that it's

438
00:25:46,299 --> 00:25:48,710
available in Safari for your day to day
browsing

439
00:25:48,071 --> 00:25:51,520
but it's also available for direct use
in your app's

440
00:25:52,159 --> 00:25:55,370
and even if you don't use an issue are
also russian

441
00:25:55,037 --> 00:25:58,094
directly in your applications keep in
mind

442
00:25:58,094 --> 00:26:01,713
that species also leverage to other
Apple frameworks like you I web de which

443
00:26:02,559 --> 00:26:03,320
you might use

444
00:26:03,032 --> 00:26:06,521
in Europe's so for those who viewed the
don't know

445
00:26:06,809 --> 00:26:10,090
with speedy is already it's a protocol
that is

446
00:26:10,009 --> 00:26:14,020
designed to make the web faster and

447
00:26:14,002 --> 00:26:19,029
essentially what it does is it changes
the on wire format HTTP 1.1

448
00:26:19,047 --> 00:26:22,226
but the semantics HTTP 1.1 stay the same

449
00:26:22,649 --> 00:26:26,200
so you know about request types like get
post

450
00:26:26,002 --> 00:26:29,067
put those are the same response codes
like 200 OK

451
00:26:29,085 --> 00:26:33,110
that's still the same caches cookies

452
00:26:34,001 --> 00:26:39,024
credentials those are also all the same

453
00:26:39,033 --> 00:26:44,035
speedy is also serving as the base for
the HTTP 2.0 draft specification

454
00:26:44,035 --> 00:26:47,038
and I'm actually come back to that point
a little bit later on

455
00:26:47,038 --> 00:26:50,082
but it's interesting to see where
technology any sort of

456
00:26:50,082 --> 00:26:54,671
development specifications is heading as
a result of the speedy work

457
00:26:55,409 --> 00:26:59,600
now the way speedy works very serve high
level is that it allows for the exchange

458
00:26:59,006 --> 00:27:02,055
multiple HTTP messages both requests and
responses

459
00:27:03,009 --> 00:27:08,036
simultaneously and potentially out order
all over single TCP connection

460
00:27:08,036 --> 00:27:12,057
so if you'd like to use P D in your
applications here's what you need to

461
00:27:12,057 --> 00:27:13,134
know

462
00:27:14,034 --> 00:27:18,112
as I mentioned it's avail on both oath
and your family and I was a

463
00:27:19,012 --> 00:27:22,098
and we support three versions the speedy
protocol to

464
00:27:22,098 --> 00:27:25,397
3 and 3.1

465
00:27:26,279 --> 00:27:29,353
and what we decided to do is make it
supported transparently by an issue of

466
00:27:30,019 --> 00:27:30,820
session

467
00:27:30,082 --> 00:27:33,551
and so this goes along the lines of loss
to be happy we have

468
00:27:34,289 --> 00:27:38,450
which is that we will always pick the
best best protocol we should use

469
00:27:38,045 --> 00:27:41,122
when communicating with your server so
currently that means we're gonna decide

470
00:27:42,022 --> 00:27:42,107
if it's going to be

471
00:27:43,007 --> 00:27:46,986
HTTP 1.1 or speedy and the versions be
that we're going to use

472
00:27:47,049 --> 00:27:51,124
but this could also hold true in the
future for some other protocol

473
00:27:51,799 --> 00:27:55,590
so what this means for you is that no
source changes are needed

474
00:27:55,059 --> 00:28:00,157
it will just work and so we look at its
source code example here

475
00:28:01,057 --> 00:28:04,796
what you do first courses create your
URL for whatever resource you be

476
00:28:05,309 --> 00:28:06,320
interested in

477
00:28:06,419 --> 00:28:10,610
an obsession from your server and then
you'd construct a session to ask

478
00:28:10,061 --> 00:28:14,740
in this case it were using data task in
this case also with the shirt session

479
00:28:15,289 --> 00:28:18,366
and then having a completion handler
with the day you receive the response

480
00:28:19,059 --> 00:28:19,107
and

481
00:28:19,539 --> 00:28:22,541
transmission error there was one

482
00:28:22,559 --> 00:28:26,190
and of course you don't have to resume
the task to start

483
00:28:26,019 --> 00:28:29,258
what you'll notice about this code
sample is there's nothing different here

484
00:28:29,429 --> 00:28:31,320
because be is going to be used

485
00:28:31,032 --> 00:28:34,521
there isn't some code that I added
changed or otherwise removed

486
00:28:34,809 --> 00:28:38,610
to support speeding in fact this example
should look very similar wants to show

487
00:28:38,061 --> 00:28:39,157
you not more than a couple minutes ago

488
00:28:40,057 --> 00:28:45,666
not intentional so I dive into some
speed benefits you can understand how to

489
00:28:46,179 --> 00:28:48,181
actually impact your app's

490
00:28:48,379 --> 00:28:52,467
so the way to be worked as a house a
single long-lived TCP connection

491
00:28:53,259 --> 00:28:57,297
between the client and the server and
for this actually helps mitigate latency

492
00:28:57,639 --> 00:28:59,990
penalties oftentimes that are seen when
you

493
00:28:59,099 --> 00:29:02,186
ask for additional resources because
traditionally we may have had to open an

494
00:29:03,086 --> 00:29:05,172
additional socket and TCP connection to
get the data

495
00:29:06,072 --> 00:29:10,501
back but now we have the one correction
it's open for a longer period of time

496
00:29:11,149 --> 00:29:14,227
which helps to get rid of that latency
it also means that since we're only

497
00:29:14,929 --> 00:29:16,930
opening one connection to your server

498
00:29:17,029 --> 00:29:20,078
that any given op instance now should be
using fewer resources on your server

499
00:29:20,519 --> 00:29:21,210
which is

500
00:29:21,021 --> 00:29:24,110
a big win for you

501
00:29:24,299 --> 00:29:27,600
speedy supports the concept and
multiplexing which is where

502
00:29:27,006 --> 00:29:31,455
a request in response can be interleaved
potentially multiple requests responsive

503
00:29:32,049 --> 00:29:34,480
community leaves over a single
connection

504
00:29:34,048 --> 00:29:37,827
and so this gets rid of what's known as
a headline blocking

505
00:29:38,259 --> 00:29:41,337
and this is where while you're in the
process of receiving the response for

506
00:29:42,039 --> 00:29:42,125
one object

507
00:29:42,899 --> 00:29:45,964
that you can't receive responses for
other objects on the same connection

508
00:29:46,549 --> 00:29:49,607
so for example you might be in the
process of downloading a large image

509
00:29:50,129 --> 00:29:53,133
and they're actually then gets in the
way of your ability to download say a

510
00:29:53,169 --> 00:29:54,840
smaller and more important

511
00:29:54,084 --> 00:29:58,090
a JavaScript file or CSS file

512
00:29:59,044 --> 00:30:03,047
finally he supports the notion of
priorities until now the order in which

513
00:30:03,047 --> 00:30:03,386
you

514
00:30:03,809 --> 00:30:07,460
issue requests no longer have to dictate
the order in which responses are

515
00:30:07,046 --> 00:30:10,015
actually received by your application

516
00:30:10,429 --> 00:30:13,490
so wanna sort of show you a diagram of
how this works

517
00:30:13,049 --> 00:30:16,208
keep in mind that this is going to be
forgiven ideal network where there's no

518
00:30:16,649 --> 00:30:17,470
latency

519
00:30:17,047 --> 00:30:20,083
and perfect in with utilization and
we're gonna first start by looking at

520
00:30:20,083 --> 00:30:23,312
how how one blocking is present in HD
v1.1

521
00:30:24,059 --> 00:30:27,700
without pipelining so

522
00:30:27,007 --> 00:30:30,074
imagine you issue request three requests
for three resource

523
00:30:31,037 --> 00:30:35,039
an image a style sheet and sectional
data

524
00:30:35,057 --> 00:30:38,095
to the first thing all happened course
is will send out the GET request

525
00:30:38,095 --> 00:30:42,158
for the image and then you wait a while
as all the bites in the 200 OK response

526
00:30:43,058 --> 00:30:44,071
come back

527
00:30:44,071 --> 00:30:47,900
that image back to your apt meanwhile
noticed nothing has happened for the

528
00:30:48,539 --> 00:30:50,613
style sheet or the actual data

529
00:30:51,279 --> 00:30:54,340
then we can set up the request with
Style Sheets

530
00:30:54,034 --> 00:30:58,045
receive its response and then do the
same for the actual data

531
00:30:58,045 --> 00:31:01,244
you can see here that during the time
when you are receiving the response

532
00:31:01,649 --> 00:31:02,672
bytes for the image

533
00:31:02,879 --> 00:31:05,883
we can't make any forward progress

534
00:31:05,919 --> 00:31:09,240
with the style she or the XML data

535
00:31:09,024 --> 00:31:11,123
now pipelining make the situation a
little bit better but it doesn't get rid

536
00:31:12,023 --> 00:31:13,062
of headline blocking still

537
00:31:13,062 --> 00:31:17,481
let's see what that looks like

538
00:31:18,039 --> 00:31:21,062
now request can get sent out one after
another

539
00:31:21,269 --> 00:31:24,700
but responses are still blocked by the
previous response

540
00:31:24,007 --> 00:31:27,226
and had a blind walking still an issue
you know if you are using pipe laying

541
00:31:27,919 --> 00:31:30,941
the multiplexing changes that with
speedy

542
00:31:31,139 --> 00:31:34,166
so let's look at the same three
resources now

543
00:31:34,409 --> 00:31:37,410
but this time with multiplexing

544
00:31:37,509 --> 00:31:41,120
so we'll start by sending request for
the image that should look no different

545
00:31:41,012 --> 00:31:43,441
than before

546
00:31:43,549 --> 00:31:46,637
and like before with pipelining we can
actually send the request for the style

547
00:31:47,429 --> 00:31:47,467
sheet

548
00:31:47,809 --> 00:31:50,843
immediately after the request for the
image and of course we can start making

549
00:31:51,149 --> 00:31:53,220
progress by receiving bytes

550
00:31:53,022 --> 00:31:57,981
for the image but here's where things
get different

551
00:31:58,179 --> 00:32:01,730
because the style sheet is higher
priority then D

552
00:32:01,073 --> 00:32:04,157
image the certainly will start sending
back respond plates

553
00:32:05,057 --> 00:32:08,062
for the style sheet instead a response
bytes for the image

554
00:32:08,062 --> 00:32:11,871
and then once the request for the actual
data has gone out because it is the

555
00:32:12,429 --> 00:32:13,434
highest priority object

556
00:32:13,929 --> 00:32:17,931
we receive its response bites in
looooove the image bytes for the 1000

557
00:32:18,129 --> 00:32:19,218
bytes

558
00:32:20,019 --> 00:32:23,044
you'll also notice in this diagram that
them amount of data we're receiving for

559
00:32:23,269 --> 00:32:24,200
the actual data

560
00:32:24,002 --> 00:32:27,054
is a larger chunk than that of the style
sheet or the image

561
00:32:27,072 --> 00:32:30,095
that's intentional oftentimes a speedy
implementation the

562
00:32:30,095 --> 00:32:33,184
responses are weighted by priority and
so

563
00:32:34,039 --> 00:32:38,120
we let this progra sort of progress to
continue what we end up seeing is that

564
00:32:38,012 --> 00:32:39,661
we can we see the entire

565
00:32:39,769 --> 00:32:43,820
style she directional data before the
image even though those resources were

566
00:32:43,082 --> 00:32:43,781
asked for

567
00:32:44,519 --> 00:32:48,581
after we asked for the image

568
00:32:49,139 --> 00:32:52,180
so you might be wondering why should I
dot p

569
00:32:52,549 --> 00:32:55,644
and the plain and simple reason is that
it can give a better user experience and

570
00:32:56,499 --> 00:32:57,840
that's what we're all after

571
00:32:57,084 --> 00:33:03,145
I would pink and so there sir two
reasons as is the case the first is that

572
00:33:04,045 --> 00:33:07,094
as I mentioned it reduces latency for
having a single long live connection

573
00:33:07,094 --> 00:33:07,823
open

574
00:33:08,669 --> 00:33:11,728
between the client and server as to what
this means is that over the lifetime if

575
00:33:12,259 --> 00:33:13,120
you're up

576
00:33:13,012 --> 00:33:16,901
as more and more requests were issued we
don't have to continually open new

577
00:33:17,009 --> 00:33:19,690
connections which helps to get rid of
that latency

578
00:33:19,069 --> 00:33:22,128
it means that your up can have much more
interactive behavior

579
00:33:22,749 --> 00:33:25,753
even when using a cellular connection

580
00:33:26,149 --> 00:33:29,940
in our own performance measurements we
found the speedy could be up to 25

581
00:33:29,094 --> 00:33:30,073
percent faster than

582
00:33:30,919 --> 00:33:36,220
HTTP 1.1 and I'll come back to this a
little bit later on

583
00:33:36,022 --> 00:33:40,037
there's also some more subtle points I
want to to raise about performance and

584
00:33:40,037 --> 00:33:41,037
speedy and and

585
00:33:41,037 --> 00:33:46,186
its benefits because it's only opening a
single TCP connection it also only have

586
00:33:46,519 --> 00:33:48,720
to do a single SSL handshake

587
00:33:48,072 --> 00:33:51,085
and that means that your Apple have less
CPU use

588
00:33:51,085 --> 00:33:54,182
and overtime better battery life on the
device

589
00:33:55,082 --> 00:33:58,087
it also means that when you're out
becomes the next big app on the App

590
00:33:58,087 --> 00:33:58,093
Store

591
00:33:59,047 --> 00:34:02,082
and a big hit that you may not have to
roll out as much server-side

592
00:34:02,082 --> 00:34:03,311
infrastructure to support

593
00:34:04,049 --> 00:34:08,060
the increased number appliance because
each client has fewer

594
00:34:08,159 --> 00:34:12,186
connections going back your server right
it's one incentive many

595
00:34:12,429 --> 00:34:15,530
so I already told you that

596
00:34:15,053 --> 00:34:18,132
if you'd like to make use a speedy you
don't need any client side country

597
00:34:19,032 --> 00:34:22,861
coach Ames but there are a few other
points with respect to speed option I do

598
00:34:23,149 --> 00:34:24,156
wanna talk about

599
00:34:24,849 --> 00:34:28,930
the first we are planning to add API for
setting priorities on session tasks

600
00:34:29,659 --> 00:34:32,980
you'll see that in the future seed it's
not currently available

601
00:34:32,098 --> 00:34:35,176
we also welcome any other feedback from
you during either the networking lab

602
00:34:36,076 --> 00:34:37,125
sessions or through

603
00:34:37,809 --> 00:34:41,240
a bug report if you believe there's
other API be useful

604
00:34:41,024 --> 00:34:44,051
that that you don't currently see

605
00:34:44,051 --> 00:34:48,120
while you don't need to have any client
side code changes to support speedy keep

606
00:34:48,579 --> 00:34:49,510
in mind

607
00:34:49,051 --> 00:34:53,150
speed does require server side support
and this all happens when the client is

608
00:34:53,609 --> 00:34:55,520
negotiating with the server using

609
00:34:55,052 --> 00:34:58,124
the TRS handshake the reason this is
important is that

610
00:34:59,024 --> 00:35:03,090
all the URL's for requests that you
issue from your application

611
00:35:03,009 --> 00:35:07,072
need to have HTTPS and not HTTP

612
00:35:08,053 --> 00:35:11,119
others point out that there's a fair
amount of existing web server software

613
00:35:12,019 --> 00:35:15,658
and content delivery networks that
already supports PD

614
00:35:15,829 --> 00:35:18,857
and so you may already have the support
and have to do nothing at all to turn it

615
00:35:19,109 --> 00:35:19,530
on

616
00:35:19,053 --> 00:35:22,141
on your server

617
00:35:23,041 --> 00:35:26,440
finally many have you might have been an
issue for all

618
00:35:26,809 --> 00:35:29,890
protocol subclass or maybe perhaps
multiple in your application

619
00:35:30,619 --> 00:35:33,621
I do want to note that our speedy
implementation is not going to interfere

620
00:35:33,819 --> 00:35:35,800
with your protocol subclasses

621
00:35:35,008 --> 00:35:38,024
regardless of whether or not they're
adding support for speedy or some other

622
00:35:38,096 --> 00:35:38,179
protocol

623
00:35:39,079 --> 00:35:43,128
entirely

624
00:35:43,839 --> 00:35:47,887
so I mention that we found that speedy
could be up to 25 percent faster than

625
00:35:48,319 --> 00:35:52,950
HD HTTP 1.1 and I wanna go into a little
more detail about

626
00:35:52,095 --> 00:35:55,098
sort of performance and and expectations

627
00:35:56,025 --> 00:36:00,078
so now actually parallel TCP connections
in some cases can be fastened to be

628
00:36:00,078 --> 00:36:01,637
single connection

629
00:36:02,339 --> 00:36:06,386
and what we found is that whether or not
speed is going to be faster is dependent

630
00:36:06,809 --> 00:36:09,811
on both network conditions and your
workload

631
00:36:09,829 --> 00:36:13,880
and in general our guidance is that if
you are going to issue many requests

632
00:36:14,339 --> 00:36:17,700
particularly request for small size
objects you're gonna see a performance

633
00:36:17,007 --> 00:36:18,009
GameSpy

634
00:36:18,072 --> 00:36:22,451
but if you're reading app it's
downloading handful files perhaps

635
00:36:23,099 --> 00:36:26,400
though also downloading large files such
as movie

636
00:36:26,004 --> 00:36:29,213
speedy is not going to be advantageous
for you

637
00:36:29,609 --> 00:36:32,609
and so keep in mind that you control
whether or not

638
00:36:32,609 --> 00:36:35,760
he's going to be used by based on
whether or not it's turned on your

639
00:36:35,076 --> 00:36:37,077
server

640
00:36:37,077 --> 00:36:40,151
I also wanna know that the speech
specification indicates

641
00:36:41,051 --> 00:36:45,090
that HTTP headers can be compressed to
boost performance

642
00:36:45,009 --> 00:36:47,708
but it turns out this is actually
susceptible to the crime on our ability

643
00:36:48,599 --> 00:36:50,740
which you can read about online

644
00:36:50,074 --> 00:36:53,096
and so in our implementation as is in
many

645
00:36:53,096 --> 00:36:57,101
comments be implementations we'd
actually disabled is for user privacy

646
00:36:58,001 --> 00:37:01,350
you're not going to see a performance
boost from compress hatter's

647
00:37:01,359 --> 00:37:06,170
finally I want to point out speedy is
not an IETF recognized standard

648
00:37:06,017 --> 00:37:10,956
that we see it is protocol is paving the
way for HTTP 2.0 now

649
00:37:11,109 --> 00:37:15,180
in particular gives you developers the
opportunity to get a jump start

650
00:37:15,018 --> 00:37:17,115
on using a protocol that relies on a
singalong with connection with

651
00:37:18,015 --> 00:37:23,098
multiplexing which is the same direction
that HTTP 2.0 is heading

652
00:37:23,098 --> 00:37:28,217
so I want to wrap up and talk about some
best practices for working speedy

653
00:37:29,099 --> 00:37:32,104
keep in mind these are not necessarily
hard-and-fast rules we always have to

654
00:37:32,599 --> 00:37:35,190
follow but these are good suggestions
just two

655
00:37:35,019 --> 00:37:40,080
giving back your mind as you work with
PD to the first is

656
00:37:40,008 --> 00:37:44,027
its best if you can issue your request

657
00:37:44,819 --> 00:37:47,846
as soon as you want the resources so in
other words what I mean is

658
00:37:48,089 --> 00:37:52,720
you might have previously held back and
actually manually schedule request to

659
00:37:52,072 --> 00:37:54,181
try to avoid have one blocking

660
00:37:54,829 --> 00:37:58,500
but because her one blocking is no
longer concerned

661
00:37:58,005 --> 00:38:01,027
we ask that you think you all your crust
requests right away and what

662
00:38:01,072 --> 00:38:04,113
multiplexing do what it meant to do

663
00:38:05,013 --> 00:38:09,020
also you might spread your content
across multiple host names

664
00:38:09,002 --> 00:38:12,100
called hostname charting so some
resources might have been like on CSS to

665
00:38:13,018 --> 00:38:16,707
apple.com someone I've been on images to
apple.com and so on

666
00:38:16,869 --> 00:38:20,550
and for HDB 1.1 this made sense would
cause us to open multiple TCP

667
00:38:20,055 --> 00:38:23,091
connections which would boost
performance

668
00:38:23,091 --> 00:38:26,117
but since PD relies on a single long
live connection

669
00:38:27,017 --> 00:38:30,025
which gives us optimal collection
reviews its actually best if you I'm

670
00:38:30,097 --> 00:38:33,966
chard and consolidate all your content
to a single host name

671
00:38:34,839 --> 00:38:38,862
and single port so we can have that one
long live connection give you the best

672
00:38:39,069 --> 00:38:43,230
experience possible so I'd like to turn
things over to dan

673
00:38:43,023 --> 00:38:47,052
he's gonna be talking about back on
networking and extensions

674
00:38:47,052 --> 00:38:50,094
good afternoon everyone I'm down and as
Scott said

675
00:38:50,094 --> 00:38:53,163
I'm gonna be talking up background
networking sold steve mentioned before

676
00:38:54,063 --> 00:38:57,065
that you can enable background
networking in your applications using

677
00:38:57,065 --> 00:39:00,090
industrial session if you use the
background session configuration with

678
00:39:00,009 --> 00:39:02,036
identifiers factory method

679
00:39:03,017 --> 00:39:06,656
so I want to give you a brief overview
of what I'm to be talking about today

680
00:39:06,809 --> 00:39:10,050
first I'm gonna go over why you'd want
to use background sessions and

681
00:39:10,005 --> 00:39:12,088
background networking in your
applications

682
00:39:12,088 --> 00:39:16,088
tying in with this I'll talk about using
back on sessions an app extensions which

683
00:39:16,088 --> 00:39:17,094
is a new feature in Iowa State

684
00:39:18,048 --> 00:39:23,069
anti-western your sanity often talk
about discretionary networking was it

685
00:39:23,069 --> 00:39:23,151
which is a feature

686
00:39:24,051 --> 00:39:27,120
background networking that allows us to

687
00:39:27,579 --> 00:39:32,630
schedule tasks when it's and appropriate
given current power conditions

688
00:39:33,089 --> 00:39:35,162
and finally I'll talk about using back
on sessions properly in your

689
00:39:35,819 --> 00:39:39,010
applications going over a couple use
cases and talking about

690
00:39:39,001 --> 00:39:42,860
some common pitfalls and best practices

691
00:39:42,869 --> 00:39:45,892
so why do you want to use background
sessions in your applications

692
00:39:46,099 --> 00:39:50,260
well the main benefit particularly on
iowa's is for multitasking

693
00:39:50,026 --> 00:39:53,091
in a background session file-based
upload and download can continue out a

694
00:39:53,091 --> 00:39:53,173
process

695
00:39:54,073 --> 00:39:57,139
even while your app isn't running this
means that your out can crash

696
00:39:58,039 --> 00:40:01,094
even you can be terminated or NIOS it
can be suspended

697
00:40:01,094 --> 00:40:04,177
and those file based upon and downloads
will still continue

698
00:40:05,077 --> 00:40:08,170
and will actually wake up your app on
iowa's in the background to handle

699
00:40:09,007 --> 00:40:11,016
things like authentication challenges

700
00:40:11,079 --> 00:40:14,888
and the completion of all the tasks in
your sessions

701
00:40:15,599 --> 00:40:18,648
another benefit is that in a background
session we monitor

702
00:40:19,089 --> 00:40:23,520
the network in power environment for you
so this means that we cover things like

703
00:40:23,052 --> 00:40:26,391
network reachability in connectivity for
you so you don't have to use the

704
00:40:26,859 --> 00:40:28,510
reachability API's at all

705
00:40:28,051 --> 00:40:30,146
we won't attempt to establish a
connection to we know that the servers

706
00:40:31,046 --> 00:40:32,165
reachable

707
00:40:32,579 --> 00:40:36,604
and similarly if the user is performing
a download and

708
00:40:36,829 --> 00:40:41,500
steps on up wifi normally that house
with an fail with a transmission error

709
00:40:41,005 --> 00:40:44,614
but in a back room session will actually
recover from that automatically in retry

710
00:40:45,109 --> 00:40:45,114
it

711
00:40:45,609 --> 00:40:48,634
and resume where we left off if the
download is resumable

712
00:40:48,859 --> 00:40:51,890
and you won't hear about the air

713
00:40:51,089 --> 00:40:54,148
for discretionary tasks we also perform
some battery monitoring

714
00:40:55,048 --> 00:40:59,057
so that we don't perform a task if the
usually low on battery not charging

715
00:41:00,038 --> 00:41:03,777
and will also do bandwidth monitoring
and what this means is that

716
00:41:04,119 --> 00:41:07,167
if the user's 10 let's say I really
flaky WiFi network and

717
00:41:07,599 --> 00:41:10,670
isn't making really be sufficient
throughput then we'll stop and just

718
00:41:11,309 --> 00:41:15,980
retry automatically when network
conditions are better

719
00:41:15,098 --> 00:41:18,437
so I'd like to talk about using back
from sessions in ap extensions which

720
00:41:19,319 --> 00:41:20,720
they said our new feature I've

721
00:41:20,072 --> 00:41:23,143
bioassay anti-western your sanity now
extensions are very short-lived

722
00:41:24,043 --> 00:41:25,182
processes

723
00:41:25,569 --> 00:41:29,430
generally they're only gonna be running
while they're actually active on screen

724
00:41:29,043 --> 00:41:31,682
that can be a very short period of time
usually

725
00:41:32,069 --> 00:41:36,020
a so in process networking really isn't
sufficient in a nap extension

726
00:41:36,002 --> 00:41:40,043
if you need to do any moderate to large
size at uploader download

727
00:41:40,043 --> 00:41:44,092
but if you use a background session then
that task to actually perform are back

728
00:41:44,092 --> 00:41:45,103
on demand

729
00:41:46,003 --> 00:41:49,027
so your app extension can exit or be
suspended

730
00:41:49,027 --> 00:41:53,029
and i OS when that task completes or
authentication is required

731
00:41:53,047 --> 00:41:56,376
well actually launch the app that your
extension shipped with in order to

732
00:41:56,799 --> 00:41:58,940
handle those events

733
00:41:58,094 --> 00:42:01,125
so essentially your app extensions your
caps can share

734
00:42:02,025 --> 00:42:05,039
I background sessions and this leads us
to a couple

735
00:42:05,039 --> 00:42:09,198
constraints when using background
sessions an app extensions

736
00:42:09,549 --> 00:42:13,440
the first is that normally use a
background session in an app extension

737
00:42:13,044 --> 00:42:16,963
you need to use a share data container
now the reason for this is that by

738
00:42:17,359 --> 00:42:18,230
default

739
00:42:18,023 --> 00:42:22,026
an app and any extensions that ships
with are indifferent data containers and

740
00:42:22,026 --> 00:42:24,123
won't have access to the same said two
files

741
00:42:25,023 --> 00:42:28,027
but Xcode you can create an application
group

742
00:42:28,027 --> 00:42:31,028
and you using the capabilities tab and

743
00:42:31,028 --> 00:42:34,817
if you create an application group you
can tell us the identifiers love that

744
00:42:35,069 --> 00:42:38,420
outgroup that group container and will
download anti container

745
00:42:38,042 --> 00:42:41,066
and I'll show you how to do that
momentarily

746
00:42:41,066 --> 00:42:45,245
another caveat is that only one process
can be connected to the background

747
00:42:45,839 --> 00:42:46,380
session

748
00:42:46,038 --> 00:42:50,040
at a time this means if that if your app
is running in the background

749
00:42:50,004 --> 00:42:54,052
and then another app launches and blah
brings up your extension

750
00:42:54,088 --> 00:42:57,124
it won't be able to use that same
background session

751
00:42:58,024 --> 00:43:01,121
now a background session is essentially
defined by the identifiers that you use

752
00:43:02,021 --> 00:43:05,049
when you create your background session
configuration object

753
00:43:05,049 --> 00:43:09,398
so we recommend here is that you use a
different background session identifiers

754
00:43:09,839 --> 00:43:13,730
for your app and for each extension that
you ship with the only time that you

755
00:43:13,073 --> 00:43:15,078
should take advantage of the fact that

756
00:43:15,078 --> 00:43:18,089
your ap and your extensions can share
back concessions

757
00:43:18,089 --> 00:43:21,308
is when we launch your apt to handle
events for that session

758
00:43:22,109 --> 00:43:25,170
now I mention that you need to use a
share data container when

759
00:43:25,017 --> 00:43:28,068
are using background sessions ap
extensions and you can

760
00:43:28,068 --> 00:43:31,096
specify that using the share container
identify our property on an issue of

761
00:43:31,096 --> 00:43:32,985
such in configuration

762
00:43:33,849 --> 00:43:36,890
so what you do is you just create a
configuration object using the

763
00:43:36,089 --> 00:43:39,318
background session configuration with
identify our factory method that's the

764
00:43:40,119 --> 00:43:41,164
show you before

765
00:43:41,569 --> 00:43:45,210
and you set per share container identify
our property to the identify RUV your

766
00:43:45,021 --> 00:43:47,026
shared group container

767
00:43:47,026 --> 00:43:50,052
than you can create an issue of session
from that configuration object and

768
00:43:50,052 --> 00:43:53,119
create tasks in that session

769
00:43:54,019 --> 00:43:57,022
now would like to switch gears and talk
about discretionary networking which is

770
00:43:57,049 --> 00:43:57,126
something that

771
00:43:58,026 --> 00:44:01,028
some background tasks can use I

772
00:44:01,046 --> 00:44:06,114
in order to a perform tasks at power
optimal times

773
00:44:07,014 --> 00:44:10,072
and what this means is that we will take
into account things like whether or not

774
00:44:10,072 --> 00:44:13,079
we're on a WiFi network or using
cellular data

775
00:44:13,079 --> 00:44:15,147
and also take into account the current
battery state whether or not we're

776
00:44:16,047 --> 00:44:16,946
charging

777
00:44:17,369 --> 00:44:21,420
where and how much a what percentage the
battery is charged

778
00:44:21,042 --> 00:44:24,097
we also take into account things like
how often your app is launched

779
00:44:24,097 --> 00:44:27,456
if it's something that use our own shit
launches really frequently we'll

780
00:44:28,329 --> 00:44:31,383
be more likely to treat a task more
urgently since the users more likely to

781
00:44:31,869 --> 00:44:31,965
notice

782
00:44:32,829 --> 00:44:36,490
when those resources are downloaded

783
00:44:36,049 --> 00:44:40,068
on why improvement that we've made NIOS
eight for discretionary transfers

784
00:44:40,068 --> 00:44:43,507
is that tasks are treated with more
urgency as time goes on

785
00:44:44,119 --> 00:44:48,150
in Iowa 7 discussion it transfers were
limited to wifi only

786
00:44:48,015 --> 00:44:52,016
and now while we may limit discriminate
track discretionary transfers to run

787
00:44:52,025 --> 00:44:55,076
while while there's wifi and plugged in
at first

788
00:44:55,076 --> 00:44:58,140
these constraints will relax as time
goes on so as we

789
00:44:59,004 --> 00:45:03,052
approach the resource timeout have that
specified in your configuration object

790
00:45:03,088 --> 00:45:05,037
will be more likely to relax these
conditions

791
00:45:05,829 --> 00:45:11,831
and allow and transfers over battery in
cellular data

792
00:45:11,849 --> 00:45:14,910
there a couple different ways that you
can use discretionary networking in a

793
00:45:14,091 --> 00:45:15,167
background session

794
00:45:16,067 --> 00:45:19,140
but one ways by explicitly opting in
using the discretionary property which

795
00:45:20,004 --> 00:45:21,017
is just a boolean

796
00:45:21,053 --> 00:45:25,092
on initial session configuration this
was made available on iowa 7

797
00:45:25,092 --> 00:45:28,094
and is now available in OS 10 your
sanity

798
00:45:28,094 --> 00:45:31,175
you might wanna do this for any task
aren't really user initiated

799
00:45:32,075 --> 00:45:35,167
so let's say you have you know an app
that lets users watch

800
00:45:36,067 --> 00:45:39,078
episodes of a TV series and they're
watching an episode

801
00:45:39,078 --> 00:45:42,347
that they've downloaded already and
maybe you want a prefetch the next one

802
00:45:43,049 --> 00:45:44,680
so it's ready for them

803
00:45:44,068 --> 00:45:47,114
but when they're finished watching the
current episode now that's not something

804
00:45:48,014 --> 00:45:49,423
the user explicitly

805
00:45:49,549 --> 00:45:54,210
requested so that something that you
might wanna tree is discretionary

806
00:45:54,021 --> 00:45:58,052
similarly if you haven't happened the
user is modifying a document

807
00:45:58,052 --> 00:46:01,066
I you might wanna upload that document
to your

808
00:46:01,066 --> 00:46:04,075
app servers that it's accessible from
the user's other devices

809
00:46:04,075 --> 00:46:08,664
and this might also be something that's
discretionary

810
00:46:09,339 --> 00:46:12,388
on i OS there are also times when we
will treat tacit discretionary

811
00:46:12,829 --> 00:46:13,890
automatically

812
00:46:13,089 --> 00:46:16,145
and this happens when your app is
running in the background

813
00:46:17,045 --> 00:46:22,077
in Iowa 7 we introduced a few new
multitasking API's most notably

814
00:46:22,077 --> 00:46:25,170
background patch updates and handling
sound push notifications for your app

815
00:46:26,007 --> 00:46:27,606
gets a limited amount of time

816
00:46:28,299 --> 00:46:32,740
on the order of 30 to 60 seconds to run
in the background to make updates

817
00:46:32,074 --> 00:46:36,078
and when you think this is really great
when used in conjunction with background

818
00:46:36,078 --> 00:46:37,377
uploads and downloads

819
00:46:38,079 --> 00:46:41,950
but because the user doesn't know that
your app is running at this time

820
00:46:41,095 --> 00:46:44,097
any download the or upload that UN cue

821
00:46:45,015 --> 00:46:48,234
will need to be discreet will be treated
discretionary automatically

822
00:46:48,369 --> 00:46:51,280
be if this were can't be user initiated
because the user doesn't know that

823
00:46:51,028 --> 00:46:52,857
you're running

824
00:46:53,109 --> 00:46:56,158
now what improvement that we've made
here in Iowa State is that

825
00:46:56,599 --> 00:47:00,140
any of these past that we automatically
treatise discretionary will be calm

826
00:47:00,014 --> 00:47:01,079
non-discretionary if the user

827
00:47:01,079 --> 00:47:04,095
launches the app and brings it to the
foreground

828
00:47:04,095 --> 00:47:07,484
I've mentioned a couple times that on
iowa's will launch shops in the

829
00:47:08,339 --> 00:47:10,362
background to handle events like
authentication

830
00:47:10,569 --> 00:47:13,680
and the completion of all your tasks i
wanna talk a little bit about how you

831
00:47:13,068 --> 00:47:14,152
handle those events

832
00:47:15,052 --> 00:47:19,113
so when I was 7 we introduced a new
method on you application delegate

833
00:47:20,013 --> 00:47:23,018
called application handle events for
backgrounds were all session completion

834
00:47:23,018 --> 00:47:23,897
handler

835
00:47:24,059 --> 00:47:27,510
when this is called you'll be provided
with the identifiers

836
00:47:27,051 --> 00:47:30,390
up the session that needs your attention
at this point you should reconnect

837
00:47:30,849 --> 00:47:33,926
that session by creating a background
configuration object with that

838
00:47:34,619 --> 00:47:34,717
identifiers

839
00:47:35,599 --> 00:47:39,180
and then an initial session from that
configuration object

840
00:47:39,018 --> 00:47:42,407
at this point you're immediately begin
receiving the delegate messages

841
00:47:42,569 --> 00:47:45,970
that you missed maybe authentication
challenge challenges worded complete

842
00:47:45,097 --> 00:47:46,170
with a recall backs

843
00:47:47,007 --> 00:47:50,846
and and after finished handling these
events you want to call the completion

844
00:47:51,539 --> 00:47:52,020
handler

845
00:47:52,002 --> 00:47:56,002
that this that that was provided here
you application delegate

846
00:47:56,002 --> 00:47:59,067
this completion handler allows us to
take a snapshot of your you why

847
00:47:59,067 --> 00:48:02,113
to show up in the app switcher split up
to date when the user double clicks the

848
00:48:03,013 --> 00:48:04,071
home button

849
00:48:04,071 --> 00:48:08,440
and also allows us to suspend your app
now when your watch to handle events for

850
00:48:09,079 --> 00:48:10,130
background sessions

851
00:48:10,013 --> 00:48:13,025
your again be live given a limited
amount of time to run in the background

852
00:48:13,025 --> 00:48:15,034
around 30 to 60 seconds

853
00:48:16,015 --> 00:48:18,914
if you don't call your completion
handler within this time your Apple be

854
00:48:19,049 --> 00:48:20,057
terminated meaning it won't have

855
00:48:20,849 --> 00:48:24,740
an up-to-date snapshot and it'll be
slower to launch the next time the user

856
00:48:24,074 --> 00:48:25,078
wants to launch a wrap

857
00:48:26,014 --> 00:48:29,473
so it's important you college completion
hella co-opted suspended has up to date

858
00:48:29,599 --> 00:48:31,010
you I

859
00:48:31,001 --> 00:48:34,014
on once you're finished receiving all
the pending events from your initial

860
00:48:34,014 --> 00:48:34,743
session

861
00:48:34,869 --> 00:48:38,440
will deliver the URL session did finish
events for background you're all session

862
00:48:38,044 --> 00:48:42,143
message to your an issue of session
Dahlia and this is an indication of when

863
00:48:42,539 --> 00:48:43,700
it's a good time to call

864
00:48:43,007 --> 00:48:48,014
your completion handler pastor you
application delegate

865
00:48:48,077 --> 00:48:52,176
I'd also like to talk about using data
tasks in background sessions

866
00:48:52,869 --> 00:48:55,964
steve mentioned earlier that data tasks
instead of downloading to a file

867
00:48:56,819 --> 00:49:00,190
or done desk will just deliver on

868
00:49:00,019 --> 00:49:04,038
did receive data call backs in memory
now data tasks were unavailable in

869
00:49:04,038 --> 00:49:05,046
background sessions

870
00:49:05,046 --> 00:49:09,091
in Iowa 70 west and maverick's but
they're now available and I was 8

871
00:49:09,091 --> 00:49:12,119
and Western you're somebody with like
this that one restriction

872
00:49:13,019 --> 00:49:16,118
which is that we were only perform a day
to task in the background sessions

873
00:49:17,018 --> 00:49:21,427
why your app is actually running if your
apt it suspended or is terminated

874
00:49:21,589 --> 00:49:24,614
then there's no one to deliver that data
to so it makes no sense for us to

875
00:49:24,839 --> 00:49:25,937
continue performing at

876
00:49:26,819 --> 00:49:30,490
however you can convert it to a download

877
00:49:30,049 --> 00:49:33,116
when you receive a response and Steve
alluded to this perlier when talking

878
00:49:34,016 --> 00:49:36,068
about the did receive response call back

879
00:49:36,068 --> 00:49:39,697
and that delegate message provide a
completion handler

880
00:49:40,309 --> 00:49:43,365
and you can pass an issue of session
response become download

881
00:49:43,869 --> 00:49:46,911
to that completion handler and then
we'll start streaming the bites to a

882
00:49:47,289 --> 00:49:49,480
filing describing in memory

883
00:49:49,048 --> 00:49:53,387
and once you do that this is becomes a
download that can be continued even if

884
00:49:53,819 --> 00:49:56,848
after your app a suspended or exits

885
00:49:57,109 --> 00:50:00,710
now I'd like to talk about a couple
common pitfalls that we've seen perhaps

886
00:50:00,071 --> 00:50:02,440
in the past when using background
sessions

887
00:50:03,079 --> 00:50:06,940
on one common pattern that we've seen
that we'd like develop urs to avoid is a

888
00:50:06,094 --> 00:50:08,693
pattern where they create one task at a
time

889
00:50:09,539 --> 00:50:13,240
so you might for instance be downloading
a large video from your server that

890
00:50:13,024 --> 00:50:15,078
split up into many different smaller
segments

891
00:50:15,078 --> 00:50:18,587
each a separate file if you download all
of these

892
00:50:19,289 --> 00:50:23,160
and if you that's a create a download
task for the first task

893
00:50:23,016 --> 00:50:26,455
for the first asset and then create a
second download half the next ass at

894
00:50:26,599 --> 00:50:28,510
once the first one completes

895
00:50:28,051 --> 00:50:31,117
this is a really bad pattern
particularly because if the user

896
00:50:32,017 --> 00:50:36,065
suspends the app by going to the by
going to Home screen at any point

897
00:50:36,065 --> 00:50:39,120
then you actually need to be relaunched
in the background in order for

898
00:50:40,002 --> 00:50:43,341
went once their current download
finishes before you came to your next

899
00:50:43,539 --> 00:50:44,230
one

900
00:50:44,023 --> 00:50:46,632
and this means because it running in the
background it will automatically be

901
00:50:46,839 --> 00:50:47,936
treated as discretionary

902
00:50:48,809 --> 00:50:52,210
which means we won't guarantee that it
will start right away

903
00:50:52,021 --> 00:50:55,920
in particular even if conditions are
great where r a hundred percent charged

904
00:50:56,109 --> 00:50:56,156
and on

905
00:50:56,579 --> 00:50:59,670
connected to a power source and we have

906
00:50:59,067 --> 00:51:02,096
were connected to a great WiFi network
we still make no guarantees that will

907
00:51:02,096 --> 00:51:02,925
start right away

908
00:51:03,789 --> 00:51:06,797
and in particular the system will take
measures to prevent your out from being

909
00:51:06,869 --> 00:51:07,936
watched too frequently

910
00:51:08,539 --> 00:51:12,150
and you can't rely on launches for
background sessions for any sort of

911
00:51:12,015 --> 00:51:12,097
regular

912
00:51:12,097 --> 00:51:15,145
launch events and tying in with this

913
00:51:16,045 --> 00:51:19,102
it's much better if instead of
downloading muchas blot a small assets

914
00:51:20,002 --> 00:51:20,047
like this

915
00:51:20,047 --> 00:51:23,946
if you can set these up on your server
into one large zipped asset that's much

916
00:51:24,369 --> 00:51:25,020
more efficent

917
00:51:25,002 --> 00:51:28,581
a fishing for a background download and
finally blocking

918
00:51:28,599 --> 00:51:32,240
while waiting for transfers to complete
is just a really bad idea when doing any

919
00:51:32,024 --> 00:51:33,040
kind of networking

920
00:51:33,004 --> 00:51:36,007
but particularly bad in a back room
session where we recover from network

921
00:51:36,043 --> 00:51:38,094
failures automatically and don't tell
you about them

922
00:51:38,094 --> 00:51:43,190
and again for discretionary transfers
were not guaranteed to start right away

923
00:51:44,009 --> 00:51:47,428
I'd also like to go over a couple best
practices for using background sessions

924
00:51:48,319 --> 00:51:49,190
and also

925
00:51:49,019 --> 00:51:53,128
initial session in general one common
mistake that we think

926
00:51:53,299 --> 00:51:56,420
some people have made in the past is
that they've assume that when

927
00:51:56,042 --> 00:51:59,411
running in the background to handle
things like a background patch update

928
00:51:59,789 --> 00:52:01,440
for a solid push notification

929
00:52:01,044 --> 00:52:04,049
that they've been required to use da
concessions now using background

930
00:52:04,094 --> 00:52:06,149
uploader downloads with these forms have
multitasking

931
00:52:07,049 --> 00:52:11,124
and works really well on this but in
particular for large downloads

932
00:52:12,024 --> 00:52:15,103
when you're running for a background
patch update Arsalan push notification

933
00:52:15,319 --> 00:52:19,490
as I said you'll have about 30 to 60
seconds to run in the background

934
00:52:19,049 --> 00:52:22,053
now if you have any small networking
tasks

935
00:52:22,053 --> 00:52:24,138
that could finish with this time it's
perfectly OK to do the minute in

936
00:52:25,038 --> 00:52:26,487
processor to fault

937
00:52:26,829 --> 00:52:31,190
an issue all session and so if you have
something like a Twitter client that's

938
00:52:31,019 --> 00:52:33,095
gonna be downloading a few tweets for a
background patch update

939
00:52:33,095 --> 00:52:36,148
that's totally doable in process on the
other hand

940
00:52:37,048 --> 00:52:40,053
if you want to download you know the
next episode of a TV series that

941
00:52:40,053 --> 00:52:40,146
something but

942
00:52:41,046 --> 00:52:44,050
that fairly large in probably not gonna
finish within the 32nd

943
00:52:44,005 --> 00:52:49,084
the 62nd you have to run and that should
be done a background session

944
00:52:49,579 --> 00:52:53,960
and it's also important but you support
resumable downloads on your servers

945
00:52:53,096 --> 00:52:57,465
as I mentioned in a back room session we
retry automatically after network

946
00:52:58,329 --> 00:53:01,329
failures if the user goes off have wifi
for instance

947
00:53:01,329 --> 00:53:04,408
so if you support resume all downloads
we don't have to redownload bites we've

948
00:53:05,119 --> 00:53:06,138
already received

949
00:53:06,309 --> 00:53:09,309
and but if you don't then we have to
start from the beginning

950
00:53:09,309 --> 00:53:12,700
now supporting resumable downloads is
generally just as simple as supporting

951
00:53:12,007 --> 00:53:14,176
range get requests on your servers and
most

952
00:53:14,869 --> 00:53:18,680
servers should support this
configuration at the box

953
00:53:18,068 --> 00:53:21,103
finally it's very important that you
handle launch events properly

954
00:53:22,003 --> 00:53:25,032
and as I talked about before this means
when you get

955
00:53:25,059 --> 00:53:28,730
and launch to handle a back run session
you should reconnect to that background

956
00:53:28,073 --> 00:53:28,942
session

957
00:53:29,599 --> 00:53:33,480
and handle any a and messages this is
particularly important with

958
00:53:33,048 --> 00:53:33,057
authentication

959
00:53:34,038 --> 00:53:37,237
because if you don't responded
authentication challenge then

960
00:53:37,579 --> 00:53:41,220
that task will timeout and fail and
that's not what the user wants

961
00:53:41,022 --> 00:53:44,591
finally be sure to call the completion
handler that's called that Pastor you

962
00:53:44,789 --> 00:53:45,815
application delegate

963
00:53:46,049 --> 00:53:49,053
as I said before this allows your you
like to be up to date on the app

964
00:53:49,089 --> 00:53:49,720
switcher

965
00:53:49,072 --> 00:53:52,075
and makes it so ya Perseus pended after
it's completed instead of being

966
00:53:52,075 --> 00:53:54,152
terminated

967
00:53:55,052 --> 00:53:58,091
I before wrap up I just like to give a
brief summary a

968
00:53:58,559 --> 00:54:02,400
what we discussed today so first we
talked about new API's industry

969
00:54:02,004 --> 00:54:03,078
management service

970
00:54:04,014 --> 00:54:08,173
I we gave a review of an issue of
abusing an issue of session

971
00:54:08,299 --> 00:54:12,910
and from what we talked about last
year's Derby BBC session

972
00:54:12,091 --> 00:54:15,103
we talked about speedy and new protocol
support

973
00:54:16,003 --> 00:54:19,098
and went over on some new features and
best use cases in

974
00:54:19,098 --> 00:54:23,217
a background networking and

975
00:54:24,099 --> 00:54:27,640
so in case you don't have to get the
chance to ask us any questions in person

976
00:54:27,064 --> 00:54:28,089
this week while you're here

977
00:54:28,089 --> 00:54:31,117
appalled and bold is our technologies
evangelist

978
00:54:32,017 --> 00:54:34,956
and he's a great person to ask for any
questions that you might have that you

979
00:54:35,109 --> 00:54:36,131
don't get a chance to ask us

980
00:54:36,329 --> 00:54:40,357
while you're here on there we also have
plenty of documentation available at

981
00:54:40,609 --> 00:54:42,530
developer tap about.com including

982
00:54:42,053 --> 00:54:46,142
for an issue all session and the Apple
Developer forms another great place to

983
00:54:46,619 --> 00:54:49,710
ask questions that you don't get to ask
why you're here

984
00:54:49,071 --> 00:54:52,073
an I'd also like to point you in a
couple related sessions

985
00:54:52,073 --> 00:54:55,119
that are going on this week in
particular you might be interested India

986
00:54:56,019 --> 00:55:00,198
extensions sessions there are two a bum
and you can learn more about creating ap

987
00:55:00,369 --> 00:55:03,690
extensions and we'll also talk a little
bit about using background sessions in

988
00:55:03,069 --> 00:55:07,141
ap extensions and with that I'd like to
thank you all for coming and we look

989
00:55:08,041 --> 00:55:10,660
forward to seeing the groom a synapse
you create with Iowa State

990
00:55:11,029 --> 00:55:12,080
anti-western yosemite

